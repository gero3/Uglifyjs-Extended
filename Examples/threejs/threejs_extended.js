var THREE=THREE||{REVISION:"49"};self.Int32Array||(self.Int32Array=Array,self.Float32Array=Array),function(){var a=0,b=["ms","moz","webkit","o"];for(var c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];window.requestAnimationFrame||(window.requestAnimationFrame=function(b,c){var d=Date.now(),e=Math.max(0,16-(d-a)),f=window.setTimeout(function(){b(d+e)},e);return a=d+e,f}),window.cancelAnimationFrame||(window.cancelAnimationFrame=function(a){clearTimeout(a)})}(),THREE.Clock=function(a){var b=this;b.autoStart=a!==undefined?a:!0,b.startTime=0,b.oldTime=0,b.elapsedTime=0,b.running=!1},THREE.Clock.prototype.start=function(){var a=this;a.startTime=Date.now(),a.oldTime=a.startTime,a.running=!0},THREE.Clock.prototype.stop=function(){this.getElapsedTime(),this.running=!1},THREE.Clock.prototype.getElapsedTime=function(){return this.elapsedTime+=this.getDelta(),this.elapsedTime},THREE.Clock.prototype.getDelta=function(){var a=this,b=0;a.autoStart&&!a.running&&a.start();if(a.running){var c=Date.now();b=.001*(c-a.oldTime),a.oldTime=c,a.elapsedTime+=b}return b},THREE.Color=function(a){return a!==undefined&&this.setHex(a),this},THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(a){var b=this;return b.r=a.r,b.g=a.g,b.b=a.b,b},copyGammaToLinear:function(a){var b=this;return b.r=a.r*a.r,b.g=a.g*a.g,b.b=a.b*a.b,b},copyLinearToGamma:function(a){var b=this;return b.r=Math.sqrt(a.r),b.g=Math.sqrt(a.g),b.b=Math.sqrt(a.b),b},convertGammaToLinear:function(){var a=this,b=a.r,c=a.g,d=a.b;return a.r=b*b,a.g=c*c,a.b=d*d,a},convertLinearToGamma:function(){var a=this;return a.r=Math.sqrt(a.r),a.g=Math.sqrt(a.g),a.b=Math.sqrt(a.b),a},setRGB:function(a,b,c){var d=this;return d.r=a,d.g=b,d.b=c,d},setHSV:function(a,b,c){var d=this,e,f,g,h,i;if(c===0)d.r=d.g=d.b=0;else{e=Math.floor(a*6),f=a*6-e,g=c*(1-b),h=c*(1-b*f),i=c*(1-b*(1-f));switch(e){case 1:d.r=h,d.g=c,d.b=g;break;case 2:d.r=g,d.g=c,d.b=i;break;case 3:d.r=g,d.g=h,d.b=c;break;case 4:d.r=i,d.g=g,d.b=c;break;case 5:d.r=c,d.g=g,d.b=h;break;case 6:case 0:d.r=c,d.g=i,d.b=g}}return d},setHex:function(a){var b=this;return a=Math.floor(a),b.r=(a>>16&255)/255,b.g=(a>>8&255)/255,b.b=(a&255)/255,b},lerpSelf:function(a,b){var c=this;return c.r+=(a.r-c.r)*b,c.g+=(a.g-c.g)*b,c.b+=(a.b-c.b)*b,c},getHex:function(){return Math.floor(this.r*255)<<16^Math.floor(this.g*255)<<8^Math.floor(this.b*255)},getContextStyle:function(){return"rgb("+Math.floor(this.r*255)+","+Math.floor(this.g*255)+","+Math.floor(this.b*255)+")"},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}},THREE.Vector2=function(a,b){this.x=a||0,this.y=b||0},THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){return this.x=a,this.y=b,this},copy:function(a){return this.x=a.x,this.y=a.y,this},add:function(a,b){return this.x=a.x+b.x,this.y=a.y+b.y,this},addSelf:function(a){return this.x+=a.x,this.y+=a.y,this},sub:function(a,b){return this.x=a.x-b.x,this.y=a.y-b.y,this},subSelf:function(a){return this.x-=a.x,this.y-=a.y,this},multiplyScalar:function(a){return this.x*=a,this.y*=a,this},divideScalar:function(a){var b=this;return a?(b.x/=a,b.y/=a):b.set(0,0),b},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){var a=this;return a.x*a.x+a.y*a.y},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y;return b*b+c*c},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){var c=this;return c.x+=(a.x-c.x)*b,c.y+=(a.y-c.y)*b,c},equals:function(a){return a.x===this.x&&a.y===this.y},isZero:function(){return this.lengthSq()<1e-4},clone:function(){return new THREE.Vector2(this.x,this.y)}},THREE.Vector3=function(a,b,c){this.x=a||0,this.y=b||0,this.z=c||0},THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){var d=this;return d.x=a,d.y=b,d.z=c,d},setX:function(a){return this.x=a,this},setY:function(a){return this.y=a,this},setZ:function(a){return this.z=a,this},copy:function(a){var b=this;return b.x=a.x,b.y=a.y,b.z=a.z,b},add:function(a,b){var c=this;return c.x=a.x+b.x,c.y=a.y+b.y,c.z=a.z+b.z,c},addSelf:function(a){var b=this;return b.x+=a.x,b.y+=a.y,b.z+=a.z,b},addScalar:function(a){var b=this;return b.x+=a,b.y+=a,b.z+=a,b},sub:function(a,b){var c=this;return c.x=a.x-b.x,c.y=a.y-b.y,c.z=a.z-b.z,c},subSelf:function(a){var b=this;return b.x-=a.x,b.y-=a.y,b.z-=a.z,b},multiply:function(a,b){var c=this;return c.x=a.x*b.x,c.y=a.y*b.y,c.z=a.z*b.z,c},multiplySelf:function(a){var b=this;return b.x*=a.x,b.y*=a.y,b.z*=a.z,b},multiplyScalar:function(a){var b=this;return b.x*=a,b.y*=a,b.z*=a,b},divideSelf:function(a){var b=this;return b.x/=a.x,b.y/=a.y,b.z/=a.z,b},divideScalar:function(a){var b=this;return a?(b.x/=a,b.y/=a,b.z/=a):(b.x=0,b.y=0,b.z=0),b},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){var a=this;return a.x*a.x+a.y*a.y+a.z*a.z},length:function(){return Math.sqrt(this.lengthSq())},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){var c=this;return c.x+=(a.x-c.x)*b,c.y+=(a.y-c.y)*b,c.z+=(a.z-c.z)*b,c},cross:function(a,b){var c=this;return c.x=a.y*b.z-a.z*b.y,c.y=a.z*b.x-a.x*b.z,c.z=a.x*b.y-a.y*b.x,c},crossSelf:function(a){var b=this,c=b.x,d=b.y,e=b.z;return b.x=d*a.z-e*a.y,b.y=e*a.x-c*a.z,b.z=c*a.y-d*a.x,b},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){return(new THREE.Vector3).sub(this,a).lengthSq()},getPositionFromMatrix:function(a){var b=this;return b.x=a.elements[12],b.y=a.elements[13],b.z=a.elements[14],b},getRotationFromMatrix:function(a,b){var c=this,d=b?b.x:1,e=b?b.y:1,f=b?b.z:1,g=a.elements[0]/d,h=a.elements[4]/e,i=a.elements[8]/f,j=a.elements[1]/d,k=a.elements[5]/e,l=a.elements[9]/f,m=a.elements[10]/f;c.y=Math.asin(i);var n=Math.cos(c.y);return Math.abs(n)>1e-5?(c.x=Math.atan2(-l/n,m/n),c.z=Math.atan2(-h/n,g/n)):(c.x=0,c.z=Math.atan2(j,k)),c},getScaleFromMatrix:function(a){var b=this,c=b.set(a.elements[0],a.elements[1],a.elements[2]).length(),d=b.set(a.elements[4],a.elements[5],a.elements[6]).length(),e=b.set(a.elements[8],a.elements[9],a.elements[10]).length();b.x=c,b.y=d,b.z=e},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},isZero:function(){return this.lengthSq()<1e-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}},THREE.Vector4=function(a,b,c,d){var e=this;e.x=a||0,e.y=b||0,e.z=c||0,e.w=d!==undefined?d:1},THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){var e=this;return e.x=a,e.y=b,e.z=c,e.w=d,e},copy:function(a){var b=this;return b.x=a.x,b.y=a.y,b.z=a.z,b.w=a.w!==undefined?a.w:1,b},add:function(a,b){var c=this;return c.x=a.x+b.x,c.y=a.y+b.y,c.z=a.z+b.z,c.w=a.w+b.w,c},addSelf:function(a){var b=this;return b.x+=a.x,b.y+=a.y,b.z+=a.z,b.w+=a.w,b},sub:function(a,b){var c=this;return c.x=a.x-b.x,c.y=a.y-b.y,c.z=a.z-b.z,c.w=a.w-b.w,c},subSelf:function(a){var b=this;return b.x-=a.x,b.y-=a.y,b.z-=a.z,b.w-=a.w,b},multiplyScalar:function(a){var b=this;return b.x*=a,b.y*=a,b.z*=a,b.w*=a,b},divideScalar:function(a){var b=this;return a?(b.x/=a,b.y/=a,b.z/=a,b.w/=a):(b.x=0,b.y=0,b.z=0,b.w=1),b},negate:function(){return this.multiplyScalar(-1)},dot:function(a){var b=this;return b.x*a.x+b.y*a.y+b.z*a.z+b.w*a.w},lengthSq:function(){return this.dot(this)},length:function(){return Math.sqrt(this.lengthSq())},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){return this.normalize().multiplyScalar(a)},lerpSelf:function(a,b){var c=this;return c.x+=(a.x-c.x)*b,c.y+=(a.y-c.y)*b,c.z+=(a.z-c.z)*b,c.w+=(a.w-c.w)*b,c},clone:function(){var a=this;return new THREE.Vector4(a.x,a.y,a.z,a.w)}},THREE.Frustum=function(){this.planes=[new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4,new THREE.Vector4]},THREE.Frustum.prototype.setFromMatrix=function(a){var b,c,d=this.planes,e=a.elements,f=e[0],g=e[1],h=e[2],i=e[3],j=e[4],k=e[5],l=e[6],m=e[7],n=e[8],o=e[9],p=e[10],q=e[11],r=e[12],s=e[13],t=e[14],u=e[15];d[0].set(i-f,m-j,q-n,u-r),d[1].set(i+f,m+j,q+n,u+r),d[2].set(i+g,m+k,q+o,u+s),d[3].set(i-g,m-k,q-o,u-s),d[4].set(i-h,m-l,q-p,u-t),d[5].set(i+h,m+l,q+p,u+t);for(b=0;b<6;b++)c=d[b],c.divideScalar(Math.sqrt(c.x*c.x+c.y*c.y+c.z*c.z))},THREE.Frustum.prototype.contains=function(a){var b,c=this.planes,d=a.matrixWorld,e=d.elements,f=-a.geometry.boundingSphere.radius*d.getMaxScaleOnAxis();for(var g=0;g<6;g++){b=c[g].x*e[12]+c[g].y*e[13]+c[g].z*e[14]+c[g].w;if(b<=f)return!1}return!0},THREE.Frustum.__v1=new THREE.Vector3,THREE.Ray=function(a,b){function t(a,b,c){return n.sub(c,a),q=n.dot(b),r=o.add(a,p.copy(b).multiplyScalar(q)),s=c.distanceTo(r),s}function C(a,b,c,d){return n.sub(d,b),o.sub(c,b),p.sub(a,b),u=n.dot(n),v=n.dot(o),w=n.dot(p),x=o.dot(o),y=o.dot(p),z=1/(u*x-v*v),A=(x*w-v*y)*z,B=(u*y-v*w)*z,A>=0&&B>=0&&A+B<1}var c=this;c.origin=a||new THREE.Vector3,c.direction=b||new THREE.Vector3;var d=1e-4;c.setPrecision=function(a){d=a};var e=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Vector3,h=new THREE.Vector3,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3,m=new THREE.Vector3;c.intersectObject=function(a){var b=this,c,n=[];if(a instanceof THREE.Particle){var o=t(b.origin,b.direction,a.matrixWorld.getPosition());if(o>a.scale.x)return[];c={distance:o,point:a.position,face:null,object:a},n.push(c)}else if(a instanceof THREE.Mesh){var o=t(b.origin,b.direction,a.matrixWorld.getPosition()),p=THREE.Frustum.__v1.set(a.matrixWorld.getColumnX().length(),a.matrixWorld.getColumnY().length(),a.matrixWorld.getColumnZ().length());if(o>a.geometry.boundingSphere.radius*Math.max(p.x,Math.max(p.y,p.z)))return n;var q,r,s,u,v,w=a.geometry,x=w.vertices,y;a.matrixRotationWorld.extractRotation(a.matrixWorld);for(q=0,r=w.faces.length;q<r;q++){s=w.faces[q],i.copy(b.origin),j.copy(b.direction),y=a.matrixWorld,k=y.multiplyVector3(k.copy(s.centroid)).subSelf(i),l=a.matrixRotationWorld.multiplyVector3(l.copy(s.normal)),u=j.dot(l);if(Math.abs(u)<d)continue;v=l.dot(k)/u;if(v<0)continue;if(a.doubleSided||(a.flipSided?u>0:u<0)){m.add(i,j.multiplyScalar(v));if(s instanceof THREE.Face3)e=y.multiplyVector3(e.copy(x[s.a])),f=y.multiplyVector3(f.copy(x[s.b])),g=y.multiplyVector3(g.copy(x[s.c])),C(m,e,f,g)&&(c={distance:i.distanceTo(m),point:m.clone(),face:s,object:a},n.push(c));else if(s instanceof THREE.Face4){e=y.multiplyVector3(e.copy(x[s.a])),f=y.multiplyVector3(f.copy(x[s.b])),g=y.multiplyVector3(g.copy(x[s.c])),h=y.multiplyVector3(h.copy(x[s.d]));if(C(m,e,f,h)||C(m,f,g,h))c={distance:i.distanceTo(m),point:m.clone(),face:s,object:a},n.push(c)}}}}return n},c.intersectObjects=function(a){var b=[];for(var c=0,d=a.length;c<d;c++)Array.prototype.push.apply(b,this.intersectObject(a[c]));return b.sort(function(a,b){return a.distance-b.distance}),b};var n=new THREE.Vector3,o=new THREE.Vector3,p=new THREE.Vector3,q,r,s;var u,v,w,x,y,z,A,B},THREE.Rectangle=function(){function i(){f=d-b,g=e-c}var a=this,b,c,d,e,f,g,h=!0;a.getX=function(){return b},a.getY=function(){return c},a.getWidth=function(){return f},a.getHeight=function(){return g},a.getLeft=function(){return b},a.getTop=function(){return c},a.getRight=function(){return d},a.getBottom=function(){return e},a.set=function(a,f,g,j){h=!1,b=a,c=f,d=g,e=j,i()},a.addPoint=function(a,f){h?(h=!1,b=a,c=f,d=a,e=f,i()):(b=b<a?b:a,c=c<f?c:f,d=d>a?d:a,e=e>f?e:f,i())},a.add3Points=function(a,f,g,j,k,l){h?(h=!1,b=a<g?a<k?a:k:g<k?g:k,c=f<j?f<l?f:l:j<l?j:l,d=a>g?a>k?a:k:g>k?g:k,e=f>j?f>l?f:l:j>l?j:l,i()):(b=a<g?a<k?a<b?a:b:k<b?k:b:g<k?g<b?g:b:k<b?k:b,c=f<j?f<l?f<c?f:c:l<c?l:c:j<l?j<c?j:c:l<c?l:c,d=a>g?a>k?a>d?a:d:k>d?k:d:g>k?g>d?g:d:k>d?k:d,e=f>j?f>l?f>e?f:e:l>e?l:e:j>l?j>e?j:e:l>e?l:e,i())},a.addRectangle=function(a){h?(h=!1,b=a.getLeft(),c=a.getTop(),d=a.getRight(),e=a.getBottom(),i()):(b=b<a.getLeft()?b:a.getLeft(),c=c<a.getTop()?c:a.getTop(),d=d>a.getRight()?d:a.getRight(),e=e>a.getBottom()?e:a.getBottom(),i())},a.inflate=function(a){b-=a,c-=a,d+=a,e+=a,i()},a.minSelf=function(a){b=b>a.getLeft()?b:a.getLeft(),c=c>a.getTop()?c:a.getTop(),d=d<a.getRight()?d:a.getRight(),e=e<a.getBottom()?e:a.getBottom(),i()},a.intersects=function(a){return d<a.getLeft()?!1:b>a.getRight()?!1:e<a.getTop()?!1:c>a.getBottom()?!1:!0},a.empty=function(){h=!0,b=0,c=0,d=0,e=0,i()},a.isEmpty=function(){return h}},THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(.5-Math.random())},sign:function(a){return a<0?-1:a>0?1:0}},THREE.Matrix3=function(){this.elements=new Float32Array(9)},THREE.Matrix3.prototype={constructor:THREE.Matrix3,getInverse:function(a){var b=a.elements,c=b[10]*b[5]-b[6]*b[9],d=-b[10]*b[1]+b[2]*b[9],e=b[6]*b[1]-b[2]*b[5],f=-b[10]*b[4]+b[6]*b[8],g=b[10]*b[0]-b[2]*b[8],h=-b[6]*b[0]+b[2]*b[4],i=b[9]*b[4]-b[5]*b[8],j=-b[9]*b[0]+b[1]*b[8],k=b[5]*b[0]-b[1]*b[4],l=b[0]*c+b[1]*f+b[2]*i;l===0&&console.warn("Matrix3.getInverse(): determinant == 0");var m=1/l,n=this.elements;return n[0]=m*c,n[1]=m*d,n[2]=m*e,n[3]=m*f,n[4]=m*g,n[5]=m*h,n[6]=m*i,n[7]=m*j,n[8]=m*k,this},transpose:function(){var a,b=this.elements;return a=b[1],b[1]=b[3],b[3]=a,a=b[2],b[2]=b[6],b[6]=a,a=b[5],b[5]=b[7],b[7]=a,this},transposeIntoArray:function(a){var b=this.m;return a[0]=b[0],a[1]=b[3],a[2]=b[6],a[3]=b[1],a[4]=b[4],a[5]=b[7],a[6]=b[2],a[7]=b[5],a[8]=b[8],this}},THREE.Matrix4=function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){this.elements=new Float32Array(16),this.set(a!==undefined?a:1,b||0,c||0,d||0,e||0,f!==undefined?f:1,g||0,h||0,i||0,j||0,k!==undefined?k:1,l||0,m||0,n||0,o||0,p!==undefined?p:1)},THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){var q=this.elements;return q[0]=a,q[4]=b,q[8]=c,q[12]=d,q[1]=e,q[5]=f,q[9]=g,q[13]=h,q[2]=i,q[6]=j,q[10]=k,q[14]=l,q[3]=m,q[7]=n,q[11]=o,q[15]=p,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},copy:function(a){var b=a.elements;return this.set(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15]),this},lookAt:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;return g.sub(a,b).normalize(),g.length()===0&&(g.z=1),e.cross(c,g).normalize(),e.length()===0&&(g.x+=1e-4,e.cross(c,g).normalize()),f.cross(g,e),d[0]=e.x,d[4]=f.x,d[8]=g.x,d[1]=e.y,d[5]=f.y,d[9]=g.y,d[2]=e.z,d[6]=f.z,d[10]=g.z,this},multiply:function(a,b){var c=a.elements,d=b.elements,e=this.elements,f=c[0],g=c[4],h=c[8],i=c[12],j=c[1],k=c[5],l=c[9],m=c[13],n=c[2],o=c[6],p=c[10],q=c[14],r=c[3],s=c[7],t=c[11],u=c[15],v=d[0],w=d[4],x=d[8],y=d[12],z=d[1],A=d[5],B=d[9],C=d[13],D=d[2],E=d[6],F=d[10],G=d[14],H=d[3],I=d[7],J=d[11],K=d[15];return e[0]=f*v+g*z+h*D+i*H,e[4]=f*w+g*A+h*E+i*I,e[8]=f*x+g*B+h*F+i*J,e[12]=f*y+g*C+h*G+i*K,e[1]=j*v+k*z+l*D+m*H,e[5]=j*w+k*A+l*E+m*I,e[9]=j*x+k*B+l*F+m*J,e[13]=j*y+k*C+l*G+m*K,e[2]=n*v+o*z+p*D+q*H,e[6]=n*w+o*A+p*E+q*I,e[10]=n*x+o*B+p*F+q*J,e[14]=n*y+o*C+p*G+q*K,e[3]=r*v+s*z+t*D+u*H,e[7]=r*w+s*A+t*E+u*I,e[11]=r*x+s*B+t*F+u*J,e[15]=r*y+s*C+t*G+u*K,this},multiplySelf:function(a){return this.multiply(this,a)},multiplyToArray:function(a,b,c){var d=this.elements;return this.multiply(a,b),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=d[4],c[5]=d[5],c[6]=d[6],c[7]=d[7],c[8]=d[8],c[9]=d[9],c[10]=d[10],c[11]=d[11],c[12]=d[12],c[13]=d[13],c[14]=d[14],c[15]=d[15],this},multiplyScalar:function(a){var b=this.elements;return b[0]*=a,b[4]*=a,b[8]*=a,b[12]*=a,b[1]*=a,b[5]*=a,b[9]*=a,b[13]*=a,b[2]*=a,b[6]*=a,b[10]*=a,b[14]*=a,b[3]*=a,b[7]*=a,b[11]*=a,b[15]*=a,this},multiplyVector3:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=1/(b[3]*c+b[7]*d+b[11]*e+b[15]);return a.x=(b[0]*c+b[4]*d+b[8]*e+b[12])*f,a.y=(b[1]*c+b[5]*d+b[9]*e+b[13])*f,a.z=(b[2]*c+b[6]*d+b[10]*e+b[14])*f,a},multiplyVector4:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w;return a.x=b[0]*c+b[4]*d+b[8]*e+b[12]*f,a.y=b[1]*c+b[5]*d+b[9]*e+b[13]*f,a.z=b[2]*c+b[6]*d+b[10]*e+b[14]*f,a.w=b[3]*c+b[7]*d+b[11]*e+b[15]*f,a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return a.x=c*b[0]+d*b[4]+e*b[8],a.y=c*b[1]+d*b[5]+e*b[9],a.z=c*b[2]+d*b[6]+e*b[10],a.normalize(),a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;return c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w,c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w,c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w,c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1,c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],f=a[1],g=a[5],h=a[9],i=a[13],j=a[2],k=a[6],l=a[10],m=a[14],n=a[3],o=a[7],p=a[11],q=a[15];return e*h*k*n-d*i*k*n-e*g*l*n+c*i*l*n+d*g*m*n-c*h*m*n-e*h*j*o+d*i*j*o+e*f*l*o-b*i*l*o-d*f*m*o+b*h*m*o+e*g*j*p-c*i*j*p-e*f*k*p+b*i*k*p+c*f*m*p-b*g*m*p-d*g*j*q+c*h*j*q+d*f*k*q-b*h*k*q-c*f*l*q+b*g*l*q},transpose:function(){var a=this.elements,b;return b=a[1],a[1]=a[4],a[4]=b,b=a[2],a[2]=a[8],a[8]=b,b=a[6],a[6]=a[9],a[9]=b,b=a[3],a[3]=a[12],a[12]=b,b=a[7],a[7]=a[13],a[13]=b,b=a[11],a[11]=a[14],a[14]=b,this},flattenToArray:function(a){var b=this.elements;return a[0]=b[0],a[1]=b[1],a[2]=b[2],a[3]=b[3],a[4]=b[4],a[5]=b[5],a[6]=b[6],a[7]=b[7],a[8]=b[8],a[9]=b[9],a[10]=b[10],a[11]=b[11],a[12]=b[12],a[13]=b[13],a[14]=b[14],a[15]=b[15],a},flattenToArrayOffset:function(a,b){var c=this.elements;return a[b]=c[0],a[b+1]=c[1],a[b+2]=c[2],a[b+3]=c[3],a[b+4]=c[4],a[b+5]=c[5],a[b+6]=c[6],a[b+7]=c[7],a[b+8]=c[8],a[b+9]=c[9],a[b+10]=c[10],a[b+11]=c[11],a[b+12]=c[12],a[b+13]=c[13],a[b+14]=c[14],a[b+15]=c[15],a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;return b[12]=a.x,b[13]=a.y,b[14]=a.z,this},getColumnX:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a){var b=this.elements,c=a.elements,d=c[0],e=c[4],f=c[8],g=c[12],h=c[1],i=c[5],j=c[9],k=c[13],l=c[2],m=c[6],n=c[10],o=c[14],p=c[3],q=c[7],r=c[11],s=c[15];return b[0]=j*o*q-k*n*q+k*m*r-i*o*r-j*m*s+i*n*s,b[4]=g*n*q-f*o*q-g*m*r+e*o*r+f*m*s-e*n*s,b[8]=f*k*q-g*j*q+g*i*r-e*k*r-f*i*s+e*j*s,b[12]=g*j*m-f*k*m-g*i*n+e*k*n+f*i*o-e*j*o,b[1]=k*n*p-j*o*p-k*l*r+h*o*r+j*l*s-h*n*s,b[5]=f*o*p-g*n*p+g*l*r-d*o*r-f*l*s+d*n*s,b[9]=g*j*p-f*k*p-g*h*r+d*k*r+f*h*s-d*j*s,b[13]=f*k*l-g*j*l+g*h*n-d*k*n-f*h*o+d*j*o,b[2]=i*o*p-k*m*p+k*l*q-h*o*q-i*l*s+h*m*s,b[6]=g*m*p-e*o*p-g*l*q+d*o*q+e*l*s-d*m*s,b[10]=e*k*p-g*i*p+g*h*q-d*k*q-e*h*s+d*i*s,b[14]=g*i*l-e*k*l-g*h*m+d*k*m+e*h*o-d*i*o,b[3]=j*m*p-i*n*p-j*l*q+h*n*q+i*l*r-h*m*r,b[7]=e*n*p-f*m*p+f*l*q-d*n*q-e*l*r+d*m*r,b[11]=f*i*p-e*j*p-f*h*q+d*j*q+e*h*r-d*i*r,b[15]=e*j*l-f*i*l+f*h*m-d*j*m-e*h*n+d*i*n,this.multiplyScalar(1/a.determinant()),this},setRotationFromEuler:function(a,b){var c=this.elements,d=a.x,e=a.y,f=a.z,g=Math.cos(d),h=Math.sin(d),i=Math.cos(e),j=Math.sin(e),k=Math.cos(f),l=Math.sin(f);switch(b){case"YXZ":var m=i*k,n=i*l,o=j*k,p=j*l;c[0]=m+p*h,c[4]=o*h-n,c[8]=g*j,c[1]=g*l,c[5]=g*k,c[9]=-h,c[2]=n*h-o,c[6]=p+m*h,c[10]=g*i;break;case"ZXY":var m=i*k,n=i*l,o=j*k,p=j*l;c[0]=m-p*h,c[4]=-g*l,c[8]=o+n*h,c[1]=n+o*h,c[5]=g*k,c[9]=p-m*h,c[2]=-g*j,c[6]=h,c[10]=g*i;break;case"ZYX":var q=g*k,r=g*l,s=h*k,t=h*l;c[0]=i*k,c[4]=s*j-r,c[8]=q*j+t,c[1]=i*l,c[5]=t*j+q,c[9]=r*j-s,c[2]=-j,c[6]=h*i,c[10]=g*i;break;case"YZX":var u=g*i,v=g*j,w=h*i,x=h*j;c[0]=i*k,c[4]=x-u*l,c[8]=w*l+v,c[1]=l,c[5]=g*k,c[9]=-h*k,c[2]=-j*k,c[6]=v*l+w,c[10]=u-x*l;break;case"XZY":var u=g*i,v=g*j,w=h*i,x=h*j;c[0]=i*k,c[4]=-l,c[8]=j*k,c[1]=u*l+x,c[5]=g*k,c[9]=v*l-w,c[2]=w*l-v,c[6]=h*k,c[10]=x*l+u;break;default:var q=g*k,r=g*l,s=h*k,t=h*l;c[0]=i*k,c[4]=-i*l,c[8]=j,c[1]=r+s*j,c[5]=q-t*j,c[9]=-h*i,c[2]=t-q*j,c[6]=s+r*j,c[10]=g*i}return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,f=a.w,g=c+c,h=d+d,i=e+e,j=c*g,k=c*h,l=c*i,m=d*h,n=d*i,o=e*i,p=f*g,q=f*h,r=f*i;return b[0]=1-(m+o),b[4]=k-r,b[8]=l+q,b[1]=k+r,b[5]=1-(j+o),b[9]=n-p,b[2]=l-q,b[6]=n+p,b[10]=1-(j+m),this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,f=THREE.Matrix4.__m2;return e.identity(),e.setRotationFromQuaternion(b),f.makeScale(c.x,c.y,c.z),this.multiply(e,f),d[12]=a.x,d[13]=a.y,d[14]=a.z,this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,f=THREE.Matrix4.__v2,g=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]),f.set(d[4],d[5],d[6]),g.set(d[8],d[9],d[10]),a=a instanceof THREE.Vector3?a:new THREE.Vector3,b=b instanceof THREE.Quaternion?b:new THREE.Quaternion,c=c instanceof THREE.Vector3?c:new THREE.Vector3,c.x=e.length(),c.y=f.length(),c.z=g.length(),a.x=d[12],a.y=d[13],a.z=d[14];var h=THREE.Matrix4.__m1;return h.copy(this),h.elements[0]/=c.x,h.elements[1]/=c.x,h.elements[2]/=c.x,h.elements[4]/=c.y,h.elements[5]/=c.y,h.elements[6]/=c.y,h.elements[8]/=c.z,h.elements[9]/=c.z,h.elements[10]/=c.z,b.setFromRotationMatrix(h),[a,b,c]},extractPosition:function(a){var b=this.elements,c=a.elements;return b[12]=c[12],b[13]=c[13],b[14]=c[14],this},extractRotation:function(a){var b=this.elements,c=a.elements,d=THREE.Matrix4.__v1,e=1/d.set(c[0],c[1],c[2]).length(),f=1/d.set(c[4],c[5],c[6]).length(),g=1/d.set(c[8],c[9],c[10]).length();return b[0]=c[0]*e,b[1]=c[1]*e,b[2]=c[2]*e,b[4]=c[4]*f,b[5]=c[5]*f,b[6]=c[6]*f,b[8]=c[8]*g,b[9]=c[9]*g,b[10]=c[10]*g,this},translate:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return b[12]=b[0]*c+b[4]*d+b[8]*e+b[12],b[13]=b[1]*c+b[5]*d+b[9]*e+b[13],b[14]=b[2]*c+b[6]*d+b[10]*e+b[14],b[15]=b[3]*c+b[7]*d+b[11]*e+b[15],this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],f=b[7],g=b[8],h=b[9],i=b[10],j=b[11],k=Math.cos(a),l=Math.sin(a);return b[4]=k*c+l*g,b[5]=k*d+l*h,b[6]=k*e+l*i,b[7]=k*f+l*j,b[8]=k*g-l*c,b[9]=k*h-l*d,b[10]=k*i-l*e,b[11]=k*j-l*f,this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[8],h=b[9],i=b[10],j=b[11],k=Math.cos(a),l=Math.sin(a);return b[0]=k*c-l*g,b[1]=k*d-l*h,b[2]=k*e-l*i,b[3]=k*f-l*j,b[8]=k*g+l*c,b[9]=k*h+l*d,b[10]=k*i+l*e,b[11]=k*j+l*f,this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],f=b[3],g=b[4],h=b[5],i=b[6],j=b[7],k=Math.cos(a),l=Math.sin(a);return b[0]=k*c+l*g,b[1]=k*d+l*h,b[2]=k*e+l*i,b[3]=k*f+l*j,b[4]=k*g-l*c,b[5]=k*h-l*d,b[6]=k*i-l*e,b[7]=k*j-l*f,this},rotateByAxis:function(a,b){var c=this,d=c.elements;if(a.x===1&&a.y===0&&a.z===0)return c.rotateX(b);if(a.x===0&&a.y===1&&a.z===0)return c.rotateY(b);if(a.x===0&&a.y===0&&a.z===1)return c.rotateZ(b);var e=a.x,f=a.y,g=a.z,h=Math.sqrt(e*e+f*f+g*g);e/=h,f/=h,g/=h;var i=e*e,j=f*f,k=g*g,l=Math.cos(b),m=Math.sin(b),n=1-l,o=e*f*n,p=e*g*n,q=f*g*n,r=e*m,s=f*m,t=g*m,u=i+(1-i)*l,v=o+t,w=p-s,x=o-t,y=j+(1-j)*l,z=q+r,A=p+s,B=q-r,C=k+(1-k)*l,D=d[0],E=d[1],F=d[2],G=d[3],H=d[4],I=d[5],J=d[6],K=d[7],L=d[8],M=d[9],N=d[10],O=d[11],P=d[12],Q=d[13],R=d[14],S=d[15];return d[0]=u*D+v*H+w*L,d[1]=u*E+v*I+w*M,d[2]=u*F+v*J+w*N,d[3]=u*G+v*K+w*O,d[4]=x*D+y*H+z*L,d[5]=x*E+y*I+z*M,d[6]=x*F+y*J+z*N,d[7]=x*G+y*K+z*O,d[8]=A*D+B*H+C*L,d[9]=A*E+B*I+C*M,d[10]=A*F+B*J+C*N,d[11]=A*G+B*K+C*O,c},scale:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;return b[0]*=c,b[4]*=d,b[8]*=e,b[1]*=c,b[5]*=d,b[9]*=e,b[2]*=c,b[6]*=d,b[10]*=e,b[3]*=c,b[7]*=d,b[11]*=e,this},getMaxScaleOnAxis:function(){var a=this.elements,b=a[0]*a[0]+a[1]*a[1]+a[2]*a[2],c=a[4]*a[4]+a[5]*a[5]+a[6]*a[6],d=a[8]*a[8]+a[9]*a[9]+a[10]*a[10];return Math.sqrt(Math.max(b,Math.max(c,d)))},makeTranslation:function(a,b,c){return this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1),this},makeRotationX:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(1,0,0,0,0,b,-c,0,0,c,b,0,0,0,0,1),this},makeRotationY:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,0,c,0,0,1,0,0,-c,0,b,0,0,0,0,1),this},makeRotationZ:function(a){var b=Math.cos(a),c=Math.sin(a);return this.set(b,-c,0,0,c,b,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,f=a.x,g=a.y,h=a.z,i=e*f,j=e*g;return this.set(i*f+c,i*g-d*h,i*h+d*g,0,i*g+d*h,j*g+c,j*h-d*f,0,i*h-d*g,j*h+d*f,e*h*h+c,0,0,0,0,1),this},makeScale:function(a,b,c){return this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1),this},makeFrustum:function(a,b,c,d,e,f){var g=this.elements,h=2*e/(b-a),i=2*e/(d-c),j=(b+a)/(b-a),k=(d+c)/(d-c),l=-(f+e)/(f-e),m=-2*f*e/(f-e);return g[0]=h,g[4]=0,g[8]=j,g[12]=0,g[1]=0,g[5]=i,g[9]=k,g[13]=0,g[2]=0,g[6]=0,g[10]=l,g[14]=m,g[3]=0,g[7]=0,g[11]=-1,g[15]=0,this},makePerspective:function(a,b,c,d){var e=c*Math.tan(a*Math.PI/360),f=-e,g=f*b,h=e*b;return this.makeFrustum(g,h,f,e,c,d)},makeOrthographic:function(a,b,c,d,e,f){var g=this.elements,h=b-a,i=c-d,j=f-e,k=(b+a)/h,l=(c+d)/i,m=(f+e)/j;return g[0]=2/h,g[4]=0,g[8]=0,g[12]=-k,g[1]=0,g[5]=2/i,g[9]=0,g[13]=-l,g[2]=0,g[6]=0,g[10]=-2/j,g[14]=-m,g[3]=0,g[7]=0,g[11]=0,g[15]=1,this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}},THREE.Matrix4.__v1=new THREE.Vector3,THREE.Matrix4.__v2=new THREE.Vector3,THREE.Matrix4.__v3=new THREE.Vector3,THREE.Matrix4.__m1=new THREE.Matrix4,THREE.Matrix4.__m2=new THREE.Matrix4,THREE.Object3D=function(){var a=this;a.id=THREE.Object3DCount++,a.name="",a.parent=undefined,a.children=[],a.up=new THREE.Vector3(0,1,0),a.position=new THREE.Vector3,a.rotation=new THREE.Vector3,a.eulerOrder="XYZ",a.scale=new THREE.Vector3(1,1,1),a.doubleSided=!1,a.flipSided=!1,a.renderDepth=null,a.rotationAutoUpdate=!0,a.matrix=new THREE.Matrix4,a.matrixWorld=new THREE.Matrix4,a.matrixRotationWorld=new THREE.Matrix4,a.matrixAutoUpdate=!0,a.matrixWorldNeedsUpdate=!0,a.quaternion=new THREE.Quaternion,a.useQuaternion=!1,a.boundRadius=0,a.boundRadiusScale=1,a.visible=!0,a.castShadow=!1,a.receiveShadow=!1,a.frustumCulled=!0,a._vector=new THREE.Vector3},THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){var b=this;b.matrix.multiply(a,b.matrix),b.scale.getScaleFromMatrix(b.matrix),b.rotation.getRotationFromMatrix(b.matrix,b.scale),b.position.getPositionFromMatrix(b.matrix)},translate:function(a,b){this.matrix.rotateAxis(b),this.position.addSelf(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},lookAt:function(a){var b=this;b.matrix.lookAt(a,b.position,b.up),b.rotationAutoUpdate&&b.rotation.getRotationFromMatrix(b.matrix)},add:function(a){var b=this;if(a===b){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");return}if(a instanceof THREE.Object3D){a.parent!==undefined&&a.parent.remove(a),a.parent=b,b.children.push(a);var c=b;while(c.parent!==undefined)c=c.parent;c!==undefined&&c instanceof THREE.Scene&&c.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(b!==-1){a.parent=undefined,this.children.splice(b,1);var c=this;while(c.parent!==undefined)c=c.parent;c!==undefined&&c instanceof THREE.Scene&&c.__removeObject(a)}},getChildByName:function(a,b){var c,d,e;for(c=0,d=this.children.length;c<d;c++){e=this.children[c];if(e.name===a)return e;if(b){e=e.getChildByName(a,b);if(e!==undefined)return e}}return undefined},updateMatrix:function(){var a=this;a.matrix.setPosition(a.position),a.useQuaternion?a.matrix.setRotationFromQuaternion(a.quaternion):a.matrix.setRotationFromEuler(a.rotation,a.eulerOrder);if(a.scale.x!==1||a.scale.y!==1||a.scale.z!==1)a.matrix.scale(a.scale),a.boundRadiusScale=Math.max(a.scale.x,Math.max(a.scale.y,a.scale.z));a.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){var b=this;b.matrixAutoUpdate&&b.updateMatrix();if(b.matrixWorldNeedsUpdate||a)b.parent?b.matrixWorld.multiply(b.parent.matrixWorld,b.matrix):b.matrixWorld.copy(b.matrix),b.matrixWorldNeedsUpdate=!1,a=!0;for(var c=0,d=b.children.length;c<d;c++)b.children[c].updateMatrixWorld(a)}},THREE.Object3DCount=0,THREE.Projector=function(){function A(){var a=d[c]=d[c]||new THREE.RenderableObject;return c++,a}function B(){var a=g[f]=g[f]||new THREE.RenderableVertex;return f++,a}function C(){var a=j[i]=j[i]||new THREE.RenderableFace3;return i++,a}function D(){var a=l[k]=l[k]||new THREE.RenderableFace4;return k++,a}function E(){var a=o[n]=o[n]||new THREE.RenderableLine;return n++,a}function F(){var a=r[q]=r[q]||new THREE.RenderableParticle;return q++,a}function G(a,b){return b.z-a.z}function H(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,h=-b.z+b.w;return e>=0&&f>=0&&g>=0&&h>=0?!0:e<0&&f<0||g<0&&h<0?!1:(e<0?c=Math.max(c,e/(e-f)):f<0&&(d=Math.min(d,e/(e-f))),g<0?c=Math.max(c,g/(g-h)):h<0&&(d=Math.min(d,g/(g-h))),d<c?!1:(a.lerpSelf(b,c),b.lerpSelf(a,1-d),!0))}var a=this,b,c,d=[],e,f,g=[],h,i,j=[],k,l=[],m,n,o=[],p,q,r=[],s={objects:[],sprites:[],lights:[],elements:[]},t=new THREE.Vector3,u=new THREE.Vector4,v=new THREE.Matrix4,w=new THREE.Matrix4,x=new THREE.Frustum,y=new THREE.Vector4,z=new THREE.Vector4;a.projectVector=function(a,b){return b.matrixWorldInverse.getInverse(b.matrixWorld),v.multiply(b.projectionMatrix,b.matrixWorldInverse),v.multiplyVector3(a),a},a.unprojectVector=function(a,b){return b.projectionMatrixInverse.getInverse(b.projectionMatrix),v.multiply(b.matrixWorld,b.projectionMatrixInverse),v.multiplyVector3(a),a},a.pickingRay=function(a,b){var c;return a.z=-1,c=new THREE.Vector3(a.x,a.y,1),this.unprojectVector(a,b),this.unprojectVector(c,b),c.subSelf(a).normalize(),new THREE.Ray(a,c)},a.projectGraph=function(a,d){c=0,s.objects.length=0,s.sprites.length=0,s.lights.length=0;var e=function(a){if(a.visible===!1)return;(a instanceof THREE.Mesh||a instanceof THREE.Line)&&(a.frustumCulled===!1||x.contains(a))?(t.copy(a.matrixWorld.getPosition()),v.multiplyVector3(t),b=A(),b.object=a,b.z=t.z,s.objects.push(b)):a instanceof THREE.Sprite||a instanceof THREE.Particle?(t.copy(a.matrixWorld.getPosition()),v.multiplyVector3(t),b=A(),b.object=a,b.z=t.z,s.sprites.push(b)):a instanceof THREE.Light&&s.lights.push(a);for(var c=0,d=a.children.length;c<d;c++)e(a.children[c])};return e(a),d&&s.objects.sort(G),s},a.projectScene=function(a,b,c){var d=b.near,j=b.far,l=!1,o,r,t,A,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,ab,bb,cb,db;i=0,k=0,n=0,q=0,s.elements.length=0,b.parent===undefined&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(b)),a.updateMatrixWorld(),b.matrixWorldInverse.getInverse(b.matrixWorld),v.multiply(b.projectionMatrix,b.matrixWorldInverse),x.setFromMatrix(v),s=this.projectGraph(a,!1);for(o=0,r=s.objects.length;o<r;o++){Q=s.objects[o].object,R=Q.matrixWorld,f=0;if(Q instanceof THREE.Mesh){T=Q.geometry,U=Q.geometry.materials,V=T.vertices,W=T.faces,$=T.faceVertexUvs,S=Q.matrixRotationWorld.extractRotation(R);for(t=0,A=V.length;t<A;t++)e=B(),e.positionWorld.copy(V[t]),R.multiplyVector3(e.positionWorld),e.positionScreen.copy(e.positionWorld),v.multiplyVector4(e.positionScreen),e.positionScreen.x/=e.positionScreen.w,e.positionScreen.y/=e.positionScreen.w,e.visible=e.positionScreen.z>d&&e.positionScreen.z<j;for(I=0,J=W.length;I<J;I++){X=W[I];if(X instanceof THREE.Face3){ab=g[X.a],bb=g[X.b],cb=g[X.c];if(!(ab.visible&&bb.visible&&cb.visible))continue;l=(cb.positionScreen.x-ab.positionScreen.x)*(bb.positionScreen.y-ab.positionScreen.y)-(cb.positionScreen.y-ab.positionScreen.y)*(bb.positionScreen.x-ab.positionScreen.x)<0;if(!Q.doubleSided&&l==Q.flipSided)continue;h=C(),h.v1.copy(ab),h.v2.copy(bb),h.v3.copy(cb)}else if(X instanceof THREE.Face4){ab=g[X.a],bb=g[X.b],cb=g[X.c],db=g[X.d];if(!(ab.visible&&bb.visible&&cb.visible&&db.visible))continue;l=(db.positionScreen.x-ab.positionScreen.x)*(bb.positionScreen.y-ab.positionScreen.y)-(db.positionScreen.y-ab.positionScreen.y)*(bb.positionScreen.x-ab.positionScreen.x)<0||(bb.positionScreen.x-cb.positionScreen.x)*(db.positionScreen.y-cb.positionScreen.y)-(bb.positionScreen.y-cb.positionScreen.y)*(db.positionScreen.x-cb.positionScreen.x)<0;if(!Q.doubleSided&&l==Q.flipSided)continue;h=D(),h.v1.copy(ab),h.v2.copy(bb),h.v3.copy(cb),h.v4.copy(db)}h.normalWorld.copy(X.normal),!l&&(Q.flipSided||Q.doubleSided)&&h.normalWorld.negate(),S.multiplyVector3(h.normalWorld),h.centroidWorld.copy(X.centroid),R.multiplyVector3(h.centroidWorld),h.centroidScreen.copy(h.centroidWorld),v.multiplyVector3(h.centroidScreen),Y=X.vertexNormals;for(K=0,L=Y.length;K<L;K++)Z=h.vertexNormalsWorld[K],Z.copy(Y[K]),!l&&(Q.flipSided||Q.doubleSided)&&Z.negate(),S.multiplyVector3(Z);for(M=0,N=$.length;M<N;M++){_=$[M][I];if(!_)continue;for(O=0,P=_.length;O<P;O++)h.uvs[M][O]=_[O]}h.material=Q.material,h.faceMaterial=X.materialIndex!==null?U[X.materialIndex]:null,h.z=h.centroidScreen.z,s.elements.push(h)}}else if(Q instanceof THREE.Line){w.multiply(v,R),V=Q.geometry.vertices,ab=B(),ab.positionScreen.copy(V[0]),w.multiplyVector4(ab.positionScreen);var eb=Q.type===THREE.LinePieces?2:1;for(t=1,A=V.length;t<A;t++){ab=B(),ab.positionScreen.copy(V[t]),w.multiplyVector4(ab.positionScreen);if((t+1)%eb>0)continue;bb=g[f-2],y.copy(ab.positionScreen),z.copy(bb.positionScreen),H(y,z)&&(y.multiplyScalar(1/y.w),z.multiplyScalar(1/z.w),m=E(),m.v1.positionScreen.copy(y),m.v2.positionScreen.copy(z),m.z=Math.max(y.z,z.z),m.material=Q.material,s.elements.push(m))}}}for(o=0,r=s.sprites.length;o<r;o++)Q=s.sprites[o].object,R=Q.matrixWorld,Q instanceof THREE.Particle&&(u.set(R.elements[12],R.elements[13],R.elements[14],1),v.multiplyVector4(u),u.z/=u.w,u.z>0&&u.z<1&&(p=F(),p.x=u.x/u.w,p.y=u.y/u.w,p.z=u.z,p.rotation=Q.rotation.z,p.scale.x=Q.scale.x*Math.abs(p.x-(u.x+b.projectionMatrix.elements[0])/(u.w+b.projectionMatrix.elements[12])),p.scale.y=Q.scale.y*Math.abs(p.y-(u.y+b.projectionMatrix.elements[5])/(u.w+b.projectionMatrix.elements[13])),p.material=Q.material,s.elements.push(p)));return c&&s.elements.sort(G),s}},THREE.Quaternion=function(a,b,c,d){var e=this;e.x=a||0,e.y=b||0,e.z=c||0,e.w=d!==undefined?d:1},THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){var e=this;return e.x=a,e.y=b,e.z=c,e.w=d,e},copy:function(a){var b=this;return b.x=a.x,b.y=a.y,b.z=a.z,b.w=a.w,b},setFromEuler:function(a){var b=this,c=Math.PI/360,d=a.x*c,e=a.y*c,f=a.z*c,g=Math.cos(e),h=Math.sin(e),i=Math.cos(-f),j=Math.sin(-f),k=Math.cos(d),l=Math.sin(d),m=g*i,n=h*j;return b.w=m*k-n*l,b.x=m*l+n*k,b.y=h*i*k+g*j*l,b.z=g*j*k-h*i*l,b},setFromAxisAngle:function(a,b){var c=this,d=b/2,e=Math.sin(d);return c.x=a.x*e,c.y=a.y*e,c.z=a.z*e,c.w=Math.cos(d),c},setFromRotationMatrix:function(a){function c(a,b){return b<0?-Math.abs(a):Math.abs(a)}var b=this;var d=Math.pow(a.determinant(),1/3);return b.w=Math.sqrt(Math.max(0,d+a.elements[0]+a.elements[5]+a.elements[10]))/2,b.x=Math.sqrt(Math.max(0,d+a.elements[0]-a.elements[5]-a.elements[10]))/2,b.y=Math.sqrt(Math.max(0,d-a.elements[0]+a.elements[5]-a.elements[10]))/2,b.z=Math.sqrt(Math.max(0,d-a.elements[0]-a.elements[5]+a.elements[10]))/2,b.x=c(b.x,a.elements[6]-a.elements[9]),b.y=c(b.y,a.elements[8]-a.elements[2]),b.z=c(b.z,a.elements[1]-a.elements[4]),b.normalize(),b},calculateW:function(){var a=this;return a.w=-Math.sqrt(Math.abs(1-a.x*a.x-a.y*a.y-a.z*a.z)),a},inverse:function(){var a=this;return a.x*=-1,a.y*=-1,a.z*=-1,a},length:function(){var a=this;return Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z+a.w*a.w)},normalize:function(){var a=this,b=Math.sqrt(a.x*a.x+a.y*a.y+a.z*a.z+a.w*a.w);return b===0?(a.x=0,a.y=0,a.z=0,a.w=0):(b=1/b,a.x=a.x*b,a.y=a.y*b,a.z=a.z*b,a.w=a.w*b),a},multiply:function(a,b){var c=this;return c.x=a.x*b.w+a.y*b.z-a.z*b.y+a.w*b.x,c.y=-a.x*b.z+a.y*b.w+a.z*b.x+a.w*b.y,c.z=a.x*b.y-a.y*b.x+a.z*b.w+a.w*b.z,c.w=-a.x*b.x-a.y*b.y-a.z*b.z+a.w*b.w,c},multiplySelf:function(a){var b=this,c=b.x,d=b.y,e=b.z,f=b.w,g=a.x,h=a.y,i=a.z,j=a.w;return b.x=c*j+f*g+d*i-e*h,b.y=d*j+f*h+e*g-c*i,b.z=e*j+f*i+c*h-d*g,b.w=f*j-c*g-d*h-e*i,b},multiplyVector3:function(a,b){var c=this;b||(b=a);var d=a.x,e=a.y,f=a.z,g=c.x,h=c.y,i=c.z,j=c.w,k=j*d+h*f-i*e,l=j*e+i*d-g*f,m=j*f+g*e-h*d,n=-g*d-h*e-i*f;return b.x=k*j+n*-g+l*-i-m*-h,b.y=l*j+n*-h+m*-g-k*-i,b.z=m*j+n*-i+k*-h-l*-g,b},clone:function(){var a=this;return new THREE.Quaternion(a.x,a.y,a.z,a.w)}},THREE.Quaternion.slerp=function(a,b,c,d){var e=a.w*b.w+a.x*b.x+a.y*b.y+a.z*b.z;e<0?(c.w=-b.w,c.x=-b.x,c.y=-b.y,c.z=-b.z,e=-e):c.copy(b);if(Math.abs(e)>=1)return c.w=a.w,c.x=a.x,c.y=a.y,c.z=a.z,c;var f=Math.acos(e),g=Math.sqrt(1-e*e);if(Math.abs(g)<.001)return c.w=.5*(a.w+b.w),c.x=.5*(a.x+b.x),c.y=.5*(a.y+b.y),c.z=.5*(a.z+b.z),c;var h=Math.sin((1-d)*f)/g,i=Math.sin(d*f)/g;return c.w=a.w*h+c.w*i,c.x=a.x*h+c.x*i,c.y=a.y*h+c.y*i,c.z=a.z*h+c.z*i,c},THREE.Vertex=function(){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.")},THREE.Face3=function(a,b,c,d,e,f){var g=this;g.a=a,g.b=b,g.c=c,g.normal=d instanceof THREE.Vector3?d:new THREE.Vector3,g.vertexNormals=d instanceof Array?d:[],g.color=e instanceof THREE.Color?e:new THREE.Color,g.vertexColors=e instanceof Array?e:[],g.vertexTangents=[],g.materialIndex=f,g.centroid=new THREE.Vector3},THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=this,b=new THREE.Face3(a.a,a.b,a.c);b.normal.copy(a.normal),b.color.copy(a.color),b.centroid.copy(a.centroid),b.materialIndex=a.materialIndex;var c,d;for(c=0,d=a.vertexNormals.length;c<d;c++)b.vertexNormals[c]=a.vertexNormals[c].clone();for(c=0,d=a.vertexColors.length;c<d;c++)b.vertexColors[c]=a.vertexColors[c].clone();for(c=0,d=a.vertexTangents.length;c<d;c++)b.vertexTangents[c]=a.vertexTangents[c].clone();return b}},THREE.Face4=function(a,b,c,d,e,f,g){var h=this;h.a=a,h.b=b,h.c=c,h.d=d,h.normal=e instanceof THREE.Vector3?e:new THREE.Vector3,h.vertexNormals=e instanceof Array?e:[],h.color=f instanceof THREE.Color?f:new THREE.Color,h.vertexColors=f instanceof Array?f:[],h.vertexTangents=[],h.materialIndex=g,h.centroid=new THREE.Vector3},THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=this,b=new THREE.Face4(a.a,a.b,a.c,a.d);b.normal.copy(a.normal),b.color.copy(a.color),b.centroid.copy(a.centroid),b.materialIndex=a.materialIndex;var c,d;for(c=0,d=a.vertexNormals.length;c<d;c++)b.vertexNormals[c]=a.vertexNormals[c].clone();for(c=0,d=a.vertexColors.length;c<d;c++)b.vertexColors[c]=a.vertexColors[c].clone();for(c=0,d=a.vertexTangents.length;c<d;c++)b.vertexTangents[c]=a.vertexTangents[c].clone();return b}},THREE.UV=function(a,b){this.u=a||0,this.v=b||0},THREE.UV.prototype={constructor:THREE.UV,set:function(a,b){return this.u=a,this.v=b,this},copy:function(a){return this.u=a.u,this.v=a.v,this},lerpSelf:function(a,b){var c=this;return c.u+=(a.u-c.u)*b,c.v+=(a.v-c.v)*b,c},clone:function(){return new THREE.UV(this.u,this.v)}},THREE.Geometry=function(){var a=this;a.id=THREE.GeometryCount++,a.vertices=[],a.colors=[],a.materials=[],a.faces=[],a.faceUvs=[[]],a.faceVertexUvs=[[]],a.morphTargets=[],a.morphColors=[],a.morphNormals=[],a.skinWeights=[],a.skinIndices=[],a.boundingBox=null,a.boundingSphere=null,a.hasTangents=!1,a.dynamic=!1},THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){var b=this,c=new THREE.Matrix4;c.extractRotation(a);for(var d=0,e=b.vertices.length;d<e;d++){var f=b.vertices[d];a.multiplyVector3(f)}for(var d=0,e=b.faces.length;d<e;d++){var g=b.faces[d];c.multiplyVector3(g.normal);for(var h=0,i=g.vertexNormals.length;h<i;h++)c.multiplyVector3(g.vertexNormals[h]);a.multiplyVector3(g.centroid)}},computeCentroids:function(){var a=this,b,c,d;for(b=0,c=a.faces.length;b<c;b++)d=a.faces[b],d.centroid.set(0,0,0),d instanceof THREE.Face3?(d.centroid.addSelf(a.vertices[d.a]),d.centroid.addSelf(a.vertices[d.b]),d.centroid.addSelf(a.vertices[d.c]),d.centroid.divideScalar(3)):d instanceof THREE.Face4&&(d.centroid.addSelf(a.vertices[d.a]),d.centroid.addSelf(a.vertices[d.b]),d.centroid.addSelf(a.vertices[d.c]),d.centroid.addSelf(a.vertices[d.d]),d.centroid.divideScalar(4))},computeFaceNormals:function(){var a=this,b,c,d,e,f,g,h=new THREE.Vector3,i=new THREE.Vector3;for(b=0,c=a.faces.length;b<c;b++)d=a.faces[b],e=a.vertices[d.a],f=a.vertices[d.b],g=a.vertices[d.c],h.sub(g,f),i.sub(e,f),h.crossSelf(i),h.isZero()||h.normalize(),d.normal.copy(h)},computeVertexNormals:function(){var a=this,b,c,d,e,f,g;if(a.__tmpVertices===undefined){a.__tmpVertices=new Array(a.vertices.length),g=a.__tmpVertices;for(b=0,c=a.vertices.length;b<c;b++)g[b]=new THREE.Vector3;for(d=0,e=a.faces.length;d<e;d++)f=a.faces[d],f instanceof THREE.Face3?f.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:f instanceof THREE.Face4&&(f.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{g=a.__tmpVertices;for(b=0,c=a.vertices.length;b<c;b++)g[b].set(0,0,0)}for(d=0,e=a.faces.length;d<e;d++)f=a.faces[d],f instanceof THREE.Face3?(g[f.a].addSelf(f.normal),g[f.b].addSelf(f.normal),g[f.c].addSelf(f.normal)):f instanceof THREE.Face4&&(g[f.a].addSelf(f.normal),g[f.b].addSelf(f.normal),g[f.c].addSelf(f.normal),g[f.d].addSelf(f.normal));for(b=0,c=a.vertices.length;b<c;b++)g[b].normalize();for(d=0,e=a.faces.length;d<e;d++)f=a.faces[d],f instanceof THREE.Face3?(f.vertexNormals[0].copy(g[f.a]),f.vertexNormals[1].copy(g[f.b]),f.vertexNormals[2].copy(g[f.c])):f instanceof THREE.Face4&&(f.vertexNormals[0].copy(g[f.a]),f.vertexNormals[1].copy(g[f.b]),f.vertexNormals[2].copy(g[f.c]),f.vertexNormals[3].copy(g[f.d]))},computeMorphNormals:function(){var a=this,b,c,d,e,f;for(d=0,e=a.faces.length;d<e;d++){f=a.faces[d],f.__originalFaceNormal?f.__originalFaceNormal.copy(f.normal):f.__originalFaceNormal=f.normal.clone(),f.__originalVertexNormals||(f.__originalVertexNormals=[]);for(b=0,c=f.vertexNormals.length;b<c;b++)f.__originalVertexNormals[b]?f.__originalVertexNormals[b].copy(f.vertexNormals[b]):f.__originalVertexNormals[b]=f.vertexNormals[b].clone()}var g=new THREE.Geometry;g.faces=a.faces;for(b=0,c=a.morphTargets.length;b<c;b++){if(!a.morphNormals[b]){a.morphNormals[b]={},a.morphNormals[b].faceNormals=[],a.morphNormals[b].vertexNormals=[];var h=a.morphNormals[b].faceNormals,i=a.morphNormals[b].vertexNormals,j,k;for(d=0,e=a.faces.length;d<e;d++)f=a.faces[d],j=new THREE.Vector3,f instanceof THREE.Face3?k={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:k={a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},h.push(j),i.push(k)}var l=a.morphNormals[b];g.vertices=a.morphTargets[b].vertices,g.computeFaceNormals(),g.computeVertexNormals();var j,k;for(d=0,e=a.faces.length;d<e;d++)f=a.faces[d],j=l.faceNormals[d],k=l.vertexNormals[d],j.copy(f.normal),f instanceof THREE.Face3?(k.a.copy(f.vertexNormals[0]),k.b.copy(f.vertexNormals[1]),k.c.copy(f.vertexNormals[2])):(k.a.copy(f.vertexNormals[0]),k.b.copy(f.vertexNormals[1]),k.c.copy(f.vertexNormals[2]),k.d.copy(f.vertexNormals[3]))}for(d=0,e=a.faces.length;d<e;d++)f=a.faces[d],f.normal=f.__originalFaceNormal,f.vertexNormals=f.__originalVertexNormals},computeTangents:function(){function K(a,b,c,d,e,f,g){j=a.vertices[b],k=a.vertices[c],l=a.vertices[d],m=i[e],n=i[f],o=i[g],p=k.x-j.x,q=l.x-j.x,r=k.y-j.y,s=l.y-j.y,t=k.z-j.z,u=l.z-j.z,v=n.u-m.u,w=o.u-m.u,x=n.v-m.v,y=o.v-m.v,z=1/(v*y-w*x),E.set((y*p-x*q)*z,(y*r-x*s)*z,(y*t-x*u)*z),F.set((v*q-w*p)*z,(v*s-w*r)*z,(v*u-w*t)*z),C[b].addSelf(E),C[c].addSelf(E),C[d].addSelf(E),D[b].addSelf(F),D[c].addSelf(F),D[d].addSelf(F)}var a=this,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C=[],D=[],E=new THREE.Vector3,F=new THREE.Vector3,G=new THREE.Vector3,H=new THREE.Vector3,I=new THREE.Vector3,J;for(d=0,e=a.vertices.length;d<e;d++)C[d]=new THREE.Vector3,D[d]=new THREE.Vector3;for(b=0,c=a.faces.length;b<c;b++)h=a.faces[b],i=a.faceVertexUvs[0][b],h instanceof THREE.Face3?K(a,h.a,h.b,h.c,0,1,2):h instanceof THREE.Face4&&(K(a,h.a,h.b,h.d,0,1,3),K(a,h.b,h.c,h.d,1,2,3));var L=["a","b","c","d"];for(b=0,c=a.faces.length;b<c;b++){h=a.faces[b];for(f=0;f<h.vertexNormals.length;f++)I.copy(h.vertexNormals[f]),g=h[L[f]],A=C[g],G.copy(A),G.subSelf(I.multiplyScalar(I.dot(A))).normalize(),H.cross(h.vertexNormals[f],A),B=H.dot(D[g]),J=B<0?-1:1,h.vertexTangents[f]=new THREE.Vector4(G.x,G.y,G.z,J)}a.hasTangents=!0},computeBoundingBox:function(){var a=this;a.boundingBox||(a.boundingBox={min:new THREE.Vector3,max:new THREE.Vector3});if(a.vertices.length>0){var b,c=a.vertices[0];a.boundingBox.min.copy(c),a.boundingBox.max.copy(c);var d=a.boundingBox.min,e=a.boundingBox.max;for(var f=1,g=a.vertices.length;f<g;f++)b=a.vertices[f],b.x<d.x?d.x=b.x:b.x>e.x&&(e.x=b.x),b.y<d.y?d.y=b.y:b.y>e.y&&(e.y=b.y),b.z<d.z?d.z=b.z:b.z>e.z&&(e.z=b.z)}else a.boundingBox.min.set(0,0,0),a.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){var a=this;a.boundingSphere||(a.boundingSphere={radius:0});var b,c=0;for(var d=0,e=a.vertices.length;d<e;d++)b=a.vertices[d].length(),b>c&&(c=b);a.boundingSphere.radius=c},mergeVertices:function(){var a=this,b={},c=[],d=[],e,f,g=4,h=Math.pow(10,g),i,j,k,l="abcd",m,n,o,p,q;for(i=0,j=a.vertices.length;i<j;i++)e=a.vertices[i],f=[Math.round(e.x*h),Math.round(e.y*h),Math.round(e.z*h)].join("_"),b[f]===undefined?(b[f]=i,c.push(a.vertices[i]),d[i]=c.length-1):d[i]=d[b[f]];for(i=0,j=a.faces.length;i<j;i++){k=a.faces[i];if(k instanceof THREE.Face3)k.a=d[k.a],k.b=d[k.b],k.c=d[k.c];else if(k instanceof THREE.Face4){k.a=d[k.a],k.b=d[k.b],k.c=d[k.c],k.d=d[k.d],m=[k.a,k.b,k.c,k.d];for(n=3;n>0;n--)if(m.indexOf(k[l[n]])!=n){m.splice(n,1),a.faces[i]=new THREE.Face3(m[0],m[1],m[2]);for(o=0,p=a.faceVertexUvs.length;o<p;o++)q=a.faceVertexUvs[o][i],q&&q.splice(n,1);break}}}var r=a.vertices.length-c.length;return a.vertices=c,r}},THREE.GeometryCount=0,THREE.Spline=function(a){function n(a,b,c,d,e,f,g){var h=(c-a)*.5,i=(d-b)*.5;return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b}var b=this;b.points=a;var c=[],d={x:0,y:0,z:0},e,f,g,h,i,j,k,l,m;b.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}},b.getPoint=function(a){var b=this;return e=(b.points.length-1)*a,f=Math.floor(e),g=e-f,c[0]=f===0?f:f-1,c[1]=f,c[2]=f>b.points.length-2?b.points.length-1:f+1,c[3]=f>b.points.length-3?b.points.length-1:f+2,j=b.points[c[0]],k=b.points[c[1]],l=b.points[c[2]],m=b.points[c[3]],h=g*g,i=g*h,d.x=n(j.x,k.x,l.x,m.x,g,h,i),d.y=n(j.y,k.y,l.y,m.y,g,h,i),d.z=n(j.z,k.z,l.z,m.z,g,h,i),d},b.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d},b.getLength=function(a){var b=this,c,d,e,f,g=0,h=0,i=0,j=new THREE.Vector3,k=new THREE.Vector3,l=[],m=0;l[0]=0,a||(a=100),e=b.points.length*a,j.copy(b.points[0]);for(c=1;c<e;c++)d=c/e,f=b.getPoint(d),k.copy(f),m+=k.distanceTo(j),j.copy(f),g=(b.points.length-1)*d,h=Math.floor(g),h!=i&&(l[h]=m,i=h);return l[l.length]=m,{chunks:l,total:m}},b.reparametrizeByArcLength=function(a){var b=this,c,d,e,f,g,h,i,j,k=[],l=new THREE.Vector3,m=b.getLength();k.push(l.copy(b.points[0]).clone());for(c=1;c<b.points.length;c++){h=m.chunks[c]-m.chunks[c-1],i=Math.ceil(a*h/m.total),f=(c-1)/(b.points.length-1),g=c/(b.points.length-1);for(d=1;d<i-1;d++)e=f+d*(1/i)*(g-f),j=b.getPoint(e),k.push(l.copy(j).clone());k.push(l.copy(b.points[c]).clone())}b.points=k}},THREE.Camera=function(){var a=this;THREE.Object3D.call(a),a.matrixWorldInverse=new THREE.Matrix4,a.projectionMatrix=new THREE.Matrix4,a.projectionMatrixInverse=new THREE.Matrix4},THREE.Camera.prototype=new THREE.Object3D,THREE.Camera.prototype.constructor=THREE.Camera,THREE.Camera.prototype.lookAt=function(a){var b=this;b.matrix.lookAt(b.position,a,b.up),b.rotationAutoUpdate&&b.rotation.getRotationFromMatrix(b.matrix)},THREE.OrthographicCamera=function(a,b,c,d,e,f){var g=this;THREE.Camera.call(g),g.left=a,g.right=b,g.top=c,g.bottom=d,g.near=e!==undefined?e:.1,g.far=f!==undefined?f:2e3,g.updateProjectionMatrix()},THREE.OrthographicCamera.prototype=new THREE.Camera,THREE.OrthographicCamera.prototype.constructor=THREE.OrthographicCamera,THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){var a=this;a.projectionMatrix.makeOrthographic(a.left,a.right,a.top,a.bottom,a.near,a.far)},THREE.PerspectiveCamera=function(a,b,c,d){var e=this;THREE.Camera.call(e),e.fov=a!==undefined?a:50,e.aspect=b!==undefined?b:1,e.near=c!==undefined?c:.1,e.far=d!==undefined?d:2e3,e.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype=new THREE.Camera,THREE.PerspectiveCamera.prototype.constructor=THREE.PerspectiveCamera,THREE.PerspectiveCamera.prototype.setLens=function(a,b){b=b!==undefined?b:24,this.fov=2*Math.atan(b/(a*2))*(180/Math.PI),this.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,f){var g=this;g.fullWidth=a,g.fullHeight=b,g.x=c,g.y=d,g.width=e,g.height=f,g.updateProjectionMatrix()},THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){var a=this;if(a.fullWidth){var b=a.fullWidth/a.fullHeight,c=Math.tan(a.fov*Math.PI/360)*a.near,d=-c,e=b*d,f=b*c,g=Math.abs(f-e),h=Math.abs(c-d);a.projectionMatrix.makeFrustum(e+a.x*g/a.fullWidth,e+(a.x+a.width)*g/a.fullWidth,c-(a.y+a.height)*h/a.fullHeight,c-a.y*h/a.fullHeight,a.near,a.far)}else a.projectionMatrix.makePerspective(a.fov,a.aspect,a.near,a.far)},THREE.Light=function(a){THREE.Object3D.call(this),this.color=new THREE.Color(a)},THREE.Light.prototype=new THREE.Object3D,THREE.Light.prototype.constructor=THREE.Light,THREE.Light.prototype.supr=THREE.Object3D.prototype,THREE.AmbientLight=function(a){THREE.Light.call(this,a)},THREE.AmbientLight.prototype=new THREE.Light,THREE.AmbientLight.prototype.constructor=THREE.AmbientLight,THREE.DirectionalLight=function(a,b,c){var d=this;THREE.Light.call(d,a),d.position=new THREE.Vector3(0,1,0),d.target=new THREE.Object3D,d.intensity=b!==undefined?b:1,d.distance=c!==undefined?c:0,d.castShadow=!1,d.onlyShadow=!1,d.shadowCameraNear=50,d.shadowCameraFar=5e3,d.shadowCameraLeft=-500,d.shadowCameraRight=500,d.shadowCameraTop=500,d.shadowCameraBottom=-500,d.shadowCameraVisible=!1,d.shadowBias=0,d.shadowDarkness=.5,d.shadowMapWidth=512,d.shadowMapHeight=512,d.shadowCascade=!1,d.shadowCascadeOffset=new THREE.Vector3(0,0,-1e3),d.shadowCascadeCount=2,d.shadowCascadeBias=[0,0,0],d.shadowCascadeWidth=[512,512,512],d.shadowCascadeHeight=[512,512,512],d.shadowCascadeNearZ=[-1,.99,.998],d.shadowCascadeFarZ=[.99,.998,1],d.shadowCascadeArray=[],d.shadowMap=null,d.shadowMapSize=null,d.shadowCamera=null,d.shadowMatrix=null},THREE.DirectionalLight.prototype=new THREE.Light,THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight,THREE.PointLight=function(a,b,c){var d=this;THREE.Light.call(d,a),d.position=new THREE.Vector3(0,0,0),d.intensity=b!==undefined?b:1,d.distance=c!==undefined?c:0},THREE.PointLight.prototype=new THREE.Light,THREE.PointLight.prototype.constructor=THREE.PointLight,THREE.SpotLight=function(a,b,c,d,e){var f=this;THREE.Light.call(f,a),f.position=new THREE.Vector3(0,1,0),f.target=new THREE.Object3D,f.intensity=b!==undefined?b:1,f.distance=c!==undefined?c:0,f.angle=d!==undefined?d:Math.PI/2,f.exponent=e!==undefined?e:10,f.castShadow=!1,f.onlyShadow=!1,f.shadowCameraNear=50,f.shadowCameraFar=5e3,f.shadowCameraFov=50,f.shadowCameraVisible=!1,f.shadowBias=0,f.shadowDarkness=.5,f.shadowMapWidth=512,f.shadowMapHeight=512,f.shadowMap=null,f.shadowMapSize=null,f.shadowCamera=null,f.shadowMatrix=null},THREE.SpotLight.prototype=new THREE.Light,THREE.SpotLight.prototype.constructor=THREE.SpotLight,THREE.Loader=function(a){var b=this;b.showStatus=a,b.statusDomElement=a?THREE.Loader.prototype.addStatusElement():null,b.onLoadStart=function(){},b.onLoadProgress=function(){},b.onLoadComplete=function(){}},THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");return a.style.position="absolute",a.style.right="0px",a.style.top="0px",a.style.fontSize="0.8em",a.style.textAlign="left",a.style.background="rgba(0,0,0,0.25)",a.style.color="#fff",a.style.width="120px",a.style.padding="0.5em 0.5em 0.5em 0.5em",a.style.zIndex=1e3,a.innerHTML="Loading ...",a},updateProgress:function(a){var b="Loaded ";a.total?b+=(100*a.loaded/a.total).toFixed(0)+"%":b+=(a.loaded/1e3).toFixed(2)+" KB",this.statusDomElement.innerHTML=b},extractUrlBase:function(a){var b=a.split("/");return b.pop(),(b.length<1?".":b.join("/"))+"/"},initMaterials:function(a,b,c){a.materials=[];for(var d=0;d<b.length;++d)a.materials[d]=THREE.Loader.prototype.createMaterial(b[d],c)},hasNormals:function(a){var b,c,d=a.materials.length;for(c=0;c<d;c++){b=a.materials[c];if(b instanceof THREE.ShaderMaterial)return!0}return!1},createMaterial:function(a,b){function d(a){var b=Math.log(a)/Math.LN2;return Math.floor(b)==b}function e(a){var b=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(b))}function f(a,b){var f=new Image;f.onload=function(){var b=this;if(!d(b.width)||!d(b.height)){var c=e(b.width),f=e(b.height);a.image.width=c,a.image.height=f,a.image.getContext("2d").drawImage(b,0,0,c,f)}else a.image=b;a.needsUpdate=!0},f.crossOrigin=c.crossOrigin,f.src=b}function g(a,c,d,e,g,h){var i=document.createElement("canvas");a[c]=new THREE.Texture(i),a[c].sourceFile=d,e&&(a[c].repeat.set(e[0],e[1]),e[0]!=1&&(a[c].wrapS=THREE.RepeatWrapping),e[1]!=1&&(a[c].wrapT=THREE.RepeatWrapping)),g&&a[c].offset.set(g[0],g[1]);if(h){var j={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};j[h[0]]!==undefined&&(a[c].wrapS=j[h[0]]),j[h[1]]!==undefined&&(a[c].wrapT=j[h[1]])}f(a[c],b+"/"+d)}function h(a){return(a[0]*255<<16)+(a[1]*255<<8)+a[2]*255}var c=this;var i="MeshLambertMaterial",j={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,wireframe:a.wireframe};if(a.shading){var k=a.shading.toLowerCase();k==="phong"?i="MeshPhongMaterial":k==="basic"&&(i="MeshBasicMaterial")}a.blending!==undefined&&THREE[a.blending]!==undefined&&(j.blending=THREE[a.blending]);if(a.transparent!==undefined||a.opacity<1)j.transparent=a.transparent;a.depthTest!==undefined&&(j.depthTest=a.depthTest),a.depthWrite!==undefined&&(j.depthWrite=a.depthWrite),a.vertexColors!==undefined&&(a.vertexColors=="face"?j.vertexColors=THREE.FaceColors:a.vertexColors&&(j.vertexColors=THREE.VertexColors)),a.colorDiffuse?j.color=h(a.colorDiffuse):a.DbgColor&&(j.color=a.DbgColor),a.colorSpecular&&(j.specular=h(a.colorSpecular)),a.colorAmbient&&(j.ambient=h(a.colorAmbient)),a.transparency&&(j.opacity=a.transparency),a.specularCoef&&(j.shininess=a.specularCoef),a.mapDiffuse&&b&&g(j,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap),a.mapLight&&b&&g(j,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap),a.mapNormal&&b&&g(j,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap),a.mapSpecular&&b&&g(j,"specularMap",a.mapSpecular,a.mapSpecularRepeat,a.mapSpecularOffset,a.mapSpecularWrap);if(a.mapNormal){var l=THREE.ShaderUtils.lib.normal,m=THREE.UniformsUtils.clone(l.uniforms);m.tNormal.texture=j.normalMap,a.mapNormalFactor&&(m.uNormalScale.value=a.mapNormalFactor),j.map&&(m.tDiffuse.texture=j.map,m.enableDiffuse.value=!0),j.specularMap&&(m.tSpecular.texture=j.specularMap,m.enableSpecular.value=!0),j.lightMap&&(m.tAO.texture=j.lightMap,m.enableAO.value=!0),m.uDiffuseColor.value.setHex(j.color),m.uSpecularColor.value.setHex(j.specular),m.uAmbientColor.value.setHex(j.ambient),m.uShininess.value=j.shininess,j.opacity!==undefined&&(m.uOpacity.value=j.opacity);var n={fragmentShader:l.fragmentShader,vertexShader:l.vertexShader,uniforms:m,lights:!0,fog:!0},o=new THREE.ShaderMaterial(n)}else var o=new THREE[i](j);return a.DbgName!==undefined&&(o.name=a.DbgName),o}},THREE.BinaryLoader=function(a){THREE.Loader.call(this,a)},THREE.BinaryLoader.prototype=new THREE.Loader,THREE.BinaryLoader.prototype.constructor=THREE.BinaryLoader,THREE.BinaryLoader.prototype.load=function(a,b,c,d){var e=this;c=c?c:e.extractUrlBase(a),d=d?d:e.extractUrlBase(a);var f=e.showProgress?THREE.Loader.prototype.updateProgress:null;e.onLoadStart(),e.loadAjaxJSON(e,a,b,c,d,f)},THREE.BinaryLoader.prototype.loadAjaxJSON=function(a,b,c,d,e,f){var g=new XMLHttpRequest;g.onreadystatechange=function(){if(g.readyState==4)if(g.status==200||g.status==0){var h=JSON.parse(g.responseText);a.loadAjaxBuffers(h,c,e,d,f)}else console.error("THREE.BinaryLoader: Couldn't load ["+b+"] ["+g.status+"]")},g.open("GET",b,!0),g.overrideMimeType&&g.overrideMimeType("text/plain; charset=x-user-defined"),g.setRequestHeader("Content-Type","text/plain"),g.send(null)},THREE.BinaryLoader.prototype.loadAjaxBuffers=function(a,b,c,d,e){var f=new XMLHttpRequest,g=c+"/"+a.buffers,h=0;f.onreadystatechange=function(){f.readyState==4?f.status==200||f.status==0?THREE.BinaryLoader.prototype.createBinModel(f.response,b,d,a.materials):console.error("THREE.BinaryLoader: Couldn't load ["+g+"] ["+f.status+"]"):f.readyState==3?e&&(h==0&&(h=f.getResponseHeader("Content-Length")),e({total:h,loaded:f.responseText.length})):f.readyState==2&&(h=f.getResponseHeader("Content-Length"))},f.open("GET",g,!0),f.responseType="arraybuffer",f.send(null)},THREE.BinaryLoader.prototype.createBinModel=function(a,b,c,d){function f(a,b,c,d){a.vertices.push(new THREE.Vector3(b,c,d))}function g(a,b,c,d,e){a.faces.push(new THREE.Face3(b,c,d,null,null,e))}function h(a,b,c,d,e,f){a.faces.push(new THREE.Face4(b,c,d,e,null,null,f))}function i(a,b,c,d,e,f,g,h,i){var j=b[g*3],k=b[g*3+1],l=b[g*3+2],m=b[h*3],n=b[h*3+1],o=b[h*3+2],p=b[i*3],q=b[i*3+1],r=b[i*3+2];a.faces.push(new THREE.Face3(c,d,e,[new THREE.Vector3(j,k,l),new THREE.Vector3(m,n,o),new THREE.Vector3(p,q,r)],null,f))}function j(a,b,c,d,e,f,g,h,i,j,k){var l=b[h*3],m=b[h*3+1],n=b[h*3+2],o=b[i*3],p=b[i*3+1],q=b[i*3+2],r=b[j*3],s=b[j*3+1],t=b[j*3+2],u=b[k*3],v=b[k*3+1],w=b[k*3+2];a.faces.push(new THREE.Face4(c,d,e,f,[new THREE.Vector3(l,m,n),new THREE.Vector3(o,p,q),new THREE.Vector3(r,s,t),new THREE.Vector3(u,v,w)],null,g))}function k(a,b,c,d,e,f,g){var h=[];h.push(new THREE.UV(b,c)),h.push(new THREE.UV(d,e)),h.push(new THREE.UV(f,g)),a.push(h)}function l(a,b,c,d,e,f,g,h,i){var j=[];j.push(new THREE.UV(b,c)),j.push(new THREE.UV(d,e)),j.push(new THREE.UV(f,g)),j.push(new THREE.UV(h,i)),a.push(j)}var e=function(b){function I(a){return a%4?4-a%4:0}function J(a,b){var c={signature:K(a,b,12),header_bytes:L(a,b+12),vertex_coordinate_bytes:L(a,b+13),normal_coordinate_bytes:L(a,b+14),uv_coordinate_bytes:L(a,b+15),vertex_index_bytes:L(a,b+16),normal_index_bytes:L(a,b+17),uv_index_bytes:L(a,b+18),material_index_bytes:L(a,b+19),nvertices:M(a,b+20),nnormals:M(a,b+20+4),nuvs:M(a,b+20+8),ntri_flat:M(a,b+20+12),ntri_smooth:M(a,b+20+16),ntri_flat_uv:M(a,b+20+20),ntri_smooth_uv:M(a,b+20+24),nquad_flat:M(a,b+20+28),nquad_smooth:M(a,b+20+32),nquad_flat_uv:M(a,b+20+36),nquad_smooth_uv:M(a,b+20+40)};return c}function K(a,b,c){var d=new Uint8Array(a,b,c),e="";for(var f=0;f<c;f++)e+=String.fromCharCode(d[b+f]);return e}function L(a,b){var c=new Uint8Array(a,b,1);return c[0]}function M(a,b){var c=new Uint32Array(a,b,1);return c[0]}function N(b){var c=n.nvertices,d=new Float32Array(a,b,c*3),g,h,i,j;for(g=0;g<c;g++)h=d[g*3],i=d[g*3+1],j=d[g*3+2],f(e,h,i,j);return c*3*Float32Array.BYTES_PER_ELEMENT}function O(b){var c=n.nnormals;if(c){var d=new Int8Array(a,b,c*3),e,f,g,h;for(e=0;e<c;e++)f=d[e*3],g=d[e*3+1],h=d[e*3+2],o.push(f/127,g/127,h/127)}return c*3*Int8Array.BYTES_PER_ELEMENT}function P(b){var c=n.nuvs;if(c){var d=new Float32Array(a,b,c*2),e,f,g;for(e=0;e<c;e++)f=d[e*2],g=d[e*2+1],p.push(f,g)}return c*2*Float32Array.BYTES_PER_ELEMENT}function Q(b,c){var d,f,g,h,i,j,l,m,n,o,q=new Uint32Array(a,c,3*b);for(d=0;d<b;d++)f=q[d*3],g=q[d*3+1],h=q[d*3+2],i=p[f*2],m=p[f*2+1],j=p[g*2],n=p[g*2+1],l=p[h*2],o=p[h*2+1],k(e.faceVertexUvs[0],i,m,j,n,l,o)}function R(b,c){var d,f,g,h,i,j,k,m,n,o,q,r,s,t=new Uint32Array(a,c,4*b);for(d=0;d<b;d++)f=t[d*4],g=t[d*4+1],h=t[d*4+2],i=t[d*4+3],j=p[f*2],o=p[f*2+1],k=p[g*2],q=p[g*2+1],m=p[h*2],r=p[h*2+1],n=p[i*2],s=p[i*2+1],l(e.faceVertexUvs[0],j,o,k,q,m,r,n,s)}function S(b,c,d){var f,h,i,j,k,l=new Uint32Array(a,c,3*b),m=new Uint16Array(a,d,b);for(f=0;f<b;f++)h=l[f*3],i=l[f*3+1],j=l[f*3+2],k=m[f],g(e,h,i,j,k)}function T(b,c,d){var f,g,i,j,k,l,m=new Uint32Array(a,c,4*b),n=new Uint16Array(a,d,b);for(f=0;f<b;f++)g=m[f*4],i=m[f*4+1],j=m[f*4+2],k=m[f*4+3],l=n[f],h(e,g,i,j,k,l)}function U(b,c,d,f){var g,h,j,k,l,m,n,p,q=new Uint32Array(a,c,3*b),r=new Uint32Array(a,d,3*b),s=new Uint16Array(a,f,b);for(g=0;g<b;g++)h=q[g*3],j=q[g*3+1],k=q[g*3+2],m=r[g*3],n=r[g*3+1],p=r[g*3+2],l=s[g],i(e,o,h,j,k,l,m,n,p)}function V(b,c,d,f){var g,h,i,k,l,m,n,p,q,r,s=new Uint32Array(a,c,4*b),t=new Uint32Array(a,d,4*b),u=new Uint16Array(a,f,b);for(g=0;g<b;g++)h=s[g*4],i=s[g*4+1],k=s[g*4+2],l=s[g*4+3],n=t[g*4],p=t[g*4+1],q=t[g*4+2],r=t[g*4+3],m=u[g],j(e,o,h,i,k,l,m,n,p,q,r)}function W(a){var b=n.ntri_flat;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*3;S(b,a,c)}}function X(a){var b=n.ntri_flat_uv;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*3,d=c+b*Uint32Array.BYTES_PER_ELEMENT*3;S(b,a,d),Q(b,c)}}function Y(a){var b=n.ntri_smooth;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*3,d=c+b*Uint32Array.BYTES_PER_ELEMENT*3;U(b,a,c,d)}}function Z(a){var b=n.ntri_smooth_uv;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*3,d=c+b*Uint32Array.BYTES_PER_ELEMENT*3,e=d+b*Uint32Array.BYTES_PER_ELEMENT*3;U(b,a,c,e),Q(b,d)}}function $(a){var b=n.nquad_flat;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*4;T(b,a,c)}}function _(a){var b=n.nquad_flat_uv;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*4,d=c+b*Uint32Array.BYTES_PER_ELEMENT*4;T(b,a,d),R(b,c)}}function ab(a){var b=n.nquad_smooth;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*4,d=c+b*Uint32Array.BYTES_PER_ELEMENT*4;V(b,a,c,d)}}function bb(a){var b=n.nquad_smooth_uv;if(b){var c=a+b*Uint32Array.BYTES_PER_ELEMENT*4,d=c+b*Uint32Array.BYTES_PER_ELEMENT*4,e=d+b*Uint32Array.BYTES_PER_ELEMENT*4;V(b,a,c,e),R(b,d)}}var c=this,e=c,m=0,n,o=[],p=[],q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H;THREE.Geometry.call(c),THREE.Loader.prototype.initMaterials(e,d,b),n=J(a,m),m+=n.header_bytes,y=n.vertex_index_bytes*3+n.material_index_bytes,z=n.vertex_index_bytes*4+n.material_index_bytes,A=n.ntri_flat*y,B=n.ntri_smooth*(y+n.normal_index_bytes*3),C=n.ntri_flat_uv*(y+n.uv_index_bytes*3),D=n.ntri_smooth_uv*(y+n.normal_index_bytes*3+n.uv_index_bytes*3),E=n.nquad_flat*z,F=n.nquad_smooth*(z+n.normal_index_bytes*4),G=n.nquad_flat_uv*(z+n.uv_index_bytes*4),H=n.nquad_smooth_uv*(z+n.normal_index_bytes*4+n.uv_index_bytes*4),m+=N(m),m+=O(m),m+=I(n.nnormals*3),m+=P(m),q=m,r=q+A+I(n.ntri_flat*2),s=r+B+I(n.ntri_smooth*2),t=s+C+I(n.ntri_flat_uv*2),u=t+D+I(n.ntri_smooth_uv*2),v=u+E+I(n.nquad_flat*2),w=v+F+I(n.nquad_smooth*2),x=w+G+I(n.nquad_flat_uv*2),X(s),Z(t),_(w),bb(x),W(q),Y(r),$(u),ab(v),c.computeCentroids(),c.computeFaceNormals(),THREE.Loader.prototype.hasNormals(c)&&c.computeTangents()};e.prototype=new THREE.Geometry,e.prototype.constructor=e,b(new e(c))},THREE.JSONLoader=function(a){THREE.Loader.call(this,a)},THREE.JSONLoader.prototype=new THREE.Loader,THREE.JSONLoader.prototype.constructor=THREE.JSONLoader,THREE.JSONLoader.prototype.load=function(a,b,c){var d=this,e=d;c=c?c:d.extractUrlBase(a),d.onLoadStart(),d.loadAjaxJSON(d,a,b,c)},THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var f=new XMLHttpRequest,g=0;f.onreadystatechange=function(){if(f.readyState===f.DONE)if(f.status===200||f.status===0){if(f.responseText){var h=JSON.parse(f.responseText);a.createModel(h,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+f.status+"]");else f.readyState===f.LOADING?e&&(g===0&&(g=f.getResponseHeader("Content-Length")),e({total:g,loaded:f.responseText.length})):f.readyState===f.HEADERS_RECEIVED&&(g=f.getResponseHeader("Content-Length"))},f.open("GET",b,!0),f.overrideMimeType&&f.overrideMimeType("text/plain; charset=x-user-defined"),f.setRequestHeader("Content-Type","text/plain"),f.send(null)},THREE.JSONLoader.prototype.createModel=function(a,b,c){function g(b){function c(a,b){return a&1<<b}var d,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F=a.faces,G=a.vertices,H=a.normals,I=a.colors,J=0;for(d=0;d<a.uvs.length;d++)a.uvs[d].length&&J++;for(d=0;d<J;d++)e.faceUvs[d]=[],e.faceVertexUvs[d]=[];h=0,i=G.length;while(h<i)x=new THREE.Vector3,x.x=G[h++]*b,x.y=G[h++]*b,x.z=G[h++]*b,e.vertices.push(x);h=0,i=F.length;while(h<i){o=F[h++],p=c(o,0),q=c(o,1),r=c(o,2),s=c(o,3),t=c(o,4),u=c(o,5),v=c(o,6),w=c(o,7),p?(y=new THREE.Face4,y.a=F[h++],y.b=F[h++],y.c=F[h++],y.d=F[h++],j=4):(y=new THREE.Face3,y.a=F[h++],y.b=F[h++],y.c=F[h++],j=3),q&&(n=F[h++],y.materialIndex=n),g=e.faces.length;if(r)for(d=0;d<J;d++)B=a.uvs[d],m=F[h++],D=B[m*2],E=B[m*2+1],e.faceUvs[d][g]=new THREE.UV(D,E);if(s)for(d=0;d<J;d++){B=a.uvs[d],C=[];for(f=0;f<j;f++)m=F[h++],D=B[m*2],E=B[m*2+1],C[f]=new THREE.UV(D,E);e.faceVertexUvs[d][g]=C}t&&(l=F[h++]*3,A=new THREE.Vector3,A.x=H[l++],A.y=H[l++],A.z=H[l],y.normal=A);if(u)for(d=0;d<j;d++)l=F[h++]*3,A=new THREE.Vector3,A.x=H[l++],A.y=H[l++],A.z=H[l],y.vertexNormals.push(A);v&&(k=F[h++],z=new THREE.Color(I[k]),y.color=z);if(w)for(d=0;d<j;d++)k=F[h++],z=new THREE.Color(I[k]),y.vertexColors.push(z);e.faces.push(y)}}function h(){var b,c,d,f,g,h,i,j,k,l;if(a.skinWeights)for(b=0,c=a.skinWeights.length;b<c;b+=2)d=a.skinWeights[b],f=a.skinWeights[b+1],g=0,h=0,e.skinWeights.push(new THREE.Vector4(d,f,g,h));if(a.skinIndices)for(b=0,c=a.skinIndices.length;b<c;b+=2)i=a.skinIndices[b],j=a.skinIndices[b+1],k=0,l=0,e.skinIndices.push(new THREE.Vector4(i,j,k,l));e.bones=a.bones,e.animation=a.animation}function i(b){if(a.morphTargets!==undefined){var c,d,f,g,h,i;for(c=0,d=a.morphTargets.length;c<d;c++){e.morphTargets[c]={},e.morphTargets[c].name=a.morphTargets[c].name,e.morphTargets[c].vertices=[],h=e.morphTargets[c].vertices,i=a.morphTargets[c].vertices;for(f=0,g=i.length;f<g;f+=3){var j=new THREE.Vector3;j.x=i[f]*b,j.y=i[f+1]*b,j.z=i[f+2]*b,h.push(j)}}}if(a.morphColors!==undefined){var c,d,k,l,m,n,o;for(c=0,d=a.morphColors.length;c<d;c++){e.morphColors[c]={},e.morphColors[c].name=a.morphColors[c].name,e.morphColors[c].colors=[],m=e.morphColors[c].colors,n=a.morphColors[c].colors;for(k=0,l=n.length;k<l;k+=3)o=new THREE.Color(16755200),o.setRGB(n[k],n[k+1],n[k+2]),m.push(o)}}}var d=this,e=new THREE.Geometry,f=a.scale!==undefined?1/a.scale:1;this.initMaterials(e,a.materials,c),g(f),h(),i(f),e.computeCentroids(),e.computeFaceNormals(),this.hasNormals(e)&&e.computeTangents();b(e)},THREE.SceneLoader=function(){var a=this;a.onLoadStart=function(){},a.onLoadProgress=function(){},a.onLoadComplete=function(){},a.callbackSync=function(){},a.callbackProgress=function(){}},THREE.SceneLoader.prototype.constructor=THREE.SceneLoader,THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(d.readyState==4)if(d.status==200||d.status==0){var e=JSON.parse(d.responseText);c.createScene(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")},d.open("GET",a,!0),d.overrideMimeType&&d.overrideMimeType("text/plain; charset=x-user-defined"),d.setRequestHeader("Content-Type","text/plain"),d.send(null)},THREE.SceneLoader.prototype.createScene=function(a,b,c){function S(a,b){return b=="relativeToHTML"?a:e+"/"+a}function T(){var a;for(h in H.objects)if(!O.objects[h]){n=H.objects[h];if(n.geometry!==undefined){B=O.geometries[n.geometry];if(B){var b=!1;C=O.materials[n.materials[0]],b=C instanceof THREE.ShaderMaterial,b&&B.computeTangents(),r=n.position,s=n.rotation,t=n.quaternion,u=n.scale,o=n.matrix,t=0,n.materials.length==0&&(C=new THREE.MeshFaceMaterial),n.materials.length>1&&(C=new THREE.MeshFaceMaterial),a=new THREE.Mesh(B,C),a.name=h,o?(a.matrixAutoUpdate=!1,a.matrix.set(o[0],o[1],o[2],o[3],o[4],o[5],o[6],o[7],o[8],o[9],o[10],o[11],o[12],o[13],o[14],o[15])):(a.position.set(r[0],r[1],r[2]),t?(a.quaternion.set(t[0],t[1],t[2],t[3]),a.useQuaternion=!0):a.rotation.set(s[0],s[1],s[2]),a.scale.set(u[0],u[1],u[2])),a.visible=n.visible,a.doubleSided=n.doubleSided,a.castShadow=n.castShadow,a.receiveShadow=n.receiveShadow,O.scene.add(a),O.objects[h]=a}}else r=n.position,s=n.rotation,t=n.quaternion,u=n.scale,t=0,a=new THREE.Object3D,a.name=h,a.position.set(r[0],r[1],r[2]),t?(a.quaternion.set(t[0],t[1],t[2],t[3]),a.useQuaternion=!0):a.rotation.set(s[0],s[1],s[2]),a.scale.set(u[0],u[1],u[2]),a.visible=n.visible!==undefined?n.visible:!1,O.scene.add(a),O.objects[h]=a,O.empties[h]=a}}function U(a,b){O.geometries[b]=a,T()}function V(a){return function(b){U(b,a),K-=1,d.onLoadComplete(),X()}}function W(a){return function(b){O.geometries[a]=b}}function X(){var a={totalModels:M,totalTextures:N,loadedModels:M-K,loadedTextures:N-L};d.callbackProgress(a,O),d.onLoadProgress(),K==0&&L==0&&b(O)}var d=this,e=THREE.Loader.prototype.extractUrlBase(c),f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O;H=a,I=new THREE.BinaryLoader,J=new THREE.JSONLoader,K=0,L=0,O={scene:new THREE.Scene,geometries:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(H.transform){var P=H.transform.position,Q=H.transform.rotation,R=H.transform.scale;P&&O.scene.position.set(P[0],P[1],P[2]),Q&&O.scene.rotation.set(Q[0],Q[1],Q[2]),R&&O.scene.scale.set(R[0],R[1],R[2]);if(P||Q||R)O.scene.updateMatrix(),O.scene.updateMatrixWorld()}var Y=function(a){L-=1,X(),d.onLoadComplete()};for(j in H.cameras)v=H.cameras[j],v.type=="perspective"?D=new THREE.PerspectiveCamera(v.fov,v.aspect,v.near,v.far):v.type=="ortho"&&(D=new THREE.OrthographicCamera(v.left,v.right,v.top,v.bottom,v.near,v.far)),r=v.position,w=v.target,A=v.up,D.position.set(r[0],r[1],r[2]),D.target=new THREE.Vector3(w[0],w[1],w[2]),A&&D.up.set(A[0],A[1],A[2]),O.cameras[j]=D;var Z,$;for(i in H.lights)p=H.lights[i],Z=p.color!==undefined?p.color:16777215,$=p.intensity!==undefined?p.intensity:1,p.type=="directional"?(r=p.direction,G=new THREE.DirectionalLight(Z,$),G.position.set(r[0],r[1],r[2]),G.position.normalize()):p.type=="point"?(r=p.position,q=p.distance,G=new THREE.PointLight(Z,$,q),G.position.set(r[0],r[1],r[2])):p.type=="ambient"&&(G=new THREE.AmbientLight(Z)),O.scene.add(G),O.lights[i]=G;for(k in H.fogs)x=H.fogs[k],x.type=="linear"?E=new THREE.Fog(0,x.near,x.far):x.type=="exp2"&&(E=new THREE.FogExp2(0,x.density)),v=x.color,E.color.setRGB(v[0],v[1],v[2]),O.fogs[k]=E;O.cameras&&H.defaults.camera&&(O.currentCamera=O.cameras[H.defaults.camera]),O.fogs&&H.defaults.fog&&(O.scene.fog=O.fogs[H.defaults.fog]),v=H.defaults.bgcolor,O.bgColor=new THREE.Color,O.bgColor.setRGB(v[0],v[1],v[2]),O.bgColorAlpha=H.defaults.bgalpha;for(f in H.geometries){m=H.geometries[f];if(m.type=="bin_mesh"||m.type=="ascii_mesh")K+=1,d.onLoadStart()}M=K;for(f in H.geometries){m=H.geometries[f];if(m.type=="cube")B=new THREE.CubeGeometry(m.width,m.height,m.depth,m.segmentsWidth,m.segmentsHeight,m.segmentsDepth,null,m.flipped,m.sides),O.geometries[f]=B;else if(m.type=="plane")B=new THREE.PlaneGeometry(m.width,m.height,m.segmentsWidth,m.segmentsHeight),O.geometries[f]=B;else if(m.type=="sphere")B=new THREE.SphereGeometry(m.radius,m.segmentsWidth,m.segmentsHeight),O.geometries[f]=B;else if(m.type=="cylinder")B=new THREE.CylinderGeometry(m.topRad,m.botRad,m.height,m.radSegs,m.heightSegs),O.geometries[f]=B;else if(m.type=="torus")B=new THREE.TorusGeometry(m.radius,m.tube,m.segmentsR,m.segmentsT),O.geometries[f]=B;else if(m.type=="icosahedron")B=new THREE.IcosahedronGeometry(m.radius,m.subdivisions),O.geometries[f]=B;else if(m.type=="bin_mesh")I.load(S(m.url,H.urlBaseType),V(f));else if(m.type=="ascii_mesh")J.load(S(m.url,H.urlBaseType),V(f));else if(m.type=="embedded_mesh"){var _=H.embeds[m.id],ab="";_.metadata=H.metadata,_&&J.createModel(_,W(f),ab)}}for(l in H.textures){y=H.textures[l];if(y.url instanceof Array){L+=y.url.length;for(var bb=0;bb<y.url.length;bb++)d.onLoadStart()}else L+=1,d.onLoadStart()}N=L;for(l in H.textures){y=H.textures[l],y.mapping!=undefined&&THREE[y.mapping]!=undefined&&(y.mapping=new THREE[y.mapping]);if(y.url instanceof Array){var cb=[];for(var db=0;db<y.url.length;db++)cb[db]=S(y.url[db],H.urlBaseType);F=THREE.ImageUtils.loadTextureCube(cb,y.mapping,Y)}else{F=THREE.ImageUtils.loadTexture(S(y.url,H.urlBaseType),y.mapping,Y),THREE[y.minFilter]!=undefined&&(F.minFilter=THREE[y.minFilter]),THREE[y.magFilter]!=undefined&&(F.magFilter=THREE[y.magFilter]),y.repeat&&(F.repeat.set(y.repeat[0],y.repeat[1]),y.repeat[0]!=1&&(F.wrapS=THREE.RepeatWrapping),y.repeat[1]!=1&&(F.wrapT=THREE.RepeatWrapping)),y.offset&&F.offset.set(y.offset[0],y.offset[1]);if(y.wrap){var eb={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping};eb[y.wrap[0]]!==undefined&&(F.wrapS=eb[y.wrap[0]]),eb[y.wrap[1]]!==undefined&&(F.wrapT=eb[y.wrap[1]])}}O.textures[l]=F}for(g in H.materials){o=H.materials[g];for(z in o.parameters)z=="envMap"||z=="map"||z=="lightMap"?o.parameters[z]=O.textures[o.parameters[z]]:z=="shading"?o.parameters[z]=o.parameters[z]=="flat"?THREE.FlatShading:THREE.SmoothShading:z=="blending"?o.parameters[z]=THREE[o.parameters[z]]?THREE[o.parameters[z]]:THREE.NormalBlending:z=="combine"?o.parameters[z]=o.parameters[z]=="MixOperation"?THREE.MixOperation:THREE.MultiplyOperation:z=="vertexColors"&&(o.parameters[z]=="face"?o.parameters[z]=THREE.FaceColors:o.parameters[z]&&(o.parameters[z]=THREE.VertexColors));o.parameters.opacity!==undefined&&o.parameters.opacity<1&&(o.parameters.transparent=!0);if(o.parameters.normalMap){var fb=THREE.ShaderUtils.lib.normal,gb=THREE.UniformsUtils.clone(fb.uniforms),hb=o.parameters.color,ib=o.parameters.specular,jb=o.parameters.ambient,kb=o.parameters.shininess;gb.tNormal.texture=O.textures[o.parameters.normalMap],o.parameters.normalMapFactor&&(gb.uNormalScale.value=o.parameters.normalMapFactor),o.parameters.map&&(gb.tDiffuse.texture=o.parameters.map,gb.enableDiffuse.value=!0),o.parameters.lightMap&&(gb.tAO.texture=o.parameters.lightMap,gb.enableAO.value=!0),o.parameters.specularMap&&(gb.tSpecular.texture=O.textures[o.parameters.specularMap],gb.enableSpecular.value=!0),gb.uDiffuseColor.value.setHex(hb),gb.uSpecularColor.value.setHex(ib),gb.uAmbientColor.value.setHex(jb),gb.uShininess.value=kb,o.parameters.opacity&&(gb.uOpacity.value=o.parameters.opacity);var lb={fragmentShader:fb.fragmentShader,vertexShader:fb.vertexShader,uniforms:gb,lights:!0,fog:!0};C=new THREE.ShaderMaterial(lb)}else C=new THREE[o.type](o.parameters);O.materials[g]=C}T(),d.callbackSync(O),X()},THREE.Material=function(a){var b=this;a=a||{},b.id=THREE.MaterialCount++,b.name="",b.opacity=a.opacity!==undefined?a.opacity:1,b.transparent=a.transparent!==undefined?a.transparent:!1,b.blending=a.blending!==undefined?a.blending:THREE.NormalBlending,b.blendSrc=a.blendSrc!==undefined?a.blendSrc:THREE.SrcAlphaFactor,b.blendDst=a.blendDst!==undefined?a.blendDst:THREE.OneMinusSrcAlphaFactor,b.blendEquation=a.blendEquation!==undefined?a.blendEquation:THREE.AddEquation,b.depthTest=a.depthTest!==undefined?a.depthTest:!0,b.depthWrite=a.depthWrite!==undefined?a.depthWrite:!0,b.polygonOffset=a.polygonOffset!==undefined?a.polygonOffset:!1,b.polygonOffsetFactor=a.polygonOffsetFactor!==undefined?a.polygonOffsetFactor:0,b.polygonOffsetUnits=a.polygonOffsetUnits!==undefined?a.polygonOffsetUnits:0,b.alphaTest=a.alphaTest!==undefined?a.alphaTest:0,b.overdraw=a.overdraw!==undefined?a.overdraw:!1,b.visible=!0,b.needsUpdate=!0},THREE.MaterialCount=0,THREE.NoShading=0,THREE.FlatShading=1,THREE.SmoothShading=2,THREE.NoColors=0,THREE.FaceColors=1,THREE.VertexColors=2,THREE.NoBlending=0,THREE.NormalBlending=1,THREE.AdditiveBlending=2,THREE.SubtractiveBlending=3,THREE.MultiplyBlending=4,THREE.AdditiveAlphaBlending=5,THREE.CustomBlending=6,THREE.AddEquation=100,THREE.SubtractEquation=101,THREE.ReverseSubtractEquation=102,THREE.ZeroFactor=200,THREE.OneFactor=201,THREE.SrcColorFactor=202,THREE.OneMinusSrcColorFactor=203,THREE.SrcAlphaFactor=204,THREE.OneMinusSrcAlphaFactor=205,THREE.DstAlphaFactor=206,THREE.OneMinusDstAlphaFactor=207,THREE.DstColorFactor=208,THREE.OneMinusDstColorFactor=209,THREE.SrcAlphaSaturateFactor=210,THREE.LineBasicMaterial=function(a){var b=this;THREE.Material.call(b,a),a=a||{},b.color=a.color!==undefined?new THREE.Color(a.color):new THREE.Color(16777215),b.linewidth=a.linewidth!==undefined?a.linewidth:1,b.linecap=a.linecap!==undefined?a.linecap:"round",b.linejoin=a.linejoin!==undefined?a.linejoin:"round",b.vertexColors=a.vertexColors?a.vertexColors:!1,b.fog=a.fog!==undefined?a.fog:!0},THREE.LineBasicMaterial.prototype=new THREE.Material,THREE.LineBasicMaterial.prototype.constructor=THREE.LineBasicMaterial,THREE.MeshBasicMaterial=function(a){var b=this;THREE.Material.call(b,a),a=a||{},b.color=a.color!==undefined?new THREE.Color(a.color):new THREE.Color(16777215),b.map=a.map!==undefined?a.map:null,b.lightMap=a.lightMap!==undefined?a.lightMap:null,b.envMap=a.envMap!==undefined?a.envMap:null,b.combine=a.combine!==undefined?a.combine:THREE.MultiplyOperation,b.reflectivity=a.reflectivity!==undefined?a.reflectivity:1,b.refractionRatio=a.refractionRatio!==undefined?a.refractionRatio:.98,b.fog=a.fog!==undefined?a.fog:!0,b.shading=a.shading!==undefined?a.shading:THREE.SmoothShading,b.wireframe=a.wireframe!==undefined?a.wireframe:!1,b.wireframeLinewidth=a.wireframeLinewidth!==undefined?a.wireframeLinewidth:1,b.wireframeLinecap=a.wireframeLinecap!==undefined?a.wireframeLinecap:"round",b.wireframeLinejoin=a.wireframeLinejoin!==undefined?a.wireframeLinejoin:"round",b.vertexColors=a.vertexColors!==undefined?a.vertexColors:THREE.NoColors,b.skinning=a.skinning!==undefined?a.skinning:!1,b.morphTargets=a.morphTargets!==undefined?a.morphTargets:!1},THREE.MeshBasicMaterial.prototype=new THREE.Material,THREE.MeshBasicMaterial.prototype.constructor=THREE.MeshBasicMaterial,THREE.MeshLambertMaterial=function(a){var b=this;THREE.Material.call(b,a),a=a||{},b.color=a.color!==undefined?new THREE.Color(a.color):new THREE.Color(16777215),b.ambient=a.ambient!==undefined?new THREE.Color(a.ambient):new THREE.Color(16777215),b.emissive=a.emissive!==undefined?new THREE.Color(a.emissive):new THREE.Color(0),b.wrapAround=a.wrapAround!==undefined?a.wrapAround:!1,b.wrapRGB=new THREE.Vector3(1,1,1),b.map=a.map!==undefined?a.map:null,b.lightMap=a.lightMap!==undefined?a.lightMap:null,b.envMap=a.envMap!==undefined?a.envMap:null,b.combine=a.combine!==undefined?a.combine:THREE.MultiplyOperation,b.reflectivity=a.reflectivity!==undefined?a.reflectivity:1,b.refractionRatio=a.refractionRatio!==undefined?a.refractionRatio:.98,b.fog=a.fog!==undefined?a.fog:!0,b.shading=a.shading!==undefined?a.shading:THREE.SmoothShading,b.wireframe=a.wireframe!==undefined?a.wireframe:!1,b.wireframeLinewidth=a.wireframeLinewidth!==undefined?a.wireframeLinewidth:1,b.wireframeLinecap=a.wireframeLinecap!==undefined?a.wireframeLinecap:"round",b.wireframeLinejoin=a.wireframeLinejoin!==undefined?a.wireframeLinejoin:"round",b.vertexColors=a.vertexColors!==undefined?a.vertexColors:THREE.NoColors,b.skinning=a.skinning!==undefined?a.skinning:!1,b.morphTargets=a.morphTargets!==undefined?a.morphTargets:!1,b.morphNormals=a.morphNormals!==undefined?a.morphNormals:!1},THREE.MeshLambertMaterial.prototype=new THREE.Material,THREE.MeshLambertMaterial.prototype.constructor=THREE.MeshLambertMaterial,THREE.MeshPhongMaterial=function(a){var b=this;THREE.Material.call(b,a),a=a||{},b.color=a.color!==undefined?new THREE.Color(a.color):new THREE.Color(16777215),b.ambient=a.ambient!==undefined?new THREE.Color(a.ambient):new THREE.Color(16777215),b.emissive=a.emissive!==undefined?new THREE.Color(a.emissive):new THREE.Color(0),b.specular=a.specular!==undefined?new THREE.Color(a.specular):new THREE.Color(1118481),b.shininess=a.shininess!==undefined?a.shininess:30,b.metal=a.metal!==undefined?a.metal:!1,b.perPixel=a.perPixel!==undefined?a.perPixel:!1,b.wrapAround=a.wrapAround!==undefined?a.wrapAround:!1,b.wrapRGB=new THREE.Vector3(1,1,1),b.map=a.map!==undefined?a.map:null,b.lightMap=a.lightMap!==undefined?a.lightMap:null,b.envMap=a.envMap!==undefined?a.envMap:null,b.combine=a.combine!==undefined?a.combine:THREE.MultiplyOperation,b.reflectivity=a.reflectivity!==undefined?a.reflectivity:1,b.refractionRatio=a.refractionRatio!==undefined?a.refractionRatio:.98,b.fog=a.fog!==undefined?a.fog:!0,b.shading=a.shading!==undefined?a.shading:THREE.SmoothShading,b.wireframe=a.wireframe!==undefined?a.wireframe:!1,b.wireframeLinewidth=a.wireframeLinewidth!==undefined?a.wireframeLinewidth:1,b.wireframeLinecap=a.wireframeLinecap!==undefined?a.wireframeLinecap:"round",b.wireframeLinejoin=a.wireframeLinejoin!==undefined?a.wireframeLinejoin:"round",b.vertexColors=a.vertexColors!==undefined?a.vertexColors:THREE.NoColors,b.skinning=a.skinning!==undefined?a.skinning:!1,b.morphTargets=a.morphTargets!==undefined?a.morphTargets:!1,b.morphNormals=a.morphNormals!==undefined?a.morphNormals:!1},THREE.MeshPhongMaterial.prototype=new THREE.Material,THREE.MeshPhongMaterial.prototype.constructor=THREE.MeshPhongMaterial,THREE.MeshDepthMaterial=function(a){var b=this;THREE.Material.call(b,a),a=a||{},b.shading=a.shading!==undefined?a.shading:THREE.SmoothShading,b.wireframe=a.wireframe!==undefined?a.wireframe:!1,b.wireframeLinewidth=a.wireframeLinewidth!==undefined?a.wireframeLinewidth:1},THREE.MeshDepthMaterial.prototype=new THREE.Material,THREE.MeshDepthMaterial.prototype.constructor=THREE.MeshDepthMaterial,THREE.MeshNormalMaterial=function(a){var b=this;THREE.Material.call(b,a),a=a||{},b.shading=a.shading?a.shading:THREE.FlatShading,b.wireframe=a.wireframe?a.wireframe:!1,b.wireframeLinewidth=a.wireframeLinewidth?a.wireframeLinewidth:1},THREE.MeshNormalMaterial.prototype=new THREE.Material,THREE.MeshNormalMaterial.prototype.constructor=THREE.MeshNormalMaterial,THREE.MeshFaceMaterial=function(){},THREE.ParticleBasicMaterial=function(a){var b=this;THREE.Material.call(b,a),a=a||{},b.color=a.color!==undefined?new THREE.Color(a.color):new THREE.Color(16777215),b.map=a.map!==undefined?a.map:null,b.size=a.size!==undefined?a.size:1,b.sizeAttenuation=a.sizeAttenuation!==undefined?a.sizeAttenuation:!0,b.vertexColors=a.vertexColors!==undefined?a.vertexColors:!1,b.fog=a.fog!==undefined?a.fog:!0},THREE.ParticleBasicMaterial.prototype=new THREE.Material,THREE.ParticleBasicMaterial.prototype.constructor=THREE.ParticleBasicMaterial,THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this,a),a=a||{},this.color=a.color!==undefined?new THREE.Color(a.color):new THREE.Color(16777215),this.program=a.program!==undefined?a.program:function(a,b){}},THREE.ParticleCanvasMaterial.prototype=new THREE.Material,THREE.ParticleCanvasMaterial.prototype.constructor=THREE.ParticleCanvasMaterial,THREE.ParticleDOMMaterial=function(a){THREE.Material.call(this),this.domElement=a},THREE.ShaderMaterial=function(a){var b=this;THREE.Material.call(b,a),a=a||{},b.fragmentShader=a.fragmentShader!==undefined?a.fragmentShader:"void main() {}",b.vertexShader=a.vertexShader!==undefined?a.vertexShader:"void main() {}",b.uniforms=a.uniforms!==undefined?a.uniforms:{},b.attributes=a.attributes,b.shading=a.shading!==undefined?a.shading:THREE.SmoothShading,b.wireframe=a.wireframe!==undefined?a.wireframe:!1,b.wireframeLinewidth=a.wireframeLinewidth!==undefined?a.wireframeLinewidth:1,b.fog=a.fog!==undefined?a.fog:!1,b.lights=a.lights!==undefined?a.lights:!1,b.vertexColors=a.vertexColors!==undefined?a.vertexColors:THREE.NoColors,b.skinning=a.skinning!==undefined?a.skinning:!1,b.morphTargets=a.morphTargets!==undefined?a.morphTargets:!1,b.morphNormals=a.morphNormals!==undefined?a.morphNormals:!1},THREE.ShaderMaterial.prototype=new THREE.Material,THREE.ShaderMaterial.prototype.constructor=THREE.ShaderMaterial,THREE.Texture=function(a,b,c,d,e,f,g,h){var i=this;i.id=THREE.TextureCount++,i.image=a,i.mapping=b!==undefined?b:new THREE.UVMapping,i.wrapS=c!==undefined?c:THREE.ClampToEdgeWrapping,i.wrapT=d!==undefined?d:THREE.ClampToEdgeWrapping,i.magFilter=e!==undefined?e:THREE.LinearFilter,i.minFilter=f!==undefined?f:THREE.LinearMipMapLinearFilter,i.format=g!==undefined?g:THREE.RGBAFormat,i.type=h!==undefined?h:THREE.UnsignedByteType,i.offset=new THREE.Vector2(0,0),i.repeat=new THREE.Vector2(1,1),i.generateMipmaps=!0,i.premultiplyAlpha=!1,i.needsUpdate=!1,i.onUpdate=null},THREE.Texture.prototype={constructor:THREE.Texture,clone:function(){var a=this,b=new THREE.Texture(a.image,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter,a.format,a.type);return b.offset.copy(a.offset),b.repeat.copy(a.repeat),b}},THREE.TextureCount=0,THREE.MultiplyOperation=0,THREE.MixOperation=1,THREE.UVMapping=function(){},THREE.CubeReflectionMapping=function(){},THREE.CubeRefractionMapping=function(){},THREE.SphericalReflectionMapping=function(){},THREE.SphericalRefractionMapping=function(){},THREE.RepeatWrapping=0,THREE.ClampToEdgeWrapping=1,THREE.MirroredRepeatWrapping=2,THREE.NearestFilter=3,THREE.NearestMipMapNearestFilter=4,THREE.NearestMipMapLinearFilter=5,THREE.LinearFilter=6,THREE.LinearMipMapNearestFilter=7,THREE.LinearMipMapLinearFilter=8,THREE.ByteType=9,THREE.UnsignedByteType=10,THREE.ShortType=11,THREE.UnsignedShortType=12,THREE.IntType=13,THREE.UnsignedIntType=14,THREE.FloatType=15,THREE.AlphaFormat=16,THREE.RGBFormat=17,THREE.RGBAFormat=18,THREE.LuminanceFormat=19,THREE.LuminanceAlphaFormat=20,THREE.DataTexture=function(a,b,c,d,e,f,g,h,i,j){THREE.Texture.call(this,null,f,g,h,i,j,d,e),this.image={data:a,width:b,height:c}},THREE.DataTexture.prototype=new THREE.Texture,THREE.DataTexture.prototype.constructor=THREE.DataTexture,THREE.DataTexture.prototype.clone=function(){var a=this,b=new THREE.DataTexture(a.image.data,a.image.width,a.image.height,a.format,a.type,a.mapping,a.wrapS,a.wrapT,a.magFilter,a.minFilter);return b.offset.copy(a.offset),b.repeat.copy(a.repeat),b},THREE.Particle=function(a){THREE.Object3D.call(this),this.material=a},THREE.Particle.prototype=new THREE.Object3D,THREE.Particle.prototype.constructor=THREE.Particle,THREE.ParticleSystem=function(a,b){var c=this;THREE.Object3D.call(c),c.geometry=a,c.material=b!==undefined?b:new THREE.ParticleBasicMaterial({color:Math.random()*16777215}),c.sortParticles=!1,c.geometry&&(c.geometry.boundingSphere||c.geometry.computeBoundingSphere(),c.boundRadius=a.boundingSphere.radius),c.frustumCulled=!1},THREE.ParticleSystem.prototype=new THREE.Object3D,THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem,THREE.Line=function(a,b,c){var d=this;THREE.Object3D.call(d),d.geometry=a,d.material=b!==undefined?b:new THREE.LineBasicMaterial({color:Math.random()*16777215}),d.type=c!==undefined?c:THREE.LineStrip,d.geometry&&(d.geometry.boundingSphere||d.geometry.computeBoundingSphere())},THREE.LineStrip=0,THREE.LinePieces=1,THREE.Line.prototype=new THREE.Object3D,THREE.Line.prototype.constructor=THREE.Line,THREE.Mesh=function(a,b){var c=this;THREE.Object3D.call(c),c.geometry=a,c.material=b!==undefined?b:new THREE.MeshBasicMaterial({color:Math.random()*16777215,wireframe:!0});if(c.geometry){c.geometry.boundingSphere||c.geometry.computeBoundingSphere(),c.boundRadius=a.boundingSphere.radius;if(c.geometry.morphTargets.length){c.morphTargetBase=-1,c.morphTargetForcedOrder=[],c.morphTargetInfluences=[],c.morphTargetDictionary={};for(var d=0;d<c.geometry.morphTargets.length;d++)c.morphTargetInfluences.push(0),c.morphTargetDictionary[c.geometry.morphTargets[d].name]=d}}},THREE.Mesh.prototype=new THREE.Object3D,THREE.Mesh.prototype.constructor=THREE.Mesh,THREE.Mesh.prototype.supr=THREE.Object3D.prototype,THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){return this.morphTargetDictionary[a]!==undefined?this.morphTargetDictionary[a]:(console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0."),0)},THREE.Bone=function(a){THREE.Object3D.call(this),this.skin=a,this.skinMatrix=new THREE.Matrix4},THREE.Bone.prototype=new THREE.Object3D,THREE.Bone.prototype.constructor=THREE.Bone,THREE.Bone.prototype.supr=THREE.Object3D.prototype,THREE.Bone.prototype.update=function(a,b){var c=this;c.matrixAutoUpdate&&(b|=c.updateMatrix());if(b||c.matrixWorldNeedsUpdate)a?c.skinMatrix.multiply(a,c.matrix):c.skinMatrix.copy(c.matrix),c.matrixWorldNeedsUpdate=!1,b=!0;var d,e=c.children.length;for(d=0;d<e;d++)c.children[d].update(c.skinMatrix,b)},THREE.SkinnedMesh=function(a,b){var c=this;THREE.Mesh.call(c,a,b),c.identityMatrix=new THREE.Matrix4,c.bones=[],c.boneMatrices=[];var d,e,f,g,h,i;if(c.geometry.bones!==undefined){for(d=0;d<c.geometry.bones.length;d++)f=c.geometry.bones[d],g=f.pos,h=f.rotq,i=f.scl,e=c.addBone(),e.name=f.name,e.position.set(g[0],g[1],g[2]),e.quaternion.set(h[0],h[1],h[2],h[3]),e.useQuaternion=!0,i!==undefined?e.scale.set(i[0],i[1],i[2]):e.scale.set(1,1,1);for(d=0;d<c.bones.length;d++)f=c.geometry.bones[d],e=c.bones[d],f.parent===-1?c.add(e):c.bones[f.parent].add(e);c.boneMatrices=new Float32Array(16*c.bones.length),c.pose()}},THREE.SkinnedMesh.prototype=new THREE.Mesh,THREE.SkinnedMesh.prototype.constructor=THREE.SkinnedMesh,THREE.SkinnedMesh.prototype.addBone=function(a){return a===undefined&&(a=new THREE.Bone(this)),this.bones.push(a),a},THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){var b=this;b.matrixAutoUpdate&&b.updateMatrix();if(b.matrixWorldNeedsUpdate||a)b.parent?b.matrixWorld.multiply(b.parent.matrixWorld,b.matrix):b.matrixWorld.copy(b.matrix),b.matrixWorldNeedsUpdate=!1,a=!0;for(var c=0,d=b.children.length;c<d;c++){var e=b.children[c];e instanceof THREE.Bone?e.update(b.identityMatrix,!1):e.updateMatrixWorld(!0)}var f,g=b.bones.length,h=b.bones,i=b.boneMatrices;for(f=0;f<g;f++)h[f].skinMatrix.flattenToArrayOffset(i,f*16)},THREE.SkinnedMesh.prototype.pose=function(){var a=this;a.updateMatrixWorld(!0);var b,c=[];for(var d=0;d<a.bones.length;d++){b=a.bones[d];var e=new THREE.Matrix4;e.getInverse(b.skinMatrix),c.push(e),b.skinMatrix.flattenToArrayOffset(a.boneMatrices,d*16)}if(a.geometry.skinVerticesA===undefined){a.geometry.skinVerticesA=[],a.geometry.skinVerticesB=[];var f,g;for(var h=0;h<a.geometry.skinIndices.length;h++){f=a.geometry.vertices[h];var i=a.geometry.skinIndices[h].x,j=a.geometry.skinIndices[h].y;g=new THREE.Vector3(f.x,f.y,f.z),a.geometry.skinVerticesA.push(c[i].multiplyVector3(g)),g=new THREE.Vector3(f.x,f.y,f.z),a.geometry.skinVerticesB.push(c[j].multiplyVector3(g));if(a.geometry.skinWeights[h].x+a.geometry.skinWeights[h].y!==1){var k=(1-(a.geometry.skinWeights[h].x+a.geometry.skinWeights[h].y))*.5;a.geometry.skinWeights[h].x+=k,a.geometry.skinWeights[h].y+=k}}}},THREE.MorphAnimMesh=function(a,b){var c=this;THREE.Mesh.call(c,a,b),c.duration=1e3,c.mirroredLoop=!1,c.time=0,c.lastKeyframe=0,c.currentKeyframe=0,c.direction=1,c.directionBackwards=!1,c.setFrameRange(0,c.geometry.morphTargets.length-1)},THREE.MorphAnimMesh.prototype=new THREE.Mesh,THREE.MorphAnimMesh.prototype.constructor=THREE.MorphAnimMesh,THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){var c=this;c.startKeyframe=a,c.endKeyframe=b,c.length=c.endKeyframe-c.startKeyframe+1},THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1,this.directionBackwards=!1},THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1,this.directionBackwards=!0},THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});var b,c=a.animations,d=/([a-z]+)(\d+)/;for(var e=0,f=a.morphTargets.length;e<f;e++){var g=a.morphTargets[e],h=g.name.match(d);if(h&&h.length>1){var i=h[1],j=h[2];c[i]||(c[i]={start:Infinity,end:-Infinity});var k=c[i];e<k.start&&(k.start=e),e>k.end&&(k.end=e),b||(b=i)}}a.firstAnimation=b},THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={}),this.geometry.animations[a]={start:b,end:c}},THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this,d=c.geometry.animations[a];d?(c.setFrameRange(d.start,d.end),c.duration=1e3*((d.end-d.start)/b),c.time=0):console.warn("animation["+a+"] undefined")},THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this,c=b.duration/b.length;b.time+=b.direction*a;if(b.mirroredLoop){if(b.time>b.duration||b.time<0)b.direction*=-1,b.time>b.duration&&(b.time=b.duration,b.directionBackwards=!0),b.time<0&&(b.time=0,b.directionBackwards=!1)}else b.time=b.time%b.duration,b.time<0&&(b.time+=b.duration);var d=b.startKeyframe+THREE.Math.clamp(Math.floor(b.time/c),0,b.length-1);d!==b.currentKeyframe&&(b.morphTargetInfluences[b.lastKeyframe]=0,b.morphTargetInfluences[b.currentKeyframe]=1,b.morphTargetInfluences[d]=0,b.lastKeyframe=b.currentKeyframe,b.currentKeyframe=d);var e=b.time%c/c;b.directionBackwards&&(e=1-e),b.morphTargetInfluences[b.currentKeyframe]=e,b.morphTargetInfluences[b.lastKeyframe]=1-e},THREE.Ribbon=function(a,b){THREE.Object3D.call(this),this.geometry=a,this.material=b},THREE.Ribbon.prototype=new THREE.Object3D,THREE.Ribbon.prototype.constructor=THREE.Ribbon,THREE.LOD=function(){THREE.Object3D.call(this),this.LODs=[]},THREE.LOD.prototype=new THREE.Object3D,THREE.LOD.prototype.constructor=THREE.LOD,THREE.LOD.prototype.supr=THREE.Object3D.prototype,THREE.LOD.prototype.addLevel=function(a,b){var c=this;b===undefined&&(b=0),b=Math.abs(b);for(var d=0;d<c.LODs.length;d++)if(b<c.LODs[d].visibleAtDistance)break;c.LODs.splice(d,0,{visibleAtDistance:b,object3D:a}),c.add(a)},THREE.LOD.prototype.update=function(a){var b=this;if(b.LODs.length>1){a.matrixWorldInverse.getInverse(a.matrixWorld);var c=a.matrixWorldInverse,d=-(c.elements[2]*b.matrixWorld.elements[12]+c.elements[6]*b.matrixWorld.elements[13]+c.elements[10]*b.matrixWorld.elements[14]+c.elements[14]);b.LODs[0].object3D.visible=!0;for(var e=1;e<b.LODs.length;e++){if(!(d>=b.LODs[e].visibleAtDistance))break;b.LODs[e-1].object3D.visible=!1,b.LODs[e].object3D.visible=!0}for(;e<b.LODs.length;e++)b.LODs[e].object3D.visible=!1}},THREE.Sprite=function(a){var b=this;THREE.Object3D.call(b),b.color=a.color!==undefined?new THREE.Color(a.color):new THREE.Color(16777215),b.map=a.map!==undefined?a.map:new THREE.Texture,b.blending=a.blending!==undefined?a.blending:THREE.NormalBlending,b.blendSrc=a.blendSrc!==undefined?a.blendSrc:THREE.SrcAlphaFactor,b.blendDst=a.blendDst!==undefined?a.blendDst:THREE.OneMinusSrcAlphaFactor,b.blendEquation=a.blendEquation!==undefined?a.blendEquation:THREE.AddEquation,b.useScreenCoordinates=a.useScreenCoordinates!==undefined?a.useScreenCoordinates:!0,b.mergeWith3D=a.mergeWith3D!==undefined?a.mergeWith3D:!b.useScreenCoordinates,b.affectedByDistance=a.affectedByDistance!==undefined?a.affectedByDistance:!b.useScreenCoordinates,b.scaleByViewport=a.scaleByViewport!==undefined?a.scaleByViewport:!b.affectedByDistance,b.alignment=a.alignment instanceof THREE.Vector2?a.alignment:THREE.SpriteAlignment.center,b.rotation3d=b.rotation,b.rotation=0,b.opacity=1,b.uvOffset=new THREE.Vector2(0,0),b.uvScale=new THREE.Vector2(1,1)},THREE.Sprite.prototype=new THREE.Object3D,THREE.Sprite.prototype.constructor=THREE.Sprite,THREE.Sprite.prototype.updateMatrix=function(){var a=this;a.matrix.setPosition(a.position),a.rotation3d.set(0,0,a.rotation),a.matrix.setRotationFromEuler(a.rotation3d);if(a.scale.x!==1||a.scale.y!==1)a.matrix.scale(a.scale),a.boundRadiusScale=Math.max(a.scale.x,a.scale.y);a.matrixWorldNeedsUpdate=!0},THREE.SpriteAlignment={},THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1),THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1),THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1),THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0),THREE.SpriteAlignment.center=new THREE.Vector2(0,0),THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0),THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1),THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1),THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1),THREE.Scene=function(){var a=this;THREE.Object3D.call(a),a.fog=null,a.overrideMaterial=null,a.matrixAutoUpdate=!1,a.__objects=[],a.__lights=[],a.__objectsAdded=[],a.__objectsRemoved=[]},THREE.Scene.prototype=new THREE.Object3D,THREE.Scene.prototype.constructor=THREE.Scene,THREE.Scene.prototype.__addObject=function(a){var b=this;if(a instanceof THREE.Light)b.__lights.indexOf(a)===-1&&b.__lights.push(a);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&b.__objects.indexOf(a)===-1){b.__objects.push(a),b.__objectsAdded.push(a);var c=b.__objectsRemoved.indexOf(a);c!==-1&&b.__objectsRemoved.splice(c,1)}for(var d=0;d<a.children.length;d++)b.__addObject(a.children[d])},THREE.Scene.prototype.__removeObject=function(a){var b=this;if(a instanceof THREE.Light){var c=b.__lights.indexOf(a);c!==-1&&b.__lights.splice(c,1)}else if(!(a instanceof THREE.Camera)){var c=b.__objects.indexOf(a);if(c!==-1){b.__objects.splice(c,1),b.__objectsRemoved.push(a);var d=b.__objectsAdded.indexOf(a);d!==-1&&b.__objectsAdded.splice(d,1)}}for(var e=0;e<a.children.length;e++)b.__removeObject(a.children[e])},THREE.Fog=function(a,b,c){this.color=new THREE.Color(a),this.near=b!==undefined?b:1,this.far=c!==undefined?c:1e3},THREE.FogExp2=function(a,b){this.color=new THREE.Color(a),this.density=b!==undefined?b:25e-5},THREE.DOMRenderer=function(){console.log("THREE.DOMRenderer",THREE.REVISION);var a,b,c,d,e,f,g,h=new THREE.Projector,i=function(a){var b=document.documentElement;for(var c=0;c<a.length;c++)if(typeof b.style[a[c]]=="string")return a[c];return null};g=i(["transform","MozTransform","WebkitTransform","msTransform","OTransform"]),this.domElement=document.createElement("div"),this.setSize=function(a,b){c=a,d=b,e=c/2,f=d/2},this.render=function(c,d){var i,j,k,l,m,n;a=h.projectScene(c,d),b=a.elements;for(i=0,j=b.length;i<j;i++){k=b[i];if(k instanceof THREE.RenderableParticle&&k.material instanceof THREE.ParticleDOMMaterial){l=k.material.domElement,m=k.x*e+e-(l.offsetWidth>>1),n=k.y*f+f-(l.offsetHeight>>1),l.style.left=m+"px",l.style.top=n+"px",l.style.zIndex=Math.abs(Math.floor((1-k.z)*d.far/d.near));if(g){var o=k.scale.x*e,p=k.scale.y*f,q="scale("+o+","+p+")";l.style[g]=q}}}}},THREE.CanvasRenderer=function(a){function tb(a){p!=a&&(m.globalAlpha=p=a)}function ub(a){if(q!=a){switch(a){case THREE.NormalBlending:m.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:m.globalCompositeOperation="lighter"}q=a}}function vb(a){t!=a&&(m.lineWidth=t=a)}function wb(a){u!=a&&(m.lineCap=u=a)}function xb(a){v!=a&&(m.lineJoin=v=a)}function yb(a){r!=a&&(m.strokeStyle=r=a)}function zb(a){s!=a&&(m.fillStyle=s=a)}var b=this;console.log("THREE.CanvasRenderer",THREE.REVISION),a=a||{};var c=b,d,e,f,g=new THREE.Projector,h=a.canvas!==undefined?a.canvas:document.createElement("canvas"),i,j,k,l,m=h.getContext("2d"),n=new THREE.Color(0),o=0,p=1,q=0,r=null,s=null,t=null,u=null,v=null,w,x,y,z,A=new THREE.RenderableVertex,B=new THREE.RenderableVertex,C,D,E,F,G,H,I,J,K,L,M,N,O=new THREE.Color,P=new THREE.Color,Q=new THREE.Color,R=new THREE.Color,S=new THREE.Color,T=[],U=[],V,W,X,Y,Z,$,_,ab,bb,cb,db=new THREE.Rectangle,eb=new THREE.Rectangle,fb=new THREE.Rectangle,gb=!1,hb=new THREE.Color,ib=new THREE.Color,jb=new THREE.Color,kb=Math.PI*2,lb=new THREE.Vector3,mb,nb,ob,pb,qb,rb,sb=16;mb=document.createElement("canvas"),mb.width=mb.height=2,nb=mb.getContext("2d"),nb.fillStyle="rgba(0,0,0,1)",nb.fillRect(0,0,2,2),ob=nb.getImageData(0,0,2,2),pb=ob.data,qb=document.createElement("canvas"),qb.width=qb.height=sb,rb=qb.getContext("2d"),rb.translate(-sb/2,-sb/2),rb.scale(sb,sb),sb--,b.domElement=h,b.autoClear=!0,b.sortObjects=!0,b.sortElements=!0,b.info={render:{vertices:0,faces:0}},b.setSize=function(a,b){i=a,j=b,k=Math.floor(i/2),l=Math.floor(j/2),h.width=i,h.height=j,db.set(-k,-l,k,l),eb.set(-k,-l,k,l),p=1,q=0,r=null,s=null,t=null,u=null,v=null},b.setClearColor=function(a,b){n.copy(a),o=b!==undefined?b:1,eb.set(-k,-l,k,l)},b.setClearColorHex=function(a,b){n.setHex(a),o=b!==undefined?b:1,eb.set(-k,-l,k,l)},b.clear=function(){m.setTransform(1,0,0,-1,k,l),eb.isEmpty()||(eb.minSelf(db),eb.inflate(2),o<1&&m.clearRect(Math.floor(eb.getX()),Math.floor(eb.getY()),Math.floor(eb.getWidth()),Math.floor(eb.getHeight())),o>0&&(ub(THREE.NormalBlending),tb(1),zb("rgba("+Math.floor(n.r*255)+","+Math.floor(n.g*255)+","+Math.floor(n.b*255)+","+o+")"),m.fillRect(Math.floor(eb.getX()),Math.floor(eb.getY()),Math.floor(eb.getWidth()),Math.floor(eb.getHeight()))),eb.empty())},b.render=function(a,b){function o(a){var b,c,d,e;hb.setRGB(0,0,0),ib.setRGB(0,0,0),jb.setRGB(0,0,0);for(b=0,c=a.length;b<c;b++)d=a[b],e=d.color,d instanceof THREE.AmbientLight?(hb.r+=e.r,hb.g+=e.g,hb.b+=e.b):d instanceof THREE.DirectionalLight?(ib.r+=e.r,ib.g+=e.g,ib.b+=e.b):d instanceof THREE.PointLight&&(jb.r+=e.r,jb.g+=e.g,jb.b+=e.b)}function p(a,b,c,d){var e,f,g,h,i,j;for(e=0,f=a.length;e<f;e++){g=a[e],h=g.color;if(g instanceof THREE.DirectionalLight){i=g.matrixWorld.getPosition(),j=c.dot(i);if(j<=0)continue;j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j}else if(g instanceof THREE.PointLight){i=g.matrixWorld.getPosition(),j=c.dot(lb.sub(i,b).normalize());if(j<=0)continue;j*=g.distance==0?1:1-Math.min(b.distanceTo(i)/g.distance,1);if(j==0)continue;j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j}}}function q(a,b,c,d){tb(c.opacity),ub(c.blending);var e,f,g,h,i,j,n;if(c instanceof THREE.ParticleBasicMaterial){if(c.map){i=c.map.image,j=i.width>>1,n=i.height>>1,g=b.scale.x*k,h=b.scale.y*l,e=g*j,f=h*n,fb.set(a.x-e,a.y-f,a.x+e,a.y+f);if(!db.intersects(fb))return;m.save(),m.translate(a.x,a.y),m.rotate(-b.rotation),m.scale(g,-h),m.translate(-j,-n),m.drawImage(i,0,0),m.restore()}}else if(c instanceof THREE.ParticleCanvasMaterial){e=b.scale.x*k,f=b.scale.y*l,fb.set(a.x-e,a.y-f,a.x+e,a.y+f);if(!db.intersects(fb))return;yb(c.color.getContextStyle()),zb(c.color.getContextStyle()),m.save(),m.translate(a.x,a.y),m.rotate(-b.rotation),m.scale(e,f),c.program(m),m.restore()}}function r(a,b,c,d,e){tb(d.opacity),ub(d.blending),m.beginPath(),m.moveTo(a.positionScreen.x,a.positionScreen.y),m.lineTo(b.positionScreen.x,b.positionScreen.y),m.closePath(),d instanceof THREE.LineBasicMaterial&&(vb(d.linewidth),wb(d.linecap),xb(d.linejoin),yb(d.color.getContextStyle()),m.stroke(),fb.inflate(d.linewidth*2))}function s(a,d,e,g,h,i,j,k,l){c.info.render.vertices+=3,c.info.render.faces++,tb(k.opacity),ub(k.blending),C=a.positionScreen.x,D=a.positionScreen.y,E=d.positionScreen.x,F=d.positionScreen.y,G=e.positionScreen.x,H=e.positionScreen.y,u(C,D,E,F,G,H);if(k instanceof THREE.MeshBasicMaterial)if(k.map)k.map.mapping instanceof THREE.UVMapping&&(Y=j.uvs[0],Ab(C,D,E,F,G,H,Y[g].u,Y[g].v,Y[h].u,Y[h].v,Y[i].u,Y[i].v,k.map));else if(k.envMap){if(k.envMap.mapping instanceof THREE.SphericalReflectionMapping){var m=b.matrixWorldInverse;lb.copy(j.vertexNormalsWorld[g]),Z=(lb.x*m.elements[0]+lb.y*m.elements[4]+lb.z*m.elements[8])*.5+.5,$=-(lb.x*m.elements[1]+lb.y*m.elements[5]+lb.z*m.elements[9])*.5+.5,lb.copy(j.vertexNormalsWorld[h]),_=(lb.x*m.elements[0]+lb.y*m.elements[4]+lb.z*m.elements[8])*.5+.5,ab=-(lb.x*m.elements[1]+lb.y*m.elements[5]+lb.z*m.elements[9])*.5+.5,lb.copy(j.vertexNormalsWorld[i]),bb=(lb.x*m.elements[0]+lb.y*m.elements[4]+lb.z*m.elements[8])*.5+.5,cb=-(lb.x*m.elements[1]+lb.y*m.elements[5]+lb.z*m.elements[9])*.5+.5,Ab(C,D,E,F,G,H,Z,$,_,ab,bb,cb,k.envMap)}}else k.wireframe?kb(k.color,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):sb(k.color);else k instanceof THREE.MeshLambertMaterial?gb?!k.wireframe&&k.shading==THREE.SmoothShading&&j.vertexNormalsWorld.length==3?(P.r=Q.r=R.r=hb.r,P.g=Q.g=R.g=hb.g,P.b=Q.b=R.b=hb.b,p(f,j.v1.positionWorld,j.vertexNormalsWorld[0],P),p(f,j.v2.positionWorld,j.vertexNormalsWorld[1],Q),p(f,j.v3.positionWorld,j.vertexNormalsWorld[2],R),P.r=Math.max(0,Math.min(k.color.r*P.r,1)),P.g=Math.max(0,Math.min(k.color.g*P.g,1)),P.b=Math.max(0,Math.min(k.color.b*P.b,1)),Q.r=Math.max(0,Math.min(k.color.r*Q.r,1)),Q.g=Math.max(0,Math.min(k.color.g*Q.g,1)),Q.b=Math.max(0,Math.min(k.color.b*Q.b,1)),R.r=Math.max(0,Math.min(k.color.r*R.r,1)),R.g=Math.max(0,Math.min(k.color.g*R.g,1)),R.b=Math.max(0,Math.min(k.color.b*R.b,1)),S.r=(Q.r+R.r)*.5,S.g=(Q.g+R.g)*.5,S.b=(Q.b+R.b)*.5,X=Cb(P,Q,R,S),Bb(C,D,E,F,G,H,0,0,1,0,0,1,X)):(O.r=hb.r,O.g=hb.g,O.b=hb.b,p(f,j.centroidWorld,j.normalWorld,O),O.r=Math.max(0,Math.min(k.color.r*O.r,1)),O.g=Math.max(0,Math.min(k.color.g*O.g,1)),O.b=Math.max(0,Math.min(k.color.b*O.b,1)),k.wireframe?kb(O,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):sb(O)):k.wireframe?kb(k.color,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):sb(k.color):k instanceof THREE.MeshDepthMaterial?(V=b.near,W=b.far,P.r=P.g=P.b=1-Db(a.positionScreen.z,V,W),Q.r=Q.g=Q.b=1-Db(d.positionScreen.z,V,W),R.r=R.g=R.b=1-Db(e.positionScreen.z,V,W),S.r=(Q.r+R.r)*.5,S.g=(Q.g+R.g)*.5,S.b=(Q.b+R.b)*.5,X=Cb(P,Q,R,S),Bb(C,D,E,F,G,H,0,0,1,0,0,1,X)):k instanceof THREE.MeshNormalMaterial&&(O.r=Eb(j.normalWorld.x),O.g=Eb(j.normalWorld.y),O.b=Eb(j.normalWorld.z),k.wireframe?kb(O,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):sb(O))}function t(a,d,e,g,h,i,j,k,l){c.info.render.vertices+=4,c.info.render.faces++,tb(k.opacity),ub(k.blending);if(k.map||k.envMap){s(a,d,g,0,1,3,j,k,l),s(h,e,i,1,2,3,j,k,l);return}C=a.positionScreen.x,D=a.positionScreen.y,E=d.positionScreen.x,F=d.positionScreen.y,G=e.positionScreen.x,H=e.positionScreen.y,I=g.positionScreen.x,J=g.positionScreen.y,K=h.positionScreen.x,L=h.positionScreen.y,M=i.positionScreen.x,N=i.positionScreen.y,k instanceof THREE.MeshBasicMaterial?(v(C,D,E,F,G,H,I,J),k.wireframe?kb(k.color,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):sb(k.color)):k instanceof THREE.MeshLambertMaterial?gb?!k.wireframe&&k.shading==THREE.SmoothShading&&j.vertexNormalsWorld.length==4?(P.r=Q.r=R.r=S.r=hb.r,P.g=Q.g=R.g=S.g=hb.g,P.b=Q.b=R.b=S.b=hb.b,p(f,j.v1.positionWorld,j.vertexNormalsWorld[0],P),p(f,j.v2.positionWorld,j.vertexNormalsWorld[1],Q),p(f,j.v4.positionWorld,j.vertexNormalsWorld[3],R),p(f,j.v3.positionWorld,j.vertexNormalsWorld[2],S),P.r=Math.max(0,Math.min(k.color.r*P.r,1)),P.g=Math.max(0,Math.min(k.color.g*P.g,1)),P.b=Math.max(0,Math.min(k.color.b*P.b,1)),Q.r=Math.max(0,Math.min(k.color.r*Q.r,1)),Q.g=Math.max(0,Math.min(k.color.g*Q.g,1)),Q.b=Math.max(0,Math.min(k.color.b*Q.b,1)),R.r=Math.max(0,Math.min(k.color.r*R.r,1)),R.g=Math.max(0,Math.min(k.color.g*R.g,1)),R.b=Math.max(0,Math.min(k.color.b*R.b,1)),S.r=Math.max(0,Math.min(k.color.r*S.r,1)),S.g=Math.max(0,Math.min(k.color.g*S.g,1)),S.b=Math.max(0,Math.min(k.color.b*S.b,1)),X=Cb(P,Q,R,S),u(C,D,E,F,I,J),Bb(C,D,E,F,I,J,0,0,1,0,0,1,X),u(K,L,G,H,M,N),Bb(K,L,G,H,M,N,1,0,1,1,0,1,X)):(O.r=hb.r,O.g=hb.g,O.b=hb.b,p(f,j.centroidWorld,j.normalWorld,O),O.r=Math.max(0,Math.min(k.color.r*O.r,1)),O.g=Math.max(0,Math.min(k.color.g*O.g,1)),O.b=Math.max(0,Math.min(k.color.b*O.b,1)),v(C,D,E,F,G,H,I,J),k.wireframe?kb(O,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):sb(O)):(v(C,D,E,F,G,H,I,J),k.wireframe?kb(k.color,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):sb(k.color)):k instanceof THREE.MeshNormalMaterial?(O.r=Eb(j.normalWorld.x),O.g=Eb(j.normalWorld.y),O.b=Eb(j.normalWorld.z),v(C,D,E,F,G,H,I,J),k.wireframe?kb(O,k.wireframeLinewidth,k.wireframeLinecap,k.wireframeLinejoin):sb(O)):k instanceof THREE.MeshDepthMaterial&&(V=b.near,W=b.far,P.r=P.g=P.b=1-Db(a.positionScreen.z,V,W),Q.r=Q.g=Q.b=1-Db(d.positionScreen.z,V,W),R.r=R.g=R.b=1-Db(g.positionScreen.z,V,W),S.r=S.g=S.b=1-Db(e.positionScreen.z,V,W),X=Cb(P,Q,R,S),u(C,D,E,F,I,J),Bb(C,D,E,F,I,J,0,0,1,0,0,1,X),u(K,L,G,H,M,N),Bb(K,L,G,H,M,N,1,0,1,1,0,1,X))}function u(a,b,c,d,e,f){m.beginPath(),m.moveTo(a,b),m.lineTo(c,d),m.lineTo(e,f),m.lineTo(a,b),m.closePath()}function v(a,b,c,d,e,f,g,h){m.beginPath(),m.moveTo(a,b),m.lineTo(c,d),m.lineTo(e,f),m.lineTo(g,h),m.lineTo(a,b),m.closePath()}function kb(a,b,c,d){vb(b),wb(c),xb(d),yb(a.getContextStyle()),m.stroke(),fb.inflate(b*2)}function sb(a){zb(a.getContextStyle()),m.fill()}function Ab(a,b,c,d,e,f,g,h,i,j,k,l,n){if(n.image.width==0)return;if(n.needsUpdate==1||T[n.id]==undefined){var o=n.wrapS==THREE.RepeatWrapping,p=n.wrapT==THREE.RepeatWrapping;T[n.id]=m.createPattern(n.image,o&&p?"repeat":o&&!p?"repeat-x":!o&&p?"repeat-y":"no-repeat"),n.needsUpdate=!1}zb(T[n.id]);var q,r,s,t,u,v,w,x,y=n.offset.x/n.repeat.x,z=n.offset.y/n.repeat.y,A=n.image.width*n.repeat.x,B=n.image.height*n.repeat.y;g=(g+y)*A,h=(h+z)*B,i=(i+y)*A,j=(j+z)*B,k=(k+y)*A,l=(l+z)*B,c-=a,d-=b,e-=a,f-=b,i-=g,j-=h,k-=g,l-=h,w=i*l-k*j;if(w==0){if(U[n.id]===undefined){var C=document.createElement("canvas");C.width=n.image.width,C.height=n.image.height;var D=C.getContext("2d");D.drawImage(n.image,0,0),U[n.id]=D.getImageData(0,0,n.image.width,n.image.height).data}var E=U[n.id],F=(Math.floor(g)+Math.floor(h)*n.image.width)*4;O.setRGB(E[F]/255,E[F+1]/255,E[F+2]/255),sb(O);return}x=1/w,q=(l*c-j*e)*x,r=(l*d-j*f)*x,s=(i*e-k*c)*x,t=(i*f-k*d)*x,u=a-q*g-s*h,v=b-r*g-t*h,m.save(),m.transform(q,r,s,t,u,v),m.fill(),m.restore()}function Bb(a,b,c,d,e,f,g,h,i,j,k,l,n){var o,p,q,r,s,t,u,v,w=n.width-1,x=n.height-1;g*=w,h*=x,i*=w,j*=x,k*=w,l*=x,c-=a,d-=b,e-=a,f-=b,i-=g,j-=h,k-=g,l-=h,u=i*l-k*j,v=1/u,o=(l*c-j*e)*v,p=(l*d-j*f)*v,q=(i*e-k*c)*v,r=(i*f-k*d)*v,s=a-o*g-q*h,t=b-p*g-r*h,m.save(),m.transform(o,p,q,r,s,t),m.clip(),m.drawImage(n,0,0),m.restore()}function Cb(a,b,c,d){var e=~~(a.r*255),f=~~(a.g*255),g=~~(a.b*255),h=~~(b.r*255),i=~~(b.g*255),j=~~(b.b*255),k=~~(c.r*255),l=~~(c.g*255),m=~~(c.b*255),n=~~(d.r*255),o=~~(d.g*255),p=~~(d.b*255);return pb[0]=e<0?0:e>255?255:e,pb[1]=f<0?0:f>255?255:f,pb[2]=g<0?0:g>255?255:g,pb[4]=h<0?0:h>255?255:h,pb[5]=i<0?0:i>255?255:i,pb[6]=j<0?0:j>255?255:j,pb[8]=k<0?0:k>255?255:k,pb[9]=l<0?0:l>255?255:l,pb[10]=m<0?0:m>255?255:m,pb[12]=n<0?0:n>255?255:n,pb[13]=o<0?0:o>255?255:o,pb[14]=p<0?0:p>255?255:p,nb.putImageData(ob,0,0),rb.drawImage(mb,0,0),qb}function Db(a,b,c){var d=(a-b)/(c-b);return d*d*(3-2*d)}function Eb(a){var b=(a+1)*.5;return b<0?0:b>1?1:b}function Fb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d,f;if(e==0)return;f=1/Math.sqrt(e),c*=f,d*=f,b.x+=c,b.y+=d,a.x-=c,a.y-=d}var h,i,j,n;this.autoClear?this.clear():m.setTransform(1,0,0,-1,k,l),c.info.render.vertices=0,c.info.render.faces=0,d=g.projectScene(a,b,this.sortElements),e=d.elements,f=d.lights,gb=f.length>0,gb&&o(f);for(h=0,i=e.length;h<i;h++){j=e[h],n=j.material,n=n instanceof THREE.MeshFaceMaterial?j.faceMaterial:n;if(n===undefined||n.visible===!1)continue;fb.empty(),j instanceof THREE.RenderableParticle?(w=j,w.x*=k,w.y*=l,q(w,j,n,a)):j instanceof THREE.RenderableLine?(w=j.v1,x=j.v2,w.positionScreen.x*=k,w.positionScreen.y*=l,x.positionScreen.x*=k,x.positionScreen.y*=l,fb.addPoint(w.positionScreen.x,w.positionScreen.y),fb.addPoint(x.positionScreen.x,x.positionScreen.y),db.intersects(fb)&&r(w,x,j,n,a)):j instanceof THREE.RenderableFace3?(w=j.v1,x=j.v2,y=j.v3,w.positionScreen.x*=k,w.positionScreen.y*=l,x.positionScreen.x*=k,x.positionScreen.y*=l,y.positionScreen.x*=k,y.positionScreen.y*=l,n.overdraw&&(Fb(w.positionScreen,x.positionScreen),Fb(x.positionScreen,y.positionScreen),Fb(y.positionScreen,w.positionScreen)),fb.add3Points(w.positionScreen.x,w.positionScreen.y,x.positionScreen.x,x.positionScreen.y,y.positionScreen.x,y.positionScreen.y),db.intersects(fb)&&s(w,x,y,0,1,2,j,n,a)):j instanceof THREE.RenderableFace4&&(w=j.v1,x=j.v2,y=j.v3,z=j.v4,w.positionScreen.x*=k,w.positionScreen.y*=l,x.positionScreen.x*=k,x.positionScreen.y*=l,y.positionScreen.x*=k,y.positionScreen.y*=l,z.positionScreen.x*=k,z.positionScreen.y*=l,A.positionScreen.copy(x.positionScreen),B.positionScreen.copy(z.positionScreen),n.overdraw&&(Fb(w.positionScreen,x.positionScreen),Fb(x.positionScreen,z.positionScreen),Fb(z.positionScreen,w.positionScreen),Fb(y.positionScreen,A.positionScreen),Fb(y.positionScreen,B.positionScreen)),fb.addPoint(w.positionScreen.x,w.positionScreen.y),fb.addPoint(x.positionScreen.x,x.positionScreen.y),fb.addPoint(y.positionScreen.x,y.positionScreen.y),fb.addPoint(z.positionScreen.x,z.positionScreen.y),db.intersects(fb)&&t(w,x,y,z,A,B,j,n,a)),eb.addRectangle(fb)}m.setTransform(1,0,0,1,0,0)}},THREE.SVGRenderer=function(){function G(a){var b,c,d,e;t.setRGB(0,0,0),u.setRGB(0,0,0),v.setRGB(0,0,0);for(b=0,c=a.length;b<c;b++)d=a[b],e=d.color,d instanceof THREE.AmbientLight?(t.r+=e.r,t.g+=e.g,t.b+=e.b):d instanceof THREE.DirectionalLight?(u.r+=e.r,u.g+=e.g,u.b+=e.b):d instanceof THREE.PointLight&&(v.r+=e.r,v.g+=e.g,v.b+=e.b)}function H(a,b,c,d){var e,f,g,h,i,j;for(e=0,f=a.length;e<f;e++){g=a[e],h=g.color;if(g instanceof THREE.DirectionalLight){i=g.matrixWorld.getPosition(),j=c.dot(i);if(j<=0)continue;j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j}else if(g instanceof THREE.PointLight){i=g.matrixWorld.getPosition(),j=c.dot(x.sub(i,b).normalize());if(j<=0)continue;j*=g.distance==0?1:1-Math.min(b.distanceTo(i)/g.distance,1);if(j==0)continue;j*=g.intensity,d.r+=h.r*j,d.g+=h.g*j,d.b+=h.b*j}}}function I(a,b,c,d){}function J(a,b,c,d,e){B=M(E++),B.setAttribute("x1",a.positionScreen.x),B.setAttribute("y1",a.positionScreen.y),B.setAttribute("x2",b.positionScreen.x),B.setAttribute("y2",b.positionScreen.y),d instanceof THREE.LineBasicMaterial&&(B.setAttribute("style","fill: none; stroke: "+d.color.getContextStyle()+"; stroke-width: "+d.linewidth+"; stroke-opacity: "+d.opacity+"; stroke-linecap: "+d.linecap+"; stroke-linejoin: "+d.linejoin),g.appendChild(B))}function K(a,c,d,f,h,i){b.info.render.vertices+=3,b.info.render.faces++,B=N(C++),B.setAttribute("d","M "+a.positionScreen.x+" "+a.positionScreen.y+" L "+c.positionScreen.x+" "+c.positionScreen.y+" L "+d.positionScreen.x+","+d.positionScreen.y+"z"),h instanceof THREE.MeshBasicMaterial?s.copy(h.color):h instanceof THREE.MeshLambertMaterial?r?(s.r=t.r,s.g=t.g,s.b=t.b,H(e,f.centroidWorld,f.normalWorld,s),s.r=Math.max(0,Math.min(h.color.r*s.r,1)),s.g=Math.max(0,Math.min(h.color.g*s.g,1)),s.b=Math.max(0,Math.min(h.color.b*s.b,1))):s.copy(h.color):h instanceof THREE.MeshDepthMaterial?(w=1-h.__2near/(h.__farPlusNear-f.z*h.__farMinusNear),s.setRGB(w,w,w)):h instanceof THREE.MeshNormalMaterial&&s.setRGB(P(f.normalWorld.x),P(f.normalWorld.y),P(f.normalWorld.z)),h.wireframe?B.setAttribute("style","fill: none; stroke: "+s.getContextStyle()+"; stroke-width: "+h.wireframeLinewidth+"; stroke-opacity: "+h.opacity+"; stroke-linecap: "+h.wireframeLinecap+"; stroke-linejoin: "+h.wireframeLinejoin):B.setAttribute("style","fill: "+s.getContextStyle()+"; fill-opacity: "+h.opacity),g.appendChild(B)}function L(a,c,d,f,h,i,j){b.info.render.vertices+=4,b.info.render.faces++,B=N(C++),B.setAttribute("d","M "+a.positionScreen.x+" "+a.positionScreen.y+" L "+c.positionScreen.x+" "+c.positionScreen.y+" L "+d.positionScreen.x+","+d.positionScreen.y+" L "+f.positionScreen.x+","+f.positionScreen.y+"z"),i instanceof THREE.MeshBasicMaterial?s.copy(i.color):i instanceof THREE.MeshLambertMaterial?r?(s.r=t.r,s.g=t.g,s.b=t.b,H(e,h.centroidWorld,h.normalWorld,s),s.r=Math.max(0,Math.min(i.color.r*s.r,1)),s.g=Math.max(0,Math.min(i.color.g*s.g,1)),s.b=Math.max(0,Math.min(i.color.b*s.b,1))):s.copy(i.color):i instanceof THREE.MeshDepthMaterial?(w=1-i.__2near/(i.__farPlusNear-h.z*i.__farMinusNear),s.setRGB(w,w,w)):i instanceof THREE.MeshNormalMaterial&&s.setRGB(P(h.normalWorld.x),P(h.normalWorld.y),P(h.normalWorld.z)),i.wireframe?B.setAttribute("style","fill: none; stroke: "+s.getContextStyle()+"; stroke-width: "+i.wireframeLinewidth+"; stroke-opacity: "+i.opacity+"; stroke-linecap: "+i.wireframeLinecap+"; stroke-linejoin: "+i.wireframeLinejoin):B.setAttribute("style","fill: "+s.getContextStyle()+"; fill-opacity: "+i.opacity),g.appendChild(B)}function M(a){return A[a]==null?(A[a]=document.createElementNS("http://www.w3.org/2000/svg","line"),F==0&&A[a].setAttribute("shape-rendering","crispEdges"),A[a]):A[a]}function N(a){return y[a]==null?(y[a]=document.createElementNS("http://www.w3.org/2000/svg","path"),F==0&&y[a].setAttribute("shape-rendering","crispEdges"),y[a]):y[a]}function O(a){return z[a]==null?(z[a]=document.createElementNS("http://www.w3.org/2000/svg","circle"),F==0&&z[a].setAttribute("shape-rendering","crispEdges"),z[a]):z[a]}function P(a){var b=(a+1)*.5;return b<0?0:b>1?1:b}function Q(a){while(a.length<6)a="0"+a;return a}var a=this;console.log("THREE.SVGRenderer",THREE.REVISION);var b=a,c,d,e,f=new THREE.Projector,g=document.createElementNS("http://www.w3.org/2000/svg","svg"),h,i,j,k,l,m,n,o,p=new THREE.Rectangle,q=new THREE.Rectangle,r=!1,s=new THREE.Color,t=new THREE.Color,u=new THREE.Color,v=new THREE.Color,w,x=new THREE.Vector3,y=[],z=[],A=[],B,C,D,E,F=1;a.domElement=g,a.autoClear=!0,a.sortObjects=!0,a.sortElements=!0,a.info={render:{vertices:0,faces:0}},a.setQuality=function(a){switch(a){case"high":F=1;break;case"low":F=0}},a.setSize=function(a,b){h=a,i=b,j=h/2,k=i/2,g.setAttribute("viewBox",-j+" "+ -k+" "+h+" "+i),g.setAttribute("width",h),g.setAttribute("height",i),p.set(-j,-k,j,k)},a.clear=function(){while(g.childNodes.length>0)g.removeChild(g.childNodes[0])},a.render=function(a,g){var h,i,s,t;this.autoClear&&this.clear(),b.info.render.vertices=0,b.info.render.faces=0,c=f.projectScene(a,g,this.sortElements),d=c.elements,e=c.lights,C=0,D=0,E=0,r=e.length>0,r&&G(e);for(h=0,i=d.length;h<i;h++){s=d[h],t=s.material,t=t instanceof THREE.MeshFaceMaterial?s.faceMaterial:t;if(t===undefined||t.visible===!1)continue;q.empty();if(s instanceof THREE.RenderableParticle)l=s,l.x*=j,l.y*=-k,I(l,s,t,a);else if(s instanceof THREE.RenderableLine){l=s.v1,m=s.v2,l.positionScreen.x*=j,l.positionScreen.y*=-k,m.positionScreen.x*=j,m.positionScreen.y*=-k,q.addPoint(l.positionScreen.x,l.positionScreen.y),q.addPoint(m.positionScreen.x,m.positionScreen.y);if(!p.intersects(q))continue;J(l,m,s,t,a)}else if(s instanceof THREE.RenderableFace3){l=s.v1,m=s.v2,n=s.v3,l.positionScreen.x*=j,l.positionScreen.y*=-k,m.positionScreen.x*=j,m.positionScreen.y*=-k,n.positionScreen.x*=j,n.positionScreen.y*=-k,q.addPoint(l.positionScreen.x,l.positionScreen.y),q.addPoint(m.positionScreen.x,m.positionScreen.y),q.addPoint(n.positionScreen.x,n.positionScreen.y);if(!p.intersects(q))continue;K(l,m,n,s,t,a)}else if(s instanceof THREE.RenderableFace4){l=s.v1,m=s.v2,n=s.v3,o=s.v4,l.positionScreen.x*=j,l.positionScreen.y*=-k,m.positionScreen.x*=j,m.positionScreen.y*=-k,n.positionScreen.x*=j,n.positionScreen.y*=-k,o.positionScreen.x*=j,o.positionScreen.y*=-k,q.addPoint(l.positionScreen.x,l.positionScreen.y),q.addPoint(m.positionScreen.x,m.positionScreen.y),q.addPoint(n.positionScreen.x,n.positionScreen.y),q.addPoint(o.positionScreen.x,o.positionScreen.y);if(!p.intersects(q))continue;L(l,m,n,o,s,t,a)}}}},THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * vReflect.x, vReflect.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, reflectivity );\n} else {\ngl_FragColor.xyz = gl_FragColor.xyz * cubeColor.xyz;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[ 0 ].xyz, objectMatrix[ 1 ].xyz, objectMatrix[ 2 ].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refractionRatio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, gl_PointCoord );\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( map, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( map, vUv );\n#endif\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nlVector = normalize( lVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - mPosition.xyz ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvWorldPosition = mPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngle[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngle[ i ] ) {\nspotEffect = pow( spotEffect, spotLightExponent[ i ] );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\n#endif",skinning_vertex:"#ifdef USE_SKINNING\ngl_Position  = ( boneGlobalMatrices[ int( skinIndex.x ) ] * skinVertexA ) * skinWeight.x;\ngl_Position += ( boneGlobalMatrices[ int( skinIndex.y ) ] * skinVertexB ) * skinWeight.y;\ngl_Position  = projectionMatrix * modelViewMatrix * gl_Position;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( morphed, 1.0 );\n#endif",default_vertex:"#ifndef USE_MORPHTARGETS\n#ifndef USE_SKINNING\ngl_Position = projectionMatrix * mvPosition;\n#endif\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\nvec3 transformedNormal = normalMatrix * morphedNormal;\n#else\nvec3 transformedNormal = normalMatrix * normal;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#ifdef SHADOWMAP_SOFT\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\n#ifdef USE_MORPHTARGETS\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( morphed, 1.0 );\n#else\nvShadowCoord[ i ] = shadowMatrix[ i ] * objectMatrix * vec4( position, 1.0 );\n#endif\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"},THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++){d=this.clone(a[b]);for(c in d)e[c]=d[c]}return e},clone:function(a){var b,c,d,e={};for(b in a){e[b]={};for(c in a[b])d=a[b][c],d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?e[b][c]=d.clone():d instanceof Array?e[b][c]=d.slice():e[b][c]=d}return e}},THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:2,texture:null},envMap:{type:"t",value:1,texture:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},fog:{fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngle:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:0,texture:null},fogDensity:{type:"f",value:25e-5},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2e3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:6,texture:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}},THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2e3},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalMatrix * normal;\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,"#ifndef USE_ENVMAP","vec4 mPosition = objectMatrix * vec4( position, 1.0 );","#endif",THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;","varying vec3 vLightFront;","#ifdef DOUBLE_SIDED","varying vec3 vLightBack;","#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,"#ifdef DOUBLE_SIDED","if ( gl_FrontFacing )","gl_FragColor.xyz *= vLightFront;","else","gl_FragColor.xyz *= vLightBack;","#else","gl_FragColor.xyz *= vLightFront;","#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["varying vec3 vViewPosition;","varying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.color_vertex,"#ifndef USE_ENVMAP","vec4 mPosition = objectMatrix * vec4( position, 1.0 );","#endif","vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.morphnormal_vertex,"vNormal = transformedNormal;",THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;","uniform float opacity;","uniform vec3 ambient;","uniform vec3 emissive;","uniform vec3 specular;","uniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;","uniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","#ifdef USE_SIZEATTENUATION","gl_PointSize = size * ( scale / length( mvPosition.xyz ) );","#else","gl_PointSize = size;","#endif","gl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;","uniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {","gl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,"void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}},THREE.WebGLRenderer=function(a){function X(a){a.__webglVertexBuffer=n.createBuffer(),a.__webglColorBuffer=n.createBuffer(),m.info.geometries++}function Y(a){a.__webglVertexBuffer=n.createBuffer(),a.__webglColorBuffer=n.createBuffer(),m.info.memory.geometries++}function Z(a){a.__webglVertexBuffer=n.createBuffer(),a.__webglColorBuffer=n.createBuffer(),m.info.memory.geometries++}function $(a){a.__webglVertexBuffer=n.createBuffer(),a.__webglNormalBuffer=n.createBuffer(),a.__webglTangentBuffer=n.createBuffer(),a.__webglColorBuffer=n.createBuffer(),a.__webglUVBuffer=n.createBuffer(),a.__webglUV2Buffer=n.createBuffer(),a.__webglSkinVertexABuffer=n.createBuffer(),a.__webglSkinVertexBBuffer=n.createBuffer(),a.__webglSkinIndicesBuffer=n.createBuffer(),a.__webglSkinWeightsBuffer=n.createBuffer(),a.__webglFaceBuffer=n.createBuffer(),a.__webglLineBuffer=n.createBuffer();var b,c;if(a.numMorphTargets){a.__webglMorphTargetsBuffers=[];for(b=0,c=a.numMorphTargets;b<c;b++)a.__webglMorphTargetsBuffers.push(n.createBuffer())}if(a.numMorphNormals){a.__webglMorphNormalsBuffers=[];for(b=0,c=a.numMorphNormals;b<c;b++)a.__webglMorphNormalsBuffers.push(n.createBuffer())}m.info.memory.geometries++}function _(a){n.deleteBuffer(a.__webglVertexBuffer),n.deleteBuffer(a.__webglColorBuffer),m.info.memory.geometries--}function ab(a){n.deleteBuffer(a.__webglVertexBuffer),n.deleteBuffer(a.__webglColorBuffer),m.info.memory.geometries--}function bb(a){n.deleteBuffer(a.__webglVertexBuffer),n.deleteBuffer(a.__webglColorBuffer),m.info.memory.geometries--}function cb(a){n.deleteBuffer(a.__webglVertexBuffer),n.deleteBuffer(a.__webglNormalBuffer),n.deleteBuffer(a.__webglTangentBuffer),n.deleteBuffer(a.__webglColorBuffer),n.deleteBuffer(a.__webglUVBuffer),n.deleteBuffer(a.__webglUV2Buffer),n.deleteBuffer(a.__webglSkinVertexABuffer),n.deleteBuffer(a.__webglSkinVertexBBuffer),n.deleteBuffer(a.__webglSkinIndicesBuffer),n.deleteBuffer(a.__webglSkinWeightsBuffer),n.deleteBuffer(a.__webglFaceBuffer),n.deleteBuffer(a.__webglLineBuffer);var b,c;if(a.numMorphTargets)for(b=0,c=a.numMorphTargets;b<c;b++)n.deleteBuffer(a.__webglMorphTargetsBuffers[b]);if(a.numMorphNormals)for(b=0,c=a.numMorphNormals;b<c;b++)n.deleteBuffer(a.__webglMorphNormalsBuffers[b]);if(a.__webglCustomAttributesList)for(var d in a.__webglCustomAttributesList)n.deleteBuffer(a.__webglCustomAttributesList[d].buffer);m.info.memory.geometries--}function db(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){a.__webglCustomAttributesList===undefined&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;f.type==="v2"?g=2:f.type==="v3"?g=3:f.type==="v4"?g=4:f.type==="c"&&(g=3),f.size=g,f.array=new Float32Array(c*g),f.buffer=n.createBuffer(),f.buffer.belongsToAttribute=e,f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function eb(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(c*3),a.__colorArray=new Float32Array(c*3),a.__sortArray=[],a.__webglParticleCount=c,db(a,b)}function fb(a,b){var c=a.vertices.length;a.__vertexArray=new Float32Array(c*3),a.__colorArray=new Float32Array(c*3),a.__webglLineCount=c,db(a,b)}function gb(a){var b=a.vertices.length;a.__vertexArray=new Float32Array(b*3),a.__colorArray=new Float32Array(b*3),a.__webglVertexCount=b}function hb(a,b){var c=b.geometry,d=a.faces3,e=a.faces4,f=d.length*3+e.length*4,g=d.length*1+e.length*2,h=d.length*3+e.length*4,i=ib(b,a),j=mb(i),k=kb(i),l=lb(i);a.__vertexArray=new Float32Array(f*3),k&&(a.__normalArray=new Float32Array(f*3)),c.hasTangents&&(a.__tangentArray=new Float32Array(f*4)),l&&(a.__colorArray=new Float32Array(f*3));if(j){if(c.faceUvs.length>0||c.faceVertexUvs.length>0)a.__uvArray=new Float32Array(f*2);if(c.faceUvs.length>1||c.faceVertexUvs.length>1)a.__uv2Array=new Float32Array(f*2)}b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinVertexAArray=new Float32Array(f*4),a.__skinVertexBArray=new Float32Array(f*4),a.__skinIndexArray=new Float32Array(f*4),a.__skinWeightArray=new Float32Array(f*4)),a.__faceArray=new Uint16Array(g*3),a.__lineArray=new Uint16Array(h*2);var m,o;if(a.numMorphTargets){a.__morphTargetsArrays=[];for(m=0,o=a.numMorphTargets;m<o;m++)a.__morphTargetsArrays.push(new Float32Array(f*3))}if(a.numMorphNormals){a.__morphNormalsArrays=[];for(m=0,o=a.numMorphNormals;m<o;m++)a.__morphNormalsArrays.push(new Float32Array(f*3))}a.__webglFaceCount=g*3,a.__webglLineCount=h*2;if(i.attributes){a.__webglCustomAttributesList===undefined&&(a.__webglCustomAttributesList=[]);for(var p in i.attributes){var q=i.attributes[p],r={};for(var s in q)r[s]=q[s];if(!r.__webglInitialized||r.createUniqueBuffers){r.__webglInitialized=!0;var t=1;r.type==="v2"?t=2:r.type==="v3"?t=3:r.type==="v4"?t=4:r.type==="c"&&(t=3),r.size=t,r.array=new Float32Array(f*t),r.buffer=n.createBuffer(),r.buffer.belongsToAttribute=p,q.needsUpdate=!0,r.__original=q}a.__webglCustomAttributesList.push(r)}}a.__inittedArrays=!0}function ib(a,b){if(!(!a.material||a.material instanceof THREE.MeshFaceMaterial))return a.material;if(b.materialIndex>=0)return a.geometry.materials[b.materialIndex]}function jb(a){return a&&a.shading!==undefined&&a.shading===THREE.SmoothShading}function kb(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:jb(a)?THREE.SmoothShading:THREE.FlatShading}function lb(a){return a.vertexColors?a.vertexColors:!1}function mb(a){return a.map||a.lightMap||a instanceof THREE.ShaderMaterial?!0:!1}function nb(a,b,c){var d,e,f,g,h,i,j=a.vertices,k=j.length,l=a.colors,m=l.length,o=a.__vertexArray,p=a.__colorArray,q=a.__sortArray,r=a.verticesNeedUpdate,s=a.elementsNeedUpdate,t=a.colorsNeedUpdate,u=a.__webglCustomAttributesList,v,w,x,y,z,A;if(c.sortParticles){P.copy(O),P.multiplySelf(c.matrixWorld);for(d=0;d<k;d++)f=j[d],Q.copy(f),P.multiplyVector3(Q),q[d]=[Q.z,d];q.sort(function(a,b){return b[0]-a[0]});for(d=0;d<k;d++)f=j[q[d][1]],g=d*3,o[g]=f.x,o[g+1]=f.y,o[g+2]=f.z;for(e=0;e<m;e++)g=e*3,i=l[q[e][1]],p[g]=i.r,p[g+1]=i.g,p[g+2]=i.b;if(u)for(v=0,w=u.length;v<w;v++){A=u[v];if(A.boundTo!==undefined&&A.boundTo!=="vertices")continue;g=0,y=A.value.length;if(A.size===1)for(x=0;x<y;x++)h=q[x][1],A.array[x]=A.value[h];else if(A.size===2)for(x=0;x<y;x++)h=q[x][1],z=A.value[h],A.array[g]=z.x,A.array[g+1]=z.y,g+=2;else if(A.size===3)if(A.type==="c")for(x=0;x<y;x++)h=q[x][1],z=A.value[h],A.array[g]=z.r,A.array[g+1]=z.g,A.array[g+2]=z.b,g+=3;else for(x=0;x<y;x++)h=q[x][1],z=A.value[h],A.array[g]=z.x,A.array[g+1]=z.y,A.array[g+2]=z.z,g+=3;else if(A.size===4)for(x=0;x<y;x++)h=q[x][1],z=A.value[h],A.array[g]=z.x,A.array[g+1]=z.y,A.array[g+2]=z.z,A.array[g+3]=z.w,g+=4}}else{if(r)for(d=0;d<k;d++)f=j[d],g=d*3,o[g]=f.x,o[g+1]=f.y,o[g+2]=f.z;if(t)for(e=0;e<m;e++)i=l[e],g=e*3,p[g]=i.r,p[g+1]=i.g,p[g+2]=i.b;if(u)for(v=0,w=u.length;v<w;v++){A=u[v];if(A.needsUpdate&&(A.boundTo===undefined||A.boundTo==="vertices")){y=A.value.length,g=0;if(A.size===1)for(x=0;x<y;x++)A.array[x]=A.value[x];else if(A.size===2)for(x=0;x<y;x++)z=A.value[x],A.array[g]=z.x,A.array[g+1]=z.y,g+=2;else if(A.size===3)if(A.type==="c")for(x=0;x<y;x++)z=A.value[x],A.array[g]=z.r,A.array[g+1]=z.g,A.array[g+2]=z.b,g+=3;else for(x=0;x<y;x++)z=A.value[x],A.array[g]=z.x,A.array[g+1]=z.y,A.array[g+2]=z.z,g+=3;else if(A.size===4)for(x=0;x<y;x++)z=A.value[x],A.array[g]=z.x,A.array[g+1]=z.y,A.array[g+2]=z.z,A.array[g+3]=z.w,g+=4}}}if(r||c.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,o,b);if(t||c.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,p,b);if(u)for(v=0,w=u.length;v<w;v++){A=u[v];if(A.needsUpdate||c.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,A.buffer),n.bufferData(n.ARRAY_BUFFER,A.array,b)}}function ob(a,b){var c,d,e,f,g,h=a.vertices,i=a.colors,j=h.length,k=i.length,l=a.__vertexArray,m=a.__colorArray,o=a.verticesNeedUpdate,p=a.colorsNeedUpdate,q=a.__webglCustomAttributesList,r,s,t,u,v,w;if(o){for(c=0;c<j;c++)e=h[c],f=c*3,l[f]=e.x,l[f+1]=e.y,l[f+2]=e.z;n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,l,b)}if(p){for(d=0;d<k;d++)g=i[d],f=d*3,m[f]=g.r,m[f+1]=g.g,m[f+2]=g.b;n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,m,b)}if(q)for(r=0,s=q.length;r<s;r++){w=q[r];if(w.needsUpdate&&(w.boundTo===undefined||w.boundTo==="vertices")){f=0,u=w.value.length;if(w.size===1)for(t=0;t<u;t++)w.array[t]=w.value[t];else if(w.size===2)for(t=0;t<u;t++)v=w.value[t],w.array[f]=v.x,w.array[f+1]=v.y,f+=2;else if(w.size===3)if(w.type==="c")for(t=0;t<u;t++)v=w.value[t],w.array[f]=v.r,w.array[f+1]=v.g,w.array[f+2]=v.b,f+=3;else for(t=0;t<u;t++)v=w.value[t],w.array[f]=v.x,w.array[f+1]=v.y,w.array[f+2]=v.z,f+=3;else if(w.size===4)for(t=0;t<u;t++)v=w.value[t],w.array[f]=v.x,w.array[f+1]=v.y,w.array[f+2]=v.z,w.array[f+3]=v.w,f+=4;n.bindBuffer(n.ARRAY_BUFFER,w.buffer),n.bufferData(n.ARRAY_BUFFER,w.array,b)}}}function pb(a,b){var c,d,e,f,g,h=a.vertices,i=a.colors,j=h.length,k=i.length,l=a.__vertexArray,m=a.__colorArray,o=a.verticesNeedUpdate,p=a.colorsNeedUpdate;if(o){for(c=0;c<j;c++)e=h[c],f=c*3,l[f]=e.x,l[f+1]=e.y,l[f+2]=e.z;n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,l,b)}if(p){for(d=0;d<k;d++)g=i[d],f=d*3,m[f]=g.r,m[f+1]=g.g,m[f+2]=g.b;n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,m,b)}}function qb(a,b,c,d,e){if(!a.__inittedArrays)return;var f=kb(e),g=lb(e),h=mb(e),i=f===THREE.SmoothShading,j,k,l,m,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,$,_,ab,bb,cb,db,eb,fb,gb,hb,ib,jb,nb=0,ob=0,pb=0,qb=0,rb=0,sb=0,tb=0,ub=0,vb=0,wb=0,xb=0,yb=0,zb=0,Ab,Bb=a.__vertexArray,Cb=a.__uvArray,Db=a.__uv2Array,Eb=a.__normalArray,Fb=a.__tangentArray,Gb=a.__colorArray,Hb=a.__skinVertexAArray,Ib=a.__skinVertexBArray,Jb=a.__skinIndexArray,Kb=a.__skinWeightArray,Lb=a.__morphTargetsArrays,Mb=a.__morphNormalsArrays,Nb=a.__webglCustomAttributesList,Ob,Pb=a.__faceArray,Qb=a.__lineArray,Rb=b.geometry,Sb=Rb.verticesNeedUpdate,Tb=Rb.elementsNeedUpdate,Ub=Rb.uvsNeedUpdate,Vb=Rb.normalsNeedUpdate,Wb=Rb.tangetsNeedUpdate,Xb=Rb.colorsNeedUpdate,Yb=Rb.morphTargetsNeedUpdate,Zb=Rb.vertices,$b=a.faces3,_b=a.faces4,ac=Rb.faces,bc=Rb.faceVertexUvs[0],cc=Rb.faceVertexUvs[1],dc=Rb.colors,ec=Rb.skinVerticesA,fc=Rb.skinVerticesB,gc=Rb.skinIndices,hc=Rb.skinWeights,ic=Rb.morphTargets,jc=Rb.morphNormals;if(Sb){for(j=0,k=$b.length;j<k;j++)m=ac[$b[j]],v=Zb[m.a],w=Zb[m.b],x=Zb[m.c],Bb[ob]=v.x,Bb[ob+1]=v.y,Bb[ob+2]=v.z,Bb[ob+3]=w.x,Bb[ob+4]=w.y,Bb[ob+5]=w.z,Bb[ob+6]=x.x,Bb[ob+7]=x.y,Bb[ob+8]=x.z,ob+=9;for(j=0,k=_b.length;j<k;j++)m=ac[_b[j]],v=Zb[m.a],w=Zb[m.b],x=Zb[m.c],y=Zb[m.d],Bb[ob]=v.x,Bb[ob+1]=v.y,Bb[ob+2]=v.z,Bb[ob+3]=w.x,Bb[ob+4]=w.y,Bb[ob+5]=w.z,Bb[ob+6]=x.x,Bb[ob+7]=x.y,Bb[ob+8]=x.z,Bb[ob+9]=y.x,Bb[ob+10]=y.y,Bb[ob+11]=y.z,ob+=12;n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,Bb,c)}if(Yb)for(eb=0,fb=ic.length;eb<fb;eb++){xb=0;for(j=0,k=$b.length;j<k;j++)ib=$b[j],m=ac[ib],v=ic[eb].vertices[m.a],w=ic[eb].vertices[m.b],x=ic[eb].vertices[m.c],gb=Lb[eb],gb[xb]=v.x,gb[xb+1]=v.y,gb[xb+2]=v.z,gb[xb+3]=w.x,gb[xb+4]=w.y,gb[xb+5]=w.z,gb[xb+6]=x.x,gb[xb+7]=x.y,gb[xb+8]=x.z,e.morphNormals&&(i?(jb=jc[eb].vertexNormals[ib],D=jb.a,E=jb.b,F=jb.c):(D=jc[eb].faceNormals[ib],E=D,F=D),hb=Mb[eb],hb[xb]=D.x,hb[xb+1]=D.y,hb[xb+2]=D.z,hb[xb+3]=E.x,hb[xb+4]=E.y,hb[xb+5]=E.z,hb[xb+6]=F.x,hb[xb+7]=F.y,hb[xb+8]=F.z),xb+=9;for(j=0,k=_b.length;j<k;j++)ib=_b[j],m=ac[ib],v=ic[eb].vertices[m.a],w=ic[eb].vertices[m.b],x=ic[eb].vertices[m.c],y=ic[eb].vertices[m.d],gb=Lb[eb],gb[xb]=v.x,gb[xb+1]=v.y,gb[xb+2]=v.z,gb[xb+3]=w.x,gb[xb+4]=w.y,gb[xb+5]=w.z,gb[xb+6]=x.x,gb[xb+7]=x.y,gb[xb+8]=x.z,gb[xb+9]=y.x,gb[xb+10]=y.y,gb[xb+11]=y.z,e.morphNormals&&(i?(jb=jc[eb].vertexNormals[ib],D=jb.a,E=jb.b,F=jb.c,G=jb.d):(D=jc[eb].faceNormals[ib],E=D,F=D,G=D),hb=Mb[eb],hb[xb]=D.x,hb[xb+1]=D.y,hb[xb+2]=D.z,hb[xb+3]=E.x,hb[xb+4]=E.y,hb[xb+5]=E.z,hb[xb+6]=F.x,hb[xb+7]=F.y,hb[xb+8]=F.z,hb[xb+9]=G.x,hb[xb+10]=G.y,hb[xb+11]=G.z),xb+=12;n.bindBuffer(n.ARRAY_BUFFER,a.__webglMorphTargetsBuffers[eb]),n.bufferData(n.ARRAY_BUFFER,Lb[eb],c),e.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglMorphNormalsBuffers[eb]),n.bufferData(n.ARRAY_BUFFER,Mb[eb],c))}if(hc.length){for(j=0,k=$b.length;j<k;j++)m=ac[$b[j]],L=hc[m.a],M=hc[m.b],N=hc[m.c],Kb[wb]=L.x,Kb[wb+1]=L.y,Kb[wb+2]=L.z,Kb[wb+3]=L.w,Kb[wb+4]=M.x,Kb[wb+5]=M.y,Kb[wb+6]=M.z,Kb[wb+7]=M.w,Kb[wb+8]=N.x,Kb[wb+9]=N.y,Kb[wb+10]=N.z,Kb[wb+11]=N.w,P=gc[m.a],Q=gc[m.b],R=gc[m.c],Jb[wb]=P.x,Jb[wb+1]=P.y,Jb[wb+2]=P.z,Jb[wb+3]=P.w,Jb[wb+4]=Q.x,Jb[wb+5]=Q.y,Jb[wb+6]=Q.z,Jb[wb+7]=Q.w,Jb[wb+8]=R.x,Jb[wb+9]=R.y,Jb[wb+10]=R.z,Jb[wb+11]=R.w,T=ec[m.a],U=ec[m.b],V=ec[m.c],Hb[wb]=T.x,Hb[wb+1]=T.y,Hb[wb+2]=T.z,Hb[wb+3]=1,Hb[wb+4]=U.x,Hb[wb+5]=U.y,Hb[wb+6]=U.z,Hb[wb+7]=1,Hb[wb+8]=V.x,Hb[wb+9]=V.y,Hb[wb+10]=V.z,Hb[wb+11]=1,X=fc[m.a],Y=fc[m.b],Z=fc[m.c],Ib[wb]=X.x,Ib[wb+1]=X.y,Ib[wb+2]=X.z,Ib[wb+3]=1,Ib[wb+4]=Y.x,Ib[wb+5]=Y.y,Ib[wb+6]=Y.z,Ib[wb+7]=1,Ib[wb+8]=Z.x,Ib[wb+9]=Z.y,Ib[wb+10]=Z.z,Ib[wb+11]=1,wb+=12;for(j=0,k=_b.length;j<k;j++)m=ac[_b[j]],L=hc[m.a],M=hc[m.b],N=hc[m.c],O=hc[m.d],Kb[wb]=L.x,Kb[wb+1]=L.y,Kb[wb+2]=L.z,Kb[wb+3]=L.w,Kb[wb+4]=M.x,Kb[wb+5]=M.y,Kb[wb+6]=M.z,Kb[wb+7]=M.w,Kb[wb+8]=N.x,Kb[wb+9]=N.y,Kb[wb+10]=N.z,Kb[wb+11]=N.w,Kb[wb+12]=O.x,Kb[wb+13]=O.y,Kb[wb+14]=O.z,Kb[wb+15]=O.w,P=gc[m.a],Q=gc[m.b],R=gc[m.c],S=gc[m.d],Jb[wb]=P.x,Jb[wb+1]=P.y,Jb[wb+2]=P.z,Jb[wb+3]=P.w,Jb[wb+4]=Q.x,Jb[wb+5]=Q.y,Jb[wb+6]=Q.z,Jb[wb+7]=Q.w,Jb[wb+8]=R.x,Jb[wb+9]=R.y,Jb[wb+10]=R.z,Jb[wb+11]=R.w,Jb[wb+12]=S.x,Jb[wb+13]=S.y,Jb[wb+14]=S.z,Jb[wb+15]=S.w,T=ec[m.a],U=ec[m.b],V=ec[m.c],W=ec[m.d],Hb[wb]=T.x,Hb[wb+1]=T.y,Hb[wb+2]=T.z,Hb[wb+3]=1,Hb[wb+4]=U.x,Hb[wb+5]=U.y,Hb[wb+6]=U.z,Hb[wb+7]=1,Hb[wb+8]=V.x,Hb[wb+9]=V.y,Hb[wb+10]=V.z,Hb[wb+11]=1,Hb[wb+12]=W.x,Hb[wb+13]=W.y,Hb[wb+14]=W.z,Hb[wb+15]=1,X=fc[m.a],Y=fc[m.b],Z=fc[m.c],$=fc[m.d],Ib[wb]=X.x,Ib[wb+1]=X.y,Ib[wb+2]=X.z,Ib[wb+3]=1,Ib[wb+4]=Y.x,Ib[wb+5]=Y.y,Ib[wb+6]=Y.z,Ib[wb+7]=1,Ib[wb+8]=Z.x,Ib[wb+9]=Z.y,Ib[wb+10]=Z.z,Ib[wb+11]=1,Ib[wb+12]=$.x,Ib[wb+13]=$.y,Ib[wb+14]=$.z,Ib[wb+15]=1,wb+=16;wb>0&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglSkinVertexABuffer),n.bufferData(n.ARRAY_BUFFER,Hb,c),n.bindBuffer(n.ARRAY_BUFFER,a.__webglSkinVertexBBuffer),n.bufferData(n.ARRAY_BUFFER,Ib,c),n.bindBuffer(n.ARRAY_BUFFER,a.__webglSkinIndicesBuffer),n.bufferData(n.ARRAY_BUFFER,Jb,c),n.bindBuffer(n.ARRAY_BUFFER,a.__webglSkinWeightsBuffer),n.bufferData(n.ARRAY_BUFFER,Kb,c))}if(Xb&&g){for(j=0,k=$b.length;j<k;j++)m=ac[$b[j]],q=m.vertexColors,r=m.color,q.length===3&&g===THREE.VertexColors?(H=q[0],I=q[1],J=q[2]):(H=r,I=r,J=r),Gb[vb]=H.r,Gb[vb+1]=H.g,Gb[vb+2]=H.b,Gb[vb+3]=I.r,Gb[vb+4]=I.g,Gb[vb+5]=I.b,Gb[vb+6]=J.r,Gb[vb+7]=J.g,Gb[vb+8]=J.b,vb+=9;for(j=0,k=_b.length;j<k;j++)m=ac[_b[j]],q=m.vertexColors,r=m.color,q.length===4&&g===THREE.VertexColors?(H=q[0],I=q[1],J=q[2],K=q[3]):(H=r,I=r,J=r,K=r),Gb[vb]=H.r,Gb[vb+1]=H.g,Gb[vb+2]=H.b,Gb[vb+3]=I.r,Gb[vb+4]=I.g,Gb[vb+5]=I.b,Gb[vb+6]=J.r,Gb[vb+7]=J.g,Gb[vb+8]=J.b,Gb[vb+9]=K.r,Gb[vb+10]=K.g,Gb[vb+11]=K.b,vb+=12;vb>0&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,Gb,c))}if(Wb&&Rb.hasTangents){for(j=0,k=$b.length;j<k;j++)m=ac[$b[j]],s=m.vertexTangents,z=s[0],A=s[1],B=s[2],Fb[tb]=z.x,Fb[tb+1]=z.y,Fb[tb+2]=z.z,Fb[tb+3]=z.w,Fb[tb+4]=A.x,Fb[tb+5]=A.y,Fb[tb+6]=A.z,Fb[tb+7]=A.w,Fb[tb+8]=B.x,Fb[tb+9]=B.y,Fb[tb+10]=B.z,Fb[tb+11]=B.w,tb+=12;for(j=0,k=_b.length;j<k;j++)m=ac[_b[j]],s=m.vertexTangents,z=s[0],A=s[1],B=s[2],C=s[3],Fb[tb]=z.x,Fb[tb+1]=z.y,Fb[tb+2]=z.z,Fb[tb+3]=z.w,Fb[tb+4]=A.x,Fb[tb+5]=A.y,Fb[tb+6]=A.z,Fb[tb+7]=A.w,Fb[tb+8]=B.x,Fb[tb+9]=B.y,Fb[tb+10]=B.z,Fb[tb+11]=B.w,Fb[tb+12]=C.x,Fb[tb+13]=C.y,Fb[tb+14]=C.z,Fb[tb+15]=C.w,tb+=16;n.bindBuffer(n.ARRAY_BUFFER,a.__webglTangentBuffer),n.bufferData(n.ARRAY_BUFFER,Fb,c)}if(Vb&&f){for(j=0,k=$b.length;j<k;j++){m=ac[$b[j]],o=m.vertexNormals,p=m.normal;if(o.length===3&&i)for(_=0;_<3;_++)bb=o[_],Eb[sb]=bb.x,Eb[sb+1]=bb.y,Eb[sb+2]=bb.z,sb+=3;else for(_=0;_<3;_++)Eb[sb]=p.x,Eb[sb+1]=p.y,Eb[sb+2]=p.z,sb+=3}for(j=0,k=_b.length;j<k;j++){m=ac[_b[j]],o=m.vertexNormals,p=m.normal;if(o.length===4&&i)for(_=0;_<4;_++)bb=o[_],Eb[sb]=bb.x,Eb[sb+1]=bb.y,Eb[sb+2]=bb.z,sb+=3;else for(_=0;_<4;_++)Eb[sb]=p.x,Eb[sb+1]=p.y,Eb[sb+2]=p.z,sb+=3}n.bindBuffer(n.ARRAY_BUFFER,a.__webglNormalBuffer),n.bufferData(n.ARRAY_BUFFER,Eb,c)}if(Ub&&bc&&h){for(j=0,k=$b.length;j<k;j++){l=$b[j],m=ac[l],t=bc[l];if(t===undefined)continue;for(_=0;_<3;_++)cb=t[_],Cb[pb]=cb.u,Cb[pb+1]=cb.v,pb+=2}for(j=0,k=_b.length;j<k;j++){l=_b[j],m=ac[l],t=bc[l];if(t===undefined)continue;for(_=0;_<4;_++)cb=t[_],Cb[pb]=cb.u,Cb[pb+1]=cb.v,pb+=2}pb>0&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglUVBuffer),n.bufferData(n.ARRAY_BUFFER,Cb,c))}if(Ub&&cc&&h){for(j=0,k=$b.length;j<k;j++){l=$b[j],m=ac[l],u=cc[l];if(u===undefined)continue;for(_=0;_<3;_++)db=u[_],Db[qb]=db.u,Db[qb+1]=db.v,qb+=2}for(j=0,k=_b.length;j<k;j++){l=_b[j],m=ac[l],u=cc[l];if(u===undefined)continue;for(_=0;_<4;_++)db=u[_],Db[qb]=db.u,Db[qb+1]=db.v,qb+=2}qb>0&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglUV2Buffer),n.bufferData(n.ARRAY_BUFFER,Db,c))}if(Tb){for(j=0,k=$b.length;j<k;j++)m=ac[$b[j]],Pb[rb]=nb,Pb[rb+1]=nb+1,Pb[rb+2]=nb+2,rb+=3,Qb[ub]=nb,Qb[ub+1]=nb+1,Qb[ub+2]=nb,Qb[ub+3]=nb+2,Qb[ub+4]=nb+1,Qb[ub+5]=nb+2,ub+=6,nb+=3;for(j=0,k=_b.length;j<k;j++)m=ac[_b[j]],Pb[rb]=nb,Pb[rb+1]=nb+1,Pb[rb+2]=nb+3,Pb[rb+3]=nb+1,Pb[rb+4]=nb+2,Pb[rb+5]=nb+3,rb+=6,Qb[ub]=nb,Qb[ub+1]=nb+1,Qb[ub+2]=nb,Qb[ub+3]=nb+3,Qb[ub+4]=nb+1,Qb[ub+5]=nb+2,Qb[ub+6]=nb+2,Qb[ub+7]=nb+3,ub+=8,nb+=4;n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a.__webglFaceBuffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,Pb,c),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a.__webglLineBuffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,Qb,c)}if(Nb)for(_=0,ab=Nb.length;_<ab;_++){Ob=Nb[_];if(!Ob.__original.needsUpdate)continue;yb=0,zb=0;if(Ob.size===1){if(Ob.boundTo===undefined||Ob.boundTo==="vertices"){for(j=0,k=$b.length;j<k;j++)m=ac[$b[j]],Ob.array[yb]=Ob.value[m.a],Ob.array[yb+1]=Ob.value[m.b],Ob.array[yb+2]=Ob.value[m.c],yb+=3;for(j=0,k=_b.length;j<k;j++)m=ac[_b[j]],Ob.array[yb]=Ob.value[m.a],Ob.array[yb+1]=Ob.value[m.b],Ob.array[yb+2]=Ob.value[m.c],Ob.array[yb+3]=Ob.value[m.d],yb+=4}else if(Ob.boundTo==="faces"){for(j=0,k=$b.length;j<k;j++)Ab=Ob.value[$b[j]],Ob.array[yb]=Ab,Ob.array[yb+1]=Ab,Ob.array[yb+2]=Ab,yb+=3;for(j=0,k=_b.length;j<k;j++)Ab=Ob.value[_b[j]],Ob.array[yb]=Ab,Ob.array[yb+1]=Ab,Ob.array[yb+2]=Ab,Ob.array[yb+3]=Ab,yb+=4}}else if(Ob.size===2){if(Ob.boundTo===undefined||Ob.boundTo==="vertices"){for(j=0,k=$b.length;j<k;j++)m=ac[$b[j]],v=Ob.value[m.a],w=Ob.value[m.b],x=Ob.value[m.c],Ob.array[yb]=v.x,Ob.array[yb+1]=v.y,Ob.array[yb+2]=w.x,Ob.array[yb+3]=w.y,Ob.array[yb+4]=x.x,Ob.array[yb+5]=x.y,yb+=6;for(j=0,k=_b.length;j<k;j++)m=ac[_b[j]],v=Ob.value[m.a],w=Ob.value[m.b],x=Ob.value[m.c],y=Ob.value[m.d],Ob.array[yb]=v.x,Ob.array[yb+1]=v.y,Ob.array[yb+2]=w.x,Ob.array[yb+3]=w.y,Ob.array[yb+4]=x.x,Ob.array[yb+5]=x.y,Ob.array[yb+6]=y.x,Ob.array[yb+7]=y.y,yb+=8}else if(Ob.boundTo==="faces"){for(j=0,k=$b.length;j<k;j++)Ab=Ob.value[$b[j]],v=Ab,w=Ab,x=Ab,Ob.array[yb]=v.x,Ob.array[yb+1]=v.y,Ob.array[yb+2]=w.x,Ob.array[yb+3]=w.y,Ob.array[yb+4]=x.x,Ob.array[yb+5]=x.y,yb+=6;for(j=0,k=_b.length;j<k;j++)Ab=Ob.value[_b[j]],v=Ab,w=Ab,x=Ab,y=Ab,Ob.array[yb]=v.x,Ob.array[yb+1]=v.y,Ob.array[yb+2]=w.x,Ob.array[yb+3]=w.y,Ob.array[yb+4]=x.x,Ob.array[yb+5]=x.y,Ob.array[yb+6]=y.x,Ob.array[yb+7]=y.y,yb+=8}}else if(Ob.size===3){var kc;Ob.type==="c"?kc=["r","g","b"]:kc=["x","y","z"];if(Ob.boundTo===undefined||Ob.boundTo==="vertices"){for(j=0,k=$b.length;j<k;j++)m=ac[$b[j]],v=Ob.value[m.a],w=Ob.value[m.b],x=Ob.value[m.c],Ob.array[yb]=v[kc[0]],Ob.array[yb+1]=v[kc[1]],Ob.array[yb+2]=v[kc[2]],Ob.array[yb+3]=w[kc[0]],Ob.array[yb+4]=w[kc[1]],Ob.array[yb+5]=w[kc[2]],Ob.array[yb+6]=x[kc[0]],Ob.array[yb+7]=x[kc[1]],Ob.array[yb+8]=x[kc[2]],yb+=9;for(j=0,k=_b.length;j<k;j++)m=ac[_b[j]],v=Ob.value[m.a],w=Ob.value[m.b],x=Ob.value[m.c],y=Ob.value[m.d],Ob.array[yb]=v[kc[0]],Ob.array[yb+1]=v[kc[1]],Ob.array[yb+2]=v[kc[2]],Ob.array[yb+3]=w[kc[0]],Ob.array[yb+4]=w[kc[1]],Ob.array[yb+5]=w[kc[2]],Ob.array[yb+6]=x[kc[0]],Ob.array[yb+7]=x[kc[1]],Ob.array[yb+8]=x[kc[2]],Ob.array[yb+9]=y[kc[0]],Ob.array[yb+10]=y[kc[1]],Ob.array[yb+11]=y[kc[2]],yb+=12}else if(Ob.boundTo==="faces"){for(j=0,k=$b.length;j<k;j++)Ab=Ob.value[$b[j]],v=Ab,w=Ab,x=Ab,Ob.array[yb]=v[kc[0]],Ob.array[yb+1]=v[kc[1]],Ob.array[yb+2]=v[kc[2]],Ob.array[yb+3]=w[kc[0]],Ob.array[yb+4]=w[kc[1]],Ob.array[yb+5]=w[kc[2]],Ob.array[yb+6]=x[kc[0]],Ob.array[yb+7]=x[kc[1]],Ob.array[yb+8]=x[kc[2]],yb+=9;for(j=0,k=_b.length;j<k;j++)Ab=Ob.value[_b[j]],v=Ab,w=Ab,x=Ab,y=Ab,Ob.array[yb]=v[kc[0]],Ob.array[yb+1]=v[kc[1]],Ob.array[yb+2]=v[kc[2]],Ob.array[yb+3]=w[kc[0]],Ob.array[yb+4]=w[kc[1]],Ob.array[yb+5]=w[kc[2]],Ob.array[yb+6]=x[kc[0]],Ob.array[yb+7]=x[kc[1]],Ob.array[yb+8]=x[kc[2]],Ob.array[yb+9]=y[kc[0]],Ob.array[yb+10]=y[kc[1]],Ob.array[yb+11]=y[kc[2]],yb+=12}}else if(Ob.size===4)if(Ob.boundTo===undefined||Ob.boundTo==="vertices"){for(j=0,k=$b.length;j<k;j++)m=ac[$b[j]],v=Ob.value[m.a],w=Ob.value[m.b],x=Ob.value[m.c],Ob.array[yb]=v.x,Ob.array[yb+1]=v.y,Ob.array[yb+2]=v.z,Ob.array[yb+3]=v.w,Ob.array[yb+4]=w.x,Ob.array[yb+5]=w.y,Ob.array[yb+6]=w.z,Ob.array[yb+7]=w.w,Ob.array[yb+8]=x.x,Ob.array[yb+9]=x.y,Ob.array[yb+10]=x.z,Ob.array[yb+11]=x.w,yb+=12;for(j=0,k=_b.length;j<k;j++)m=ac[_b[j]],v=Ob.value[m.a],w=Ob.value[m.b],x=Ob.value[m.c],y=Ob.value[m.d],Ob.array[yb]=v.x,Ob.array[yb+1]=v.y,Ob.array[yb+2]=v.z,Ob.array[yb+3]=v.w,Ob.array[yb+4]=w.x,Ob.array[yb+5]=w.y,Ob.array[yb+6]=w.z,Ob.array[yb+7]=w.w,Ob.array[yb+8]=x.x,Ob.array[yb+9]=x.y,Ob.array[yb+10]=x.z,Ob.array[yb+11]=x.w,Ob.array[yb+12]=y.x,Ob.array[yb+13]=y.y,Ob.array[yb+14]=y.z,Ob.array[yb+15]=y.w,yb+=16}else if(Ob.boundTo==="faces"){for(j=0,k=$b.length;j<k;j++)Ab=Ob.value[$b[j]],v=Ab,w=Ab,x=Ab,Ob.array[yb]=v.x,Ob.array[yb+1]=v.y,Ob.array[yb+2]=v.z,Ob.array[yb+3]=v.w,Ob.array[yb+4]=w.x,Ob.array[yb+5]=w.y,Ob.array[yb+6]=w.z,Ob.array[yb+7]=w.w,Ob.array[yb+8]=x.x,Ob.array[yb+9]=x.y,Ob.array[yb+10]=x.z,Ob.array[yb+11]=x.w,yb+=12;for(j=0,k=_b.length;j<k;j++)Ab=Ob.value[_b[j]],v=Ab,w=Ab,x=Ab,y=Ab,Ob.array[yb]=v.x,Ob.array[yb+1]=v.y,Ob.array[yb+2]=v.z,Ob.array[yb+3]=v.w,Ob.array[yb+4]=w.x,Ob.array[yb+5]=w.y,Ob.array[yb+6]=w.z,Ob.array[yb+7]=w.w,Ob.array[yb+8]=x.x,Ob.array[yb+9]=x.y,Ob.array[yb+10]=x.z,Ob.array[yb+11]=x.w,Ob.array[yb+12]=y.x,Ob.array[yb+13]=y.y,Ob.array[yb+14]=y.z,Ob.array[yb+15]=y.w,yb+=16}n.bindBuffer(n.ARRAY_BUFFER,Ob.buffer),n.bufferData(n.ARRAY_BUFFER,Ob.array,c)}d&&(delete a.__inittedArrays,delete a.__colorArray,delete a.__normalArray,delete a.__tangentArray,delete a.__uvArray,delete a.__uv2Array,delete a.__faceArray,delete a.__vertexArray,delete a.__lineArray,delete a.__skinVertexAArray,delete a.__skinVertexBArray,delete a.__skinIndexArray,delete a.__skinWeightArray)}function rb(a,b,c){var d=a.program.attributes;c.morphTargetBase!==-1?(n.bindBuffer(n.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[c.morphTargetBase]),n.vertexAttribPointer(d.position,3,n.FLOAT,!1,0,0)):d.position>=0&&(n.bindBuffer(n.ARRAY_BUFFER,b.__webglVertexBuffer),n.vertexAttribPointer(d.position,3,n.FLOAT,!1,0,0));if(c.morphTargetForcedOrder.length){var e=0,f=c.morphTargetForcedOrder,g=c.morphTargetInfluences;while(e<a.numSupportedMorphTargets&&e<f.length)n.bindBuffer(n.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[f[e]]),n.vertexAttribPointer(d["morphTarget"+e],3,n.FLOAT,!1,0,0),a.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[f[e]]),n.vertexAttribPointer(d["morphNormal"+e],3,n.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[e]=g[f[e]],e++}else{var h=[],i=-1,j=0,g=c.morphTargetInfluences,k,l=g.length,e=0;c.morphTargetBase!==-1&&(h[c.morphTargetBase]=!0);while(e<a.numSupportedMorphTargets){for(k=0;k<l;k++)!h[k]&&g[k]>i&&(j=k,i=g[j]);n.bindBuffer(n.ARRAY_BUFFER,b.__webglMorphTargetsBuffers[j]),n.vertexAttribPointer(d["morphTarget"+e],3,n.FLOAT,!1,0,0),a.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,b.__webglMorphNormalsBuffers[j]),n.vertexAttribPointer(d["morphNormal"+e],3,n.FLOAT,!1,0,0)),c.__webglMorphTargetInfluences[e]=i,h[j]=1,i=-1,e++}}a.program.uniforms.morphTargetInfluences!==null&&n.uniform1fv(a.program.uniforms.morphTargetInfluences,c.__webglMorphTargetInfluences)}function sb(a,b){return b.z-a.z}function tb(a,b,c){if(!a.length)return;for(var d=0,e=a.length;d<e;d++)p=null,t=null,x=-1,B=-1,C=-1,v=-1,w=-1,s=-1,r=-1,S=!0,a[d].render(b,c,L,M),p=null,t=null,x=-1,B=-1,C=-1,v=-1,w=-1,s=-1,r=-1,S=!0}function ub(a,b,c,d,e,f,g,h){var i,j,k,l,n,o,p;b?(n=a.length-1,o=-1,p=-1):(n=0,o=a.length,p=1);for(var q=n;q!==o;q+=p){i=a[q];if(i.render){j=i.object,k=i.buffer;if(h)l=h;else{l=i[c];if(!l)continue;g&&m.setBlending(l.blending,l.blendEquation,l.blendSrc,l.blendDst),m.setDepthTest(l.depthTest),m.setDepthWrite(l.depthWrite),Xb(l.polygonOffset,l.polygonOffsetFactor,l.polygonOffsetUnits)}m.setObjectFaces(j),k instanceof THREE.BufferGeometry?m.renderBufferDirect(d,e,f,l,k,j):m.renderBuffer(d,e,f,l,k,j)}}}function vb(a,b,c,d,e,f,g){var h,i,j;for(var k=0,l=a.length;k<l;k++){h=a[k],i=h.object;if(i.visible){if(g)j=g;else{j=h[b];if(!j)continue;f&&m.setBlending(j.blending,j.blendEquation,j.blendSrc,j.blendDst),m.setDepthTest(j.depthTest),m.setDepthWrite(j.depthWrite),Xb(j.polygonOffset,j.polygonOffsetFactor,j.polygonOffsetUnits)}m.renderImmediateObject(c,d,e,j,i)}}}function wb(a){var b=a.object,c=b.material;c.transparent?(a.transparent=c,a.opaque=null):(a.opaque=c,a.transparent=null)}function xb(a){var b=a.object,c=a.buffer,d,e,f;f=b.material,f instanceof THREE.MeshFaceMaterial?(e=c.materialIndex,e>=0&&(d=b.geometry.materials[e],d.transparent?(a.transparent=d,a.opaque=null):(a.opaque=d,a.transparent=null))):(d=f,d&&(d.transparent?(a.transparent=d,a.opaque=null):(a.opaque=d,a.transparent=null)))}function yb(a){var b,c,d,e,f,g,h,i={},j=a.morphTargets.length,k=a.morphNormals.length;a.geometryGroups={};for(b=0,c=a.faces.length;b<c;b++)d=a.faces[b],e=d.materialIndex,g=e!==undefined?e:-1,i[g]===undefined&&(i[g]={hash:g,counter:0}),h=i[g].hash+"_"+i[g].counter,a.geometryGroups[h]===undefined&&(a.geometryGroups[h]={faces3:[],faces4:[],materialIndex:e,vertices:0,numMorphTargets:j,numMorphNormals:k}),f=d instanceof THREE.Face3?3:4,a.geometryGroups[h].vertices+f>65535&&(i[g].counter+=1,h=i[g].hash+"_"+i[g].counter,a.geometryGroups[h]===undefined&&(a.geometryGroups[h]={faces3:[],faces4:[],materialIndex:e,vertices:0,numMorphTargets:j,numMorphNormals:k})),d instanceof THREE.Face3?a.geometryGroups[h].faces3.push(b):a.geometryGroups[h].faces4.push(b),a.geometryGroups[h].vertices+=f;a.geometryGroupsList=[];for(var l in a.geometryGroups)a.geometryGroups[l].id=u++,a.geometryGroupsList.push(a.geometryGroups[l])}function zb(a,b){var c,d,e;if(!a.__webglInit){a.__webglInit=!0,a._modelViewMatrix=new THREE.Matrix4,a._normalMatrix=new THREE.Matrix3;if(a instanceof THREE.Mesh){d=a.geometry;if(d instanceof THREE.Geometry){d.geometryGroups===undefined&&yb(d);for(c in d.geometryGroups)e=d.geometryGroups[c],e.__webglVertexBuffer||($(e),hb(e,a),d.verticesNeedUpdate=!0,d.morphTargetsNeedUpdate=!0,d.elementsNeedUpdate=!0,d.uvsNeedUpdate=!0,d.normalsNeedUpdate=!0,d.tangetsNeedUpdate=!0,d.colorsNeedUpdate=!0)}}else a instanceof THREE.Ribbon?(d=a.geometry,d.__webglVertexBuffer||(Z(d),gb(d),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0)):a instanceof THREE.Line?(d=a.geometry,d.__webglVertexBuffer||(Y(d),fb(d,a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0)):a instanceof THREE.ParticleSystem&&(d=a.geometry,d.__webglVertexBuffer||(X(d),eb(d,a),d.verticesNeedUpdate=!0,d.colorsNeedUpdate=!0))}if(!a.__webglActive){if(a instanceof THREE.Mesh){d=a.geometry;if(d instanceof THREE.BufferGeometry)Ab(b.__webglObjects,d,a);else for(c in d.geometryGroups)e=d.geometryGroups[c],Ab(b.__webglObjects,e,a)}else a instanceof THREE.Ribbon||a instanceof THREE.Line||a instanceof THREE.ParticleSystem?(d=a.geometry,Ab(b.__webglObjects,d,a)):a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback?Bb(b.__webglObjectsImmediate,a):a instanceof THREE.Sprite?b.__webglSprites.push(a):a instanceof THREE.LensFlare&&b.__webglFlares.push(a);a.__webglActive=!0}}function Ab(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}function Bb(a,b){a.push({object:b,opaque:null,transparent:null})}function Cb(a){var b=a.geometry,c,d,e;if(a instanceof THREE.Mesh)if(b instanceof THREE.BufferGeometry)b.verticesNeedUpdate=!1,b.elementsNeedUpdate=!1,b.uvsNeedUpdate=!1,b.normalsNeedUpdate=!1,b.colorsNeedUpdate=!1;else{for(var f=0,g=b.geometryGroupsList.length;f<g;f++)c=b.geometryGroupsList[f],e=ib(a,c),d=e.attributes&&Db(e),(b.verticesNeedUpdate||b.morphTargetsNeedUpdate||b.elementsNeedUpdate||b.uvsNeedUpdate||b.normalsNeedUpdate||b.colorsNeedUpdate||b.tangetsNeedUpdate||d)&&qb(c,a,n.DYNAMIC_DRAW,!b.dynamic,e);b.verticesNeedUpdate=!1,b.morphTargetsNeedUpdate=!1,b.elementsNeedUpdate=!1,b.uvsNeedUpdate=!1,b.normalsNeedUpdate=!1,b.colorsNeedUpdate=!1,b.tangetsNeedUpdate=!1,e.attributes&&Eb(e)}else a instanceof THREE.Ribbon?((b.verticesNeedUpdate||b.colorsNeedUpdate)&&pb(b,n.DYNAMIC_DRAW),b.verticesNeedUpdate=!1,b.colorsNeedUpdate=!1):a instanceof THREE.Line?(e=ib(a,c),d=e.attributes&&Db(e),(b.verticesNeedUpdate||b.colorsNeedUpdate||d)&&ob(b,n.DYNAMIC_DRAW),b.verticesNeedUpdate=!1,b.colorsNeedUpdate=!1,e.attributes&&Eb(e)):a instanceof THREE.ParticleSystem&&(e=ib(a,c),d=e.attributes&&Db(e),(b.verticesNeedUpdate||b.colorsNeedUpdate||a.sortParticles||d)&&nb(b,n.DYNAMIC_DRAW,a),b.verticesNeedUpdate=!1,b.colorsNeedUpdate=!1,e.attributes&&Eb(e))}function Db(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function Eb(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function Fb(a,b){a instanceof THREE.Mesh||a instanceof THREE.ParticleSystem||a instanceof THREE.Ribbon||a instanceof THREE.Line?Gb(b.__webglObjects,a):a instanceof THREE.Sprite?Hb(b.__webglSprites,a):a instanceof THREE.LensFlare?Hb(b.__webglFlares,a):(a instanceof THREE.ImmediateRenderObject||a.immediateRenderCallback)&&Gb(b.__webglObjectsImmediate,a),a.__webglActive=!1}function Gb(a,b){for(var c=a.length-1;c>=0;c--)a[c].object===b&&a.splice(c,1)}function Hb(a,b){for(var c=a.length-1;c>=0;c--)a[c]===b&&a.splice(c,1)}function Ib(a,b){a.uniforms=THREE.UniformsUtils.clone(b.uniforms),a.vertexShader=b.vertexShader,a.fragmentShader=b.fragmentShader}function Jb(a,b,c,d,e){if(!d.program||d.needsUpdate)m.initMaterial(d,b,c,e),d.needsUpdate=!1;if(d.morphTargets&&!e.__webglMorphTargetInfluences){e.__webglMorphTargetInfluences=new Float32Array(m.maxMorphTargets);for(var f=0,g=m.maxMorphTargets;f<g;f++)e.__webglMorphTargetInfluences[f]=0}var h=!1,i=d.program,j=i.uniforms,k=d.uniforms;i!==p&&(n.useProgram(i),p=i,h=!0),d.id!==r&&(r=d.id,h=!0);if(h||a!==t)n.uniformMatrix4fv(j.projectionMatrix,!1,a._projectionMatrixArray),a!==t&&(t=a);if(h){c&&d.fog&&Nb(k,c);if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights)S&&(Vb(i,b),S=!1),Qb(k,T);(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial)&&Kb(k,d),d instanceof THREE.LineBasicMaterial?Lb(k,d):d instanceof THREE.ParticleBasicMaterial?Mb(k,d):d instanceof THREE.MeshPhongMaterial?Ob(k,d):d instanceof THREE.MeshLambertMaterial?Pb(k,d):d instanceof THREE.MeshDepthMaterial?(k.mNear.value=a.near,k.mFar.value=a.far,k.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(k.opacity.value=d.opacity),e.receiveShadow&&!d._shadowPass&&Rb(k,b),Tb(i,d.uniformsList);if(d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)if(j.cameraPosition!==null){var l=a.matrixWorld.getPosition();n.uniform3f(j.cameraPosition,l.x,l.y,l.z)}(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.ShaderMaterial||d.skinning)&&j.viewMatrix!==null&&n.uniformMatrix4fv(j.viewMatrix,!1,a._viewMatrixArray),d.skinning&&n.uniformMatrix4fv(j.boneGlobalMatrices,!1,e.boneMatrices)}return Sb(j,e),j.objectMatrix!==null&&n.uniformMatrix4fv(j.objectMatrix,!1,e.matrixWorld.elements),i}function Kb(a,b){a.opacity.value=b.opacity,m.gammaInput?a.diffuse.value.copyGammaToLinear(b.color):a.diffuse.value=b.color,a.map.texture=b.map,b.map&&a.offsetRepeat.value.set(b.map.offset.x,b.map.offset.y,b.map.repeat.x,b.map.repeat.y),a.lightMap.texture=b.lightMap,a.envMap.texture=b.envMap,a.flipEnvMap.value=b.envMap instanceof THREE.WebGLRenderTargetCube?1:-1,m.gammaInput?a.reflectivity.value=b.reflectivity:a.reflectivity.value=b.reflectivity,a.refractionRatio.value=b.refractionRatio,a.combine.value=b.combine,a.useRefract.value=b.envMap&&b.envMap.mapping instanceof THREE.CubeRefractionMapping}function Lb(a,b){a.diffuse.value=b.color,a.opacity.value=b.opacity}function Mb(a,b){a.psColor.value=b.color,a.opacity.value=b.opacity,a.size.value=b.size,a.scale.value=c.height/2,a.map.texture=b.map}function Nb(a,b){a.fogColor.value=b.color,b instanceof THREE.Fog?(a.fogNear.value=b.near,a.fogFar.value=b.far):b instanceof THREE.FogExp2&&(a.fogDensity.value=b.density)}function Ob(a,b){a.shininess.value=b.shininess,m.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive),a.specular.value.copyGammaToLinear(b.specular)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive,a.specular.value=b.specular),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function Pb(a,b){m.gammaInput?(a.ambient.value.copyGammaToLinear(b.ambient),a.emissive.value.copyGammaToLinear(b.emissive)):(a.ambient.value=b.ambient,a.emissive.value=b.emissive),b.wrapAround&&a.wrapRGB.value.copy(b.wrapRGB)}function Qb(a,b){a.ambientLightColor.value=b.ambient,a.directionalLightColor.value=b.directional.colors,a.directionalLightDirection.value=b.directional.positions,a.pointLightColor.value=b.point.colors,a.pointLightPosition.value=b.point.positions,a.pointLightDistance.value=b.point.distances,a.spotLightColor.value=b.spot.colors,a.spotLightPosition.value=b.spot.positions,a.spotLightDistance.value=b.spot.distances,a.spotLightDirection.value=b.spot.directions,a.spotLightAngle.value=b.spot.angles,a.spotLightExponent.value=b.spot.exponents}function Rb(a,b){if(a.shadowMatrix){var c=0;for(var d=0,e=b.length;d<e;d++){var f=b[d];if(!f.castShadow)continue;if(f instanceof THREE.SpotLight||f instanceof THREE.DirectionalLight&&!f.shadowCascade)a.shadowMap.texture[c]=f.shadowMap,a.shadowMapSize.value[c]=f.shadowMapSize,a.shadowMatrix.value[c]=f.shadowMatrix,a.shadowDarkness.value[c]=f.shadowDarkness,a.shadowBias.value[c]=f.shadowBias,c++}}}function Sb(a,b){n.uniformMatrix4fv(a.modelViewMatrix,!1,b._modelViewMatrix.elements),a.normalMatrix&&n.uniformMatrix3fv(a.normalMatrix,!1,b._normalMatrix.elements)}function Tb(a,b){var c,d,e,f,g,h,i,j,k,l;for(j=0,k=b.length;j<k;j++){f=a.uniforms[b[j][1]];if(!f)continue;c=b[j][0],e=c.type,d=c.value;switch(e){case"i":n.uniform1i(f,d);break;case"f":n.uniform1f(f,d);break;case"v2":n.uniform2f(f,d.x,d.y);break;case"v3":n.uniform3f(f,d.x,d.y,d.z);break;case"v4":n.uniform4f(f,d.x,d.y,d.z,d.w);break;case"c":n.uniform3f(f,d.r,d.g,d.b);break;case"fv1":n.uniform1fv(f,d);break;case"fv":n.uniform3fv(f,d);break;case"v2v":c._array||(c._array=new Float32Array(2*d.length));for(h=0,i=d.length;h<i;h++)l=h*2,c._array[l]=d[h].x,c._array[l+1]=d[h].y;n.uniform2fv(f,c._array);break;case"v3v":c._array||(c._array=new Float32Array(3*d.length));for(h=0,i=d.length;h<i;h++)l=h*3,c._array[l]=d[h].x,c._array[l+1]=d[h].y,c._array[l+2]=d[h].z;n.uniform3fv(f,c._array);break;case"v4v":c._array||(c._array=new Float32Array(4*d.length));for(h=0,i=d.length;h<i;h++)l=h*4,c._array[l]=d[h].x,c._array[l+1]=d[h].y,c._array[l+2]=d[h].z,c._array[l+3]=d[h].w;n.uniform4fv(f,c._array);break;case"m4":c._array||(c._array=new Float32Array(16)),d.flattenToArray(c._array),n.uniformMatrix4fv(f,!1,c._array);break;case"m4v":c._array||(c._array=new Float32Array(16*d.length));for(h=0,i=d.length;h<i;h++)d[h].flattenToArrayOffset(c._array,h*16);n.uniformMatrix4fv(f,!1,c._array);break;case"t":n.uniform1i(f,d),g=c.texture;if(!g)continue;g.image instanceof Array&&g.image.length===6?dc(g,d):g instanceof THREE.WebGLRenderTargetCube?ec(g,d):m.setTexture(g,d);break;case"tv":if(!c._array){c._array=[];for(h=0,i=c.texture.length;h<i;h++)c._array[h]=d+h}n.uniform1iv(f,c._array);for(h=0,i=c.texture.length;h<i;h++){g=c.texture[h];if(!g)continue;m.setTexture(g,c._array[h])}}}}function Ub(a,b){a._modelViewMatrix.multiply(b.matrixWorldInverse,a.matrixWorld),a._normalMatrix.getInverse(a._modelViewMatrix),a._normalMatrix.transpose()}function Vb(a,b){var c,d,e,f=0,g=0,h=0,i,j,k,l,n=T,o=n.directional.colors,p=n.directional.positions,q=n.point.colors,r=n.point.positions,s=n.point.distances,t=n.spot.colors,u=n.spot.positions,v=n.spot.distances,w=n.spot.directions,x=n.spot.angles,y=n.spot.exponents,z=0,A=0,B=0,C=0,D=0,E=0;for(c=0,d=b.length;c<d;c++){e=b[c];if(e.onlyShadow)continue;i=e.color,k=e.intensity,l=e.distance,e instanceof THREE.AmbientLight?m.gammaInput?(f+=i.r*i.r,g+=i.g*i.g,h+=i.b*i.b):(f+=i.r,g+=i.g,h+=i.b):e instanceof THREE.DirectionalLight?(C=z*3,m.gammaInput?(o[C]=i.r*i.r*k*k,o[C+1]=i.g*i.g*k*k,o[C+2]=i.b*i.b*k*k):(o[C]=i.r*k,o[C+1]=i.g*k,o[C+2]=i.b*k),R.copy(e.matrixWorld.getPosition()),R.subSelf(e.target.matrixWorld.getPosition()),R.normalize(),p[C]=R.x,p[C+1]=R.y,p[C+2]=R.z,z+=1):e instanceof THREE.PointLight?(D=A*3,m.gammaInput?(q[D]=i.r*i.r*k*k,q[D+1]=i.g*i.g*k*k,q[D+2]=i.b*i.b*k*k):(q[D]=i.r*k,q[D+1]=i.g*k,q[D+2]=i.b*k),j=e.matrixWorld.getPosition(),r[D]=j.x,r[D+1]=j.y,r[D+2]=j.z,s[A]=l,A+=1):e instanceof THREE.SpotLight&&(E=B*3,m.gammaInput?(t[E]=i.r*i.r*k*k,t[E+1]=i.g*i.g*k*k,t[E+2]=i.b*i.b*k*k):(t[E]=i.r*k,t[E+1]=i.g*k,t[E+2]=i.b*k),j=e.matrixWorld.getPosition(),u[E]=j.x,u[E+1]=j.y,u[E+2]=j.z,v[B]=l,R.copy(j),R.subSelf(e.target.matrixWorld.getPosition()),R.normalize(),w[E]=R.x,w[E+1]=R.y,w[E+2]=R.z,x[B]=Math.cos(e.angle),y[B]=e.exponent,B+=1)}for(c=z*3,d=o.length;c<d;c++)o[c]=0;for(c=A*3,d=q.length;c<d;c++)q[c]=0;for(c=B*3,d=t.length;c<d;c++)t[c]=0;n.directional.length=z,n.point.length=A,n.spot.length=B,n.ambient[0]=f,n.ambient[1]=g,n.ambient[2]=h}function Wb(a){a!==G&&(n.lineWidth(a),G=a)}function Xb(a,b,c){D!==a&&(a?n.enable(n.POLYGON_OFFSET_FILL):n.disable(n.POLYGON_OFFSET_FILL),D=a),a&&(E!==b||F!==c)&&(n.polygonOffset(b,c),E=b,F=c)}function Yb(a,b,c,e,f,g){var h,i,j,k,l=[];a?l.push(a):(l.push(b),l.push(c));for(h in g)l.push(h),l.push(g[h]);k=l.join();for(h=0,i=o.length;h<i;h++)if(o[h].code===k)return o[h].program;j=n.createProgram();var p=["precision "+d+" float;",U>0?"#define VERTEX_TEXTURES":"",m.gammaInput?"#define GAMMA_INPUT":"",m.gammaOutput?"#define GAMMA_OUTPUT":"",m.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+g.maxDirLights,"#define MAX_POINT_LIGHTS "+g.maxPointLights,"#define MAX_SPOT_LIGHTS "+g.maxSpotLights,"#define MAX_SHADOWS "+g.maxShadows,"#define MAX_BONES "+g.maxBones,g.map?"#define USE_MAP":"",g.envMap?"#define USE_ENVMAP":"",g.lightMap?"#define USE_LIGHTMAP":"",g.vertexColors?"#define USE_COLOR":"",g.skinning?"#define USE_SKINNING":"",g.morphTargets?"#define USE_MORPHTARGETS":"",g.morphNormals?"#define USE_MORPHNORMALS":"",g.perPixel?"#define PHONG_PER_PIXEL":"",g.wrapAround?"#define WRAP_AROUND":"",g.doubleSided?"#define DOUBLE_SIDED":"",g.shadowMapEnabled?"#define USE_SHADOWMAP":"",g.shadowMapSoft?"#define SHADOWMAP_SOFT":"",g.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",g.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",g.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 objectMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","attribute vec2 uv2;","#ifdef USE_COLOR","attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","attribute vec3 morphTarget0;","attribute vec3 morphTarget1;","attribute vec3 morphTarget2;","attribute vec3 morphTarget3;","#ifdef USE_MORPHNORMALS","attribute vec3 morphNormal0;","attribute vec3 morphNormal1;","attribute vec3 morphNormal2;","attribute vec3 morphNormal3;","#else","attribute vec3 morphTarget4;","attribute vec3 morphTarget5;","attribute vec3 morphTarget6;","attribute vec3 morphTarget7;","#endif","#endif","#ifdef USE_SKINNING","attribute vec4 skinVertexA;","attribute vec4 skinVertexB;","attribute vec4 skinIndex;","attribute vec4 skinWeight;","#endif",""].join("\n"),q=["precision "+d+" float;","#define MAX_DIR_LIGHTS "+g.maxDirLights,"#define MAX_POINT_LIGHTS "+g.maxPointLights,"#define MAX_SPOT_LIGHTS "+g.maxSpotLights,"#define MAX_SHADOWS "+g.maxShadows,g.alphaTest?"#define ALPHATEST "+g.alphaTest:"",m.gammaInput?"#define GAMMA_INPUT":"",m.gammaOutput?"#define GAMMA_OUTPUT":"",m.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",g.useFog&&g.fog?"#define USE_FOG":"",g.useFog&&g.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",g.map?"#define USE_MAP":"",g.envMap?"#define USE_ENVMAP":"",g.lightMap?"#define USE_LIGHTMAP":"",g.vertexColors?"#define USE_COLOR":"",g.metal?"#define METAL":"",g.perPixel?"#define PHONG_PER_PIXEL":"",g.wrapAround?"#define WRAP_AROUND":"",g.doubleSided?"#define DOUBLE_SIDED":"",g.shadowMapEnabled?"#define USE_SHADOWMAP":"",g.shadowMapSoft?"#define SHADOWMAP_SOFT":"",g.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",g.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",""].join("\n");n.attachShader(j,_b("fragment",q+b)),n.attachShader(j,_b("vertex",p+c)),n.linkProgram(j),n.getProgramParameter(j,n.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+n.getProgramParameter(j,n.VALIDATE_STATUS)+", gl error ["+n.getError()+"]"),j.uniforms={},j.attributes={};var r,s,t,u;r=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition","boneGlobalMatrices","morphTargetInfluences"];for(s in e)r.push(s);Zb(j,r),r=["position","normal","uv","uv2","tangent","color","skinVertexA","skinVertexB","skinIndex","skinWeight"];for(u=0;u<g.maxMorphTargets;u++)r.push("morphTarget"+u);for(u=0;u<g.maxMorphNormals;u++)r.push("morphNormal"+u);for(t in f)r.push(t);return $b(j,r),j.id=o.length,o.push({program:j,code:k}),m.info.memory.programs=o.length,j}function Zb(a,b){var c,d,e;for(c=0,d=b.length;c<d;c++)e=b[c],a.uniforms[e]=n.getUniformLocation(a,e)}function $b(a,b){var c,d,e;for(c=0,d=b.length;c<d;c++)e=b[c],a.attributes[e]=n.getAttribLocation(a,e)}function _b(a,b){var c;return a==="fragment"?c=n.createShader(n.FRAGMENT_SHADER):a==="vertex"&&(c=n.createShader(n.VERTEX_SHADER)),n.shaderSource(c,b),n.compileShader(c),n.getShaderParameter(c,n.COMPILE_STATUS)?c:(console.error(n.getShaderInfoLog(c)),console.error(b),null)}function ac(a){return(a&a-1)===0}function bc(a,b,c){c?(n.texParameteri(a,n.TEXTURE_WRAP_S,jc(b.wrapS)),n.texParameteri(a,n.TEXTURE_WRAP_T,jc(b.wrapT)),n.texParameteri(a,n.TEXTURE_MAG_FILTER,jc(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,jc(b.minFilter))):(n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_MAG_FILTER,ic(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,ic(b.minFilter)))}function cc(a,b){if(a.width<=b&&a.height<=b)return a;var c=Math.max(a.width,a.height),d=Math.floor(a.width*b/c),e=Math.floor(a.height*b/c),f=document.createElement("canvas");f.width=d,f.height=e;var g=f.getContext("2d");return g.drawImage(a,0,0,a.width,a.height,0,0,d,e),f}function dc(a,b){if(a.image.length===6)if(a.needsUpdate){a.image.__webglTextureCube||(a.image.__webglTextureCube=n.createTexture()),n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_CUBE_MAP,a.image.__webglTextureCube);var c=[];for(var d=0;d<6;d++)m.autoScaleCubemaps?c[d]=cc(a.image[d],W):c[d]=a.image[d];var e=c[0],f=ac(e.width)&&ac(e.height),g=jc(a.format),h=jc(a.type);bc(n.TEXTURE_CUBE_MAP,a,f);for(var d=0;d<6;d++)n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+d,0,g,g,h,c[d]);a.generateMipmaps&&f&&n.generateMipmap(n.TEXTURE_CUBE_MAP),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_CUBE_MAP,a.image.__webglTextureCube)}function ec(a,b){n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_CUBE_MAP,a.__webglTexture)}function fc(a,b,c){n.bindFramebuffer(n.FRAMEBUFFER,a),n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,c,b.__webglTexture,0)}function gc(a,b){n.bindRenderbuffer(n.RENDERBUFFER,a),b.depthBuffer&&!b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,a)):n.renderbufferStorage(n.RENDERBUFFER,n.RGBA4,b.width,b.height)}function hc(a){a instanceof THREE.WebGLRenderTargetCube?(n.bindTexture(n.TEXTURE_CUBE_MAP,a.__webglTexture),n.generateMipmap(n.TEXTURE_CUBE_MAP),n.bindTexture(n.TEXTURE_CUBE_MAP,null)):(n.bindTexture(n.TEXTURE_2D,a.__webglTexture),n.generateMipmap(n.TEXTURE_2D),n.bindTexture(n.TEXTURE_2D,null))}function ic(a){switch(a){case THREE.NearestFilter:case THREE.NearestMipMapNearestFilter:case THREE.NearestMipMapLinearFilter:return n.NEAREST;case THREE.LinearFilter:case THREE.LinearMipMapNearestFilter:case THREE.LinearMipMapLinearFilter:default:return n.LINEAR}}function jc(a){switch(a){case THREE.RepeatWrapping:return n.REPEAT;case THREE.ClampToEdgeWrapping:return n.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return n.MIRRORED_REPEAT;case THREE.NearestFilter:return n.NEAREST;case THREE.NearestMipMapNearestFilter:return n.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return n.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return n.LINEAR;case THREE.LinearMipMapNearestFilter:return n.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return n.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return n.BYTE;case THREE.UnsignedByteType:return n.UNSIGNED_BYTE;case THREE.ShortType:return n.SHORT;case THREE.UnsignedShortType:return n.UNSIGNED_SHORT;case THREE.IntType:return n.INT;case THREE.UnsignedIntType:return n.UNSIGNED_INT;case THREE.FloatType:return n.FLOAT;case THREE.AlphaFormat:return n.ALPHA;case THREE.RGBFormat:return n.RGB;case THREE.RGBAFormat:return n.RGBA;case THREE.LuminanceFormat:return n.LUMINANCE;case THREE.LuminanceAlphaFormat:return n.LUMINANCE_ALPHA;case THREE.AddEquation:return n.FUNC_ADD;case THREE.SubtractEquation:return n.FUNC_SUBTRACT;case THREE.ReverseSubtractEquation:return n.FUNC_REVERSE_SUBTRACT;case THREE.ZeroFactor:return n.ZERO;case THREE.OneFactor:return n.ONE;case THREE.SrcColorFactor:return n.SRC_COLOR;case THREE.OneMinusSrcColorFactor:return n.ONE_MINUS_SRC_COLOR;case THREE.SrcAlphaFactor:return n.SRC_ALPHA;case THREE.OneMinusSrcAlphaFactor:return n.ONE_MINUS_SRC_ALPHA;case THREE.DstAlphaFactor:return n.DST_ALPHA;case THREE.OneMinusDstAlphaFactor:return n.ONE_MINUS_DST_ALPHA;case THREE.DstColorFactor:return n.DST_COLOR;case THREE.OneMinusDstColorFactor:return n.ONE_MINUS_DST_COLOR;case THREE.SrcAlphaSaturateFactor:return n.SRC_ALPHA_SATURATE}return 0}function kc(a){var b=50;return a!==undefined&&a instanceof THREE.SkinnedMesh&&(b=a.bones.length),b}function lc(a){var b,c,d,e,f,g,h,i,j;e=f=g=h=i=j=0;for(b=0,c=a.length;b<c;b++){d=a[b];if(d.onlyShadow)continue;d instanceof THREE.DirectionalLight&&e++,d instanceof THREE.PointLight&&f++,d instanceof THREE.SpotLight&&g++}return f+g+e<=l?(h=e,i=f,j=g):(h=Math.ceil(l*e/(f+e)),i=l-h,j=i),{directional:h,point:i,spot:j}}function mc(a){var b,c,d,e=0;for(b=0,c=a.length;b<c;b++){d=a[b];if(!d.castShadow)continue;d instanceof THREE.SpotLight&&e++,d instanceof THREE.DirectionalLight&&!d.shadowCascade&&e++}return e}function nc(){var a;try{if(!(a=c.getContext("experimental-webgl",{alpha:e,premultipliedAlpha:f,antialias:g,stencil:h,preserveDrawingBuffer:i})))throw"Error creating WebGL context."}catch(b){console.error(b)}return a.getExtension("OES_texture_float")||console.log("THREE.WebGLRenderer: Float textures not supported."),a}function oc(){n.clearColor(0,0,0,1),n.clearDepth(1),n.clearStencil(0),n.enable(n.DEPTH_TEST),n.depthFunc(n.LEQUAL),n.frontFace(n.CCW),n.cullFace(n.BACK),n.enable(n.CULL_FACE),n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA),n.clearColor(j.r,j.g,j.b,k)}var b=this;console.log("THREE.WebGLRenderer",THREE.REVISION),a=a||{};var c=a.canvas!==undefined?a.canvas:document.createElement("canvas"),d=a.precision!==undefined?a.precision:"highp",e=a.alpha!==undefined?a.alpha:!0,f=a.premultipliedAlpha!==undefined?a.premultipliedAlpha:!0,g=a.antialias!==undefined?a.antialias:!1,h=a.stencil!==undefined?a.stencil:!0,i=a.preserveDrawingBuffer!==undefined?a.preserveDrawingBuffer:!1,j=a.clearColor!==undefined?new THREE.Color(a.clearColor):new THREE.Color(0),k=a.clearAlpha!==undefined?a.clearAlpha:0,l=a.maxLights!==undefined?a.maxLights:4;b.domElement=c,b.context=null,b.autoClear=!0,b.autoClearColor=!0,b.autoClearDepth=!0,b.autoClearStencil=!0,b.sortObjects=!0,b.autoUpdateObjects=!0,b.autoUpdateScene=!0,b.gammaInput=!1,b.gammaOutput=!1,b.physicallyBasedShading=!1,b.shadowMapEnabled=!1,b.shadowMapAutoUpdate=!0,b.shadowMapSoft=!0,b.shadowMapCullFrontFaces=!0,b.shadowMapDebug=!1,b.shadowMapCascade=!1,b.maxMorphTargets=8,b.maxMorphNormals=4,b.autoScaleCubemaps=!0,b.renderPluginsPre=[],b.renderPluginsPost=[],b.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var m=b,n,o=[],p=null,q=null,r=-1,s=null,t=null,u=0,v=-1,w=-1,x=-1,y=-1,z=-1,A=-1,B=-1,C=-1,D=null,E=null,F=null,G=null,H=0,I=0,J=0,K=0,L=0,M=0,N=new THREE.Frustum,O=new THREE.Matrix4,P=new THREE.Matrix4,Q=new THREE.Vector4,R=new THREE.Vector3,S=!0,T={ambient:[0,0,0],directional:{length:0,colors:new Array,positions:new Array},point:{length:0,colors:new Array,positions:new Array,distances:new Array},spot:{length:0,colors:new Array,positions:new Array,distances:new Array,directions:new Array,angles:new Array,exponents:new Array}};n=nc(),oc(),b.context=n;var U=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS),V=n.getParameter(n.MAX_TEXTURE_SIZE),W=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE);b.getContext=function(){return n},b.supportsVertexTextures=function(){return U>0},b.setSize=function(a,b){c.width=a,c.height=b,this.setViewport(0,0,c.width,c.height)},b.setViewport=function(a,b,c,d){H=a,I=b,J=c,K=d,n.viewport(H,I,J,K)},b.setScissor=function(a,b,c,d){n.scissor(a,b,c,d)},b.enableScissorTest=function(a){a?n.enable(n.SCISSOR_TEST):n.disable(n.SCISSOR_TEST)},b.setClearColorHex=function(a,b){j.setHex(a),k=b,n.clearColor(j.r,j.g,j.b,k)},b.setClearColor=function(a,b){j.copy(a),k=b,n.clearColor(j.r,j.g,j.b,k)},b.getClearColor=function(){return j},b.getClearAlpha=function(){return k},b.clear=function(a,b,c){var d=0;if(a===undefined||a)d|=n.COLOR_BUFFER_BIT;if(b===undefined||b)d|=n.DEPTH_BUFFER_BIT;if(c===undefined||c)d|=n.STENCIL_BUFFER_BIT;n.clear(d)},b.clearTarget=function(a,b,c,d){this.setRenderTarget(a),this.clear(b,c,d)},b.addPostPlugin=function(a){a.init(this),this.renderPluginsPost.push(a)},b.addPrePlugin=function(a){a.init(this),this.renderPluginsPre.push(a)},b.deallocateObject=function(a){if(!a.__webglInit)return;a.__webglInit=!1,delete a._modelViewMatrix,delete a._normalMatrix,delete a._normalMatrixArray,delete a._modelViewMatrixArray,delete a._objectMatrixArray;if(a instanceof THREE.Mesh)for(var b in a.geometry.geometryGroups)cb(a.geometry.geometryGroups[b]);else a instanceof THREE.Ribbon?bb(a.geometry):a instanceof THREE.Line?ab(a.geometry):a instanceof THREE.ParticleSystem&&_(a.geometry)},b.deallocateTexture=function(a){if(!a.__webglInit)return;a.__webglInit=!1,n.deleteTexture(a.__webglTexture),m.info.memory.textures--},b.deallocateRenderTarget=function(a){if(!a||!a.__webglTexture)return;n.deleteTexture(a.__webglTexture);if(a instanceof THREE.WebGLRenderTargetCube)for(var b=0;b<6;b++)n.deleteFramebuffer(a.__webglFramebuffer[b]),n.deleteRenderbuffer(a.__webglRenderbuffer[b]);else n.deleteFramebuffer(a.__webglFramebuffer),n.deleteRenderbuffer(a.__webglRenderbuffer)},b.updateShadowMap=function(a,b){p=null,x=-1,B=-1,C=-1,s=-1,r=-1,S=!0,v=-1,w=-1,this.shadowMapPlugin.update(a,b)};b.renderBufferImmediate=function(a,b,c){a.__webglVertexBuffer||(a.__webglVertexBuffer=n.createBuffer()),a.__webglNormalBuffer||(a.__webglNormalBuffer=n.createBuffer()),a.hasPos&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,a.positionArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.position),n.vertexAttribPointer(b.attributes.position,3,n.FLOAT,!1,0,0));if(a.hasNormal){n.bindBuffer(n.ARRAY_BUFFER,a.__webglNormalBuffer);if(c===THREE.FlatShading){var d,e,f,g,h,i,j,k,l,m,o,p,q,r,s=a.count*3;for(r=0;r<s;r+=9)q=a.normalArray,g=q[r],j=q[r+1],m=q[r+2],h=q[r+3],k=q[r+4],o=q[r+5],i=q[r+6],l=q[r+7],p=q[r+8],d=(g+h+i)/3,e=(j+k+l)/3,f=(m+o+p)/3,q[r]=d,q[r+1]=e,q[r+2]=f,q[r+3]=d,q[r+4]=e,q[r+5]=f,q[r+6]=d,q[r+7]=e,q[r+8]=f}n.bufferData(n.ARRAY_BUFFER,a.normalArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.normal),n.vertexAttribPointer(b.attributes.normal,3,n.FLOAT,!1,0,0)}n.drawArrays(n.TRIANGLES,0,a.count),a.count=0},b.renderBufferDirect=function(a,b,c,d,e,f){if(d.visible===!1)return;var g,h;g=Jb(a,b,c,d,f),h=g.attributes;var i=!1,j=d.wireframe?1:0,k=e.id*16777215+g.id*2+j;k!==s&&(s=k,i=!0);if(f instanceof THREE.Mesh){var l=e.offsets;for(var o=0,p=l.length;o<p;++o)i&&(n.bindBuffer(n.ARRAY_BUFFER,e.vertexPositionBuffer),n.vertexAttribPointer(h.position,e.vertexPositionBuffer.itemSize,n.FLOAT,!1,0,l[o].index*4*3),h.normal>=0&&e.vertexNormalBuffer&&(n.bindBuffer(n.ARRAY_BUFFER,e.vertexNormalBuffer),n.vertexAttribPointer(h.normal,e.vertexNormalBuffer.itemSize,n.FLOAT,!1,0,l[o].index*4*3)),h.uv>=0&&e.vertexUvBuffer&&(e.vertexUvBuffer?(n.bindBuffer(n.ARRAY_BUFFER,e.vertexUvBuffer),n.vertexAttribPointer(h.uv,e.vertexUvBuffer.itemSize,n.FLOAT,!1,0,l[o].index*4*2),n.enableVertexAttribArray(h.uv)):n.disableVertexAttribArray(h.uv)),h.color>=0&&e.vertexColorBuffer&&(n.bindBuffer(n.ARRAY_BUFFER,e.vertexColorBuffer),n.vertexAttribPointer(h.color,e.vertexColorBuffer.itemSize,n.FLOAT,!1,0,l[o].index*4*4)),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.vertexIndexBuffer)),n.drawElements(n.TRIANGLES,l[o].count,n.UNSIGNED_SHORT,l[o].start*2),m.info.render.calls++,m.info.render.vertices+=l[o].count,m.info.render.faces+=l[o].count/3}},b.renderBuffer=function(a,b,c,d,e,f){if(d.visible===!1)return;var g,h,i,j,k,l;g=Jb(a,b,c,d,f),h=g.attributes;var o=!1,p=d.wireframe?1:0,q=e.id*16777215+g.id*2+p;q!==s&&(s=q,o=!0),!d.morphTargets&&h.position>=0?o&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglVertexBuffer),n.vertexAttribPointer(h.position,3,n.FLOAT,!1,0,0)):f.morphTargetBase&&rb(d,e,f);if(o){if(e.__webglCustomAttributesList)for(k=0,l=e.__webglCustomAttributesList.length;k<l;k++)j=e.__webglCustomAttributesList[k],h[j.buffer.belongsToAttribute]>=0&&(n.bindBuffer(n.ARRAY_BUFFER,j.buffer),n.vertexAttribPointer(h[j.buffer.belongsToAttribute],j.size,n.FLOAT,!1,0,0));h.color>=0&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglColorBuffer),n.vertexAttribPointer(h.color,3,n.FLOAT,!1,0,0)),h.normal>=0&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglNormalBuffer),n.vertexAttribPointer(h.normal,3,n.FLOAT,!1,0,0)),h.tangent>=0&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglTangentBuffer),n.vertexAttribPointer(h.tangent,4,n.FLOAT,!1,0,0)),h.uv>=0&&(e.__webglUVBuffer?(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUVBuffer),n.vertexAttribPointer(h.uv,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(h.uv)):n.disableVertexAttribArray(h.uv)),h.uv2>=0&&(e.__webglUV2Buffer?(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUV2Buffer),n.vertexAttribPointer(h.uv2,2,n.FLOAT,!1,0,0),n.enableVertexAttribArray(h.uv2)):n.disableVertexAttribArray(h.uv2)),d.skinning&&h.skinVertexA>=0&&h.skinVertexB>=0&&h.skinIndex>=0&&h.skinWeight>=0&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinVertexABuffer),n.vertexAttribPointer(h.skinVertexA,4,n.FLOAT,!1,0,0),n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinVertexBBuffer),n.vertexAttribPointer(h.skinVertexB,4,n.FLOAT,!1,0,0),n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),n.vertexAttribPointer(h.skinIndex,4,n.FLOAT,!1,0,0),n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),n.vertexAttribPointer(h.skinWeight,4,n.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(Wb(d.wireframeLinewidth),o&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),n.drawElements(n.LINES,e.__webglLineCount,n.UNSIGNED_SHORT,0)):(o&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),n.drawElements(n.TRIANGLES,e.__webglFaceCount,n.UNSIGNED_SHORT,0)),m.info.render.calls++,m.info.render.vertices+=e.__webglFaceCount,m.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(i=f.type===THREE.LineStrip?n.LINE_STRIP:n.LINES,Wb(d.linewidth),n.drawArrays(i,0,e.__webglLineCount),m.info.render.calls++):f instanceof THREE.ParticleSystem?(n.drawArrays(n.POINTS,0,e.__webglParticleCount),m.info.render.calls++,m.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(n.drawArrays(n.TRIANGLE_STRIP,0,e.__webglVertexCount),m.info.render.calls++)};b.render=function(a,b,c,d){var e=this,f,g,h,i,j,k=a.__lights,l=a.fog;r=-1,S=!0,b.parent===undefined&&(console.warn("DEPRECATED: Camera hasn't been added to a Scene. Adding it..."),a.add(b)),e.autoUpdateScene&&a.updateMatrixWorld(),b._viewMatrixArray||(b._viewMatrixArray=new Float32Array(16)),b._projectionMatrixArray||(b._projectionMatrixArray=new Float32Array(16)),b.matrixWorldInverse.getInverse(b.matrixWorld),b.matrixWorldInverse.flattenToArray(b._viewMatrixArray),b.projectionMatrix.flattenToArray(b._projectionMatrixArray),O.multiply(b.projectionMatrix,b.matrixWorldInverse),N.setFromMatrix(O),e.autoUpdateObjects&&e.initWebGLObjects(a),tb(e.renderPluginsPre,a,b),m.info.render.calls=0,m.info.render.vertices=0,m.info.render.faces=0,m.info.render.points=0,e.setRenderTarget(c),(e.autoClear||d)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),j=a.__webglObjects;for(f=0,g=j.length;f<g;f++)h=j[f],i=h.object,h.render=!1,i.visible&&(!(i instanceof THREE.Mesh||i instanceof THREE.ParticleSystem)||!i.frustumCulled||N.contains(i))&&(Ub(i,b),xb(h),h.render=!0,e.sortObjects&&(i.renderDepth?h.z=i.renderDepth:(Q.copy(i.matrixWorld.getPosition()),O.multiplyVector3(Q),h.z=Q.z)));e.sortObjects&&j.sort(sb),j=a.__webglObjectsImmediate;for(f=0,g=j.length;f<g;f++)h=j[f],i=h.object,i.visible&&(Ub(i,b),wb(h));if(a.overrideMaterial){var n=a.overrideMaterial;e.setBlending(n.blending,n.blendEquation,n.blendSrc,n.blendDst),e.setDepthTest(n.depthTest),e.setDepthWrite(n.depthWrite),Xb(n.polygonOffset,n.polygonOffsetFactor,n.polygonOffsetUnits),ub(a.__webglObjects,!1,"",b,k,l,!0,n),vb(a.__webglObjectsImmediate,"",b,k,l,!1,n)}else e.setBlending(THREE.NormalBlending),ub(a.__webglObjects,!0,"opaque",b,k,l,!1),vb(a.__webglObjectsImmediate,"opaque",b,k,l,!1),ub(a.__webglObjects,!1,"transparent",b,k,l,!0),vb(a.__webglObjectsImmediate,"transparent",b,k,l,!0);tb(e.renderPluginsPost,a,b),c&&c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter&&hc(c),e.setDepthTest(!0),e.setDepthWrite(!0)};b.renderImmediateObject=function(a,b,c,d,e){var f=Jb(a,b,c,d,e);s=-1,m.setObjectFaces(e),e.immediateRenderCallback?e.immediateRenderCallback(f,n,N):e.render(function(a){m.renderBufferImmediate(a,f,d.shading)})};b.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);while(a.__objectsAdded.length)zb(a.__objectsAdded[0],a),a.__objectsAdded.splice(0,1);while(a.__objectsRemoved.length)Fb(a.__objectsRemoved[0],a),a.__objectsRemoved.splice(0,1);for(var b=0,c=a.__webglObjects.length;b<c;b++)Cb(a.__webglObjects[b].object)};b.initMaterial=function(a,b,c,d){var e=this,f,g,h,i,j,k,l,m;a instanceof THREE.MeshDepthMaterial?m="depth":a instanceof THREE.MeshNormalMaterial?m="normal":a instanceof THREE.MeshBasicMaterial?m="basic":a instanceof THREE.MeshLambertMaterial?m="lambert":a instanceof THREE.MeshPhongMaterial?m="phong":a instanceof THREE.LineBasicMaterial?m="basic":a instanceof THREE.ParticleBasicMaterial&&(m="particle_basic"),m&&Ib(a,THREE.ShaderLib[m]),j=lc(b),l=mc(b),k=kc(d),i={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,sizeAttenuation:a.sizeAttenuation,skinning:a.skinning,maxBones:k,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,maxDirLights:j.directional,maxPointLights:j.point,maxSpotLights:j.spot,maxShadows:l,shadowMapEnabled:e.shadowMapEnabled&&d.receiveShadow,shadowMapSoft:e.shadowMapSoft,shadowMapDebug:e.shadowMapDebug,shadowMapCascade:e.shadowMapCascade,alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:d&&d.doubleSided},a.program=Yb(m,a.fragmentShader,a.vertexShader,a.uniforms,a.attributes,i);var o=a.program.attributes;o.position>=0&&n.enableVertexAttribArray(o.position),o.color>=0&&n.enableVertexAttribArray(o.color),o.normal>=0&&n.enableVertexAttribArray(o.normal),o.tangent>=0&&n.enableVertexAttribArray(o.tangent),a.skinning&&o.skinVertexA>=0&&o.skinVertexB>=0&&o.skinIndex>=0&&o.skinWeight>=0&&(n.enableVertexAttribArray(o.skinVertexA),n.enableVertexAttribArray(o.skinVertexB),n.enableVertexAttribArray(o.skinIndex),n.enableVertexAttribArray(o.skinWeight));if(a.attributes)for(g in a.attributes)o[g]!==undefined&&o[g]>=0&&n.enableVertexAttribArray(o[g]);if(a.morphTargets){a.numSupportedMorphTargets=0;var p,q="morphTarget";for(h=0;h<e.maxMorphTargets;h++)p=q+h,o[p]>=0&&(n.enableVertexAttribArray(o[p]),a.numSupportedMorphTargets++)}if(a.morphNormals){a.numSupportedMorphNormals=0;var p,q="morphNormal";for(h=0;h<e.maxMorphNormals;h++)p=q+h,o[p]>=0&&(n.enableVertexAttribArray(o[p]),a.numSupportedMorphNormals++)}a.uniformsList=[];for(f in a.uniforms)a.uniformsList.push([a.uniforms[f],f])};b.setFaceCulling=function(a,b){a?(!b||b==="ccw"?n.frontFace(n.CCW):n.frontFace(n.CW),a==="back"?n.cullFace(n.BACK):a==="front"?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK),n.enable(n.CULL_FACE)):n.disable(n.CULL_FACE)},b.setObjectFaces=function(a){v!==a.doubleSided&&(a.doubleSided?n.disable(n.CULL_FACE):n.enable(n.CULL_FACE),v=a.doubleSided),w!==a.flipSided&&(a.flipSided?n.frontFace(n.CW):n.frontFace(n.CCW),w=a.flipSided)},b.setDepthTest=function(a){B!==a&&(a?n.enable(n.DEPTH_TEST):n.disable(n.DEPTH_TEST),B=a)},b.setDepthWrite=function(a){C!==a&&(n.depthMask(a),C=a)};b.setBlending=function(a,b,c,d){if(a!==x){switch(a){case THREE.NoBlending:n.disable(n.BLEND);break;case THREE.AdditiveBlending:n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.SRC_ALPHA,n.ONE);break;case THREE.SubtractiveBlending:n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.ONE_MINUS_SRC_COLOR);break;case THREE.MultiplyBlending:n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.SRC_COLOR);break;case THREE.CustomBlending:n.enable(n.BLEND);break;default:n.enable(n.BLEND),n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA)}x=a}if(a===THREE.CustomBlending){b!==y&&(n.blendEquation(jc(b)),y=b);if(c!==z||d!==A)n.blendFunc(jc(c),jc(d)),z=c,A=d}else y=null,z=null,A=null};b.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.__webglTexture=n.createTexture(),m.info.memory.textures++),n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_2D,a.__webglTexture),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);var c=a.image,d=ac(c.width)&&ac(c.height),e=jc(a.format),f=jc(a.type);bc(n.TEXTURE_2D,a,d),a instanceof THREE.DataTexture?n.texImage2D(n.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data):n.texImage2D(n.TEXTURE_2D,0,e,e,f,a.image),a.generateMipmaps&&d&&n.generateMipmap(n.TEXTURE_2D),a.needsUpdate=!1,a.onUpdate&&a.onUpdate()}else n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_2D,a.__webglTexture)};b.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){a.depthBuffer===undefined&&(a.depthBuffer=!0),a.stencilBuffer===undefined&&(a.stencilBuffer=!0),a.__webglTexture=n.createTexture();var c=ac(a.width)&&ac(a.height),d=jc(a.format),e=jc(a.type);if(b){a.__webglFramebuffer=[],a.__webglRenderbuffer=[],n.bindTexture(n.TEXTURE_CUBE_MAP,a.__webglTexture),bc(n.TEXTURE_CUBE_MAP,a,c);for(var f=0;f<6;f++)a.__webglFramebuffer[f]=n.createFramebuffer(),a.__webglRenderbuffer[f]=n.createRenderbuffer(),n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null),fc(a.__webglFramebuffer[f],a,n.TEXTURE_CUBE_MAP_POSITIVE_X+f),gc(a.__webglRenderbuffer[f],a);c&&n.generateMipmap(n.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=n.createFramebuffer(),a.__webglRenderbuffer=n.createRenderbuffer(),n.bindTexture(n.TEXTURE_2D,a.__webglTexture),bc(n.TEXTURE_2D,a,c),n.texImage2D(n.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),fc(a.__webglFramebuffer,a,n.TEXTURE_2D),gc(a.__webglRenderbuffer,a),c&&n.generateMipmap(n.TEXTURE_2D);b?n.bindTexture(n.TEXTURE_CUBE_MAP,null):n.bindTexture(n.TEXTURE_2D,null),n.bindRenderbuffer(n.RENDERBUFFER,null),n.bindFramebuffer(n.FRAMEBUFFER,null)}var g,h,i,j,k;a?(b?g=a.__webglFramebuffer[a.activeCubeFace]:g=a.__webglFramebuffer,h=a.width,i=a.height,j=0,k=0):(g=null,h=J,i=K,j=H,k=I),g!==q&&(n.bindFramebuffer(n.FRAMEBUFFER,g),n.viewport(j,k,h,i),q=g),L=h,M=i};b.shadowMapPlugin=new THREE.ShadowMapPlugin,b.addPrePlugin(b.shadowMapPlugin),b.addPostPlugin(new THREE.SpritePlugin),b.addPostPlugin(new THREE.LensFlarePlugin)},THREE.WebGLRenderTarget=function(a,b,c){var d=this;d.width=a,d.height=b,c=c||{},d.wrapS=c.wrapS!==undefined?c.wrapS:THREE.ClampToEdgeWrapping,d.wrapT=c.wrapT!==undefined?c.wrapT:THREE.ClampToEdgeWrapping,d.magFilter=c.magFilter!==undefined?c.magFilter:THREE.LinearFilter,d.minFilter=c.minFilter!==undefined?c.minFilter:THREE.LinearMipMapLinearFilter,d.offset=new THREE.Vector2(0,0),d.repeat=new THREE.Vector2(1,1),d.format=c.format!==undefined?c.format:THREE.RGBAFormat,d.type=c.type!==undefined?c.type:THREE.UnsignedByteType,d.depthBuffer=c.depthBuffer!==undefined?c.depthBuffer:!0,d.stencilBuffer=c.stencilBuffer!==undefined?c.stencilBuffer:!0,d.generateMipmaps=!0},THREE.WebGLRenderTarget.prototype.clone=function(){var a=this,b=new THREE.WebGLRenderTarget(a.width,a.height);return b.wrapS=a.wrapS,b.wrapT=a.wrapT,b.magFilter=a.magFilter,b.minFilter=a.minFilter,b.offset.copy(a.offset),b.repeat.copy(a.repeat),b.format=a.format,b.type=a.type,b.depthBuffer=a.depthBuffer,b.stencilBuffer=a.stencilBuffer,b},THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c),this.activeCubeFace=0},THREE.WebGLRenderTargetCube.prototype=new THREE.WebGLRenderTarget,THREE.WebGLRenderTargetCube.prototype.constructor=THREE.WebGLRenderTargetCube,THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3,this.positionScreen=new THREE.Vector4,this.visible=!0},THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld),this.positionScreen.copy(a.positionScreen)},THREE.RenderableFace3=function(){var a=this;a.v1=new THREE.RenderableVertex,a.v2=new THREE.RenderableVertex,a.v3=new THREE.RenderableVertex,a.centroidWorld=new THREE.Vector3,a.centroidScreen=new THREE.Vector3,a.normalWorld=new THREE.Vector3,a.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],a.material=null,a.faceMaterial=null,a.uvs=[[]],a.z=null},THREE.RenderableFace4=function(){var a=this;a.v1=new THREE.RenderableVertex,a.v2=new THREE.RenderableVertex,a.v3=new THREE.RenderableVertex,a.v4=new THREE.RenderableVertex,a.centroidWorld=new THREE.Vector3,a.centroidScreen=new THREE.Vector3,a.normalWorld=new THREE.Vector3,a.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3],a.material=null,a.faceMaterial=null,a.uvs=[[]],a.z=null},THREE.RenderableObject=function(){this.object=null,this.z=null},THREE.RenderableParticle=function(){var a=this;a.x=null,a.y=null,a.z=null,a.rotation=null,a.scale=new THREE.Vector2,a.material=null},THREE.RenderableLine=function(){var a=this;a.z=null,a.v1=new THREE.RenderableVertex,a.v2=new THREE.RenderableVertex,a.material=null},THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;THREE.ColorUtils.rgbToHsv(a,e),e.h=THREE.Math.clamp(e.h+b,0,1),e.s=THREE.Math.clamp(e.s+c,0,1),e.v=THREE.Math.clamp(e.v+d,0,1),a.setHSV(e.h,e.s,e.v)},rgbToHsv:function(a,b){var c=a.r,d=a.g,e=a.b,f=Math.max(Math.max(c,d),e),g=Math.min(Math.min(c,d),e),h,i,j=f;if(g===f)h=0,i=0;else{var k=f-g;i=k/f,c===f?h=(d-e)/k:d===f?h=2+(e-c)/k:h=4+(c-d)/k,h/=6,h<0&&(h+=1),h>1&&(h-=1)}return b===undefined&&(b={h:0,s:0,v:0}),b.h=h,b.s=i,b.v=j,b}},THREE.ColorUtils.__hsv={h:0,s:0,v:0},THREE.GeometryUtils={merge:function(a,b){var c,d,e=a.vertices.length,f=a.faceVertexUvs[0].length,g=b instanceof THREE.Mesh?b.geometry:b,h=a.vertices,i=g.vertices,j=a.faces,k=g.faces,l=a.faceVertexUvs[0],m=g.faceVertexUvs[0],n={};for(var o=0;o<a.materials.length;o++){var p=a.materials[o].id;n[p]=o}b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix4,d.extractRotation(c,b.scale));for(var o=0,q=i.length;o<q;o++){var r=i[o],s=r.clone();c&&c.multiplyVector3(s),h.push(s)}for(o=0,q=k.length;o<q;o++){var t=k[o],u,v,w,x=t.vertexNormals,y=t.vertexColors;t instanceof THREE.Face3?u=new THREE.Face3(t.a+e,t.b+e,t.c+e):t instanceof THREE.Face4&&(u=new THREE.Face4(t.a+e,t.b+e,t.c+e,t.d+e)),u.normal.copy(t.normal),d&&d.multiplyVector3(u.normal);for(var z=0,A=x.length;z<A;z++)v=x[z].clone(),d&&d.multiplyVector3(v),u.vertexNormals.push(v);u.color.copy(t.color);for(var z=0,A=y.length;z<A;z++)w=y[z],u.vertexColors.push(w.clone());if(t.materialIndex!==undefined){var B=g.materials[t.materialIndex],C=B.id,D=n[C];D===undefined&&(D=a.materials.length,n[C]=D,a.materials.push(B)),u.materialIndex=D}u.centroid.copy(t.centroid),c&&c.multiplyVector3(u.centroid),j.push(u)}for(o=0,q=m.length;o<q;o++){var E=m[o],F=[];for(var z=0,A=E.length;z<A;z++)F.push(new THREE.UV(E[z].u,E[z].v));l.push(F)}},clone:function(a){var b=new THREE.Geometry,c,d,e=a.vertices,f=a.faces,g=a.faceVertexUvs[0];a.materials&&(b.materials=a.materials.slice());for(c=0,d=e.length;c<d;c++){var h=e[c];b.vertices.push(h.clone())}for(c=0,d=f.length;c<d;c++){var i=f[c];b.faces.push(i.clone())}for(c=0,d=g.length;c<d;c++){var j=g[c],k=[];for(var l=0,m=j.length;l<m;l++)k.push(new THREE.UV(j[l].u,j[l].v));b.faceVertexUvs[0].push(k)}return b},randomPointInTriangle:function(a,b,c){var d,e,f,g=new THREE.Vector3,h=THREE.GeometryUtils.__v1;return d=THREE.GeometryUtils.random(),e=THREE.GeometryUtils.random(),d+e>1&&(d=1-d,e=1-e),f=1-d-e,g.copy(a),g.multiplyScalar(d),h.copy(b),h.multiplyScalar(e),g.addSelf(h),h.copy(c),h.multiplyScalar(f),g.addSelf(h),g},randomPointInFace:function(a,b,c){var d,e,f,g;if(a instanceof THREE.Face3)return d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,f);if(a instanceof THREE.Face4){d=b.vertices[a.a],e=b.vertices[a.b],f=b.vertices[a.c],g=b.vertices[a.d];var h,i;c?a._area1&&a._area2?(h=a._area1,i=a._area2):(h=THREE.GeometryUtils.triangleArea(d,e,g),i=THREE.GeometryUtils.triangleArea(e,f,g),a._area1=h,a._area2=i):(h=THREE.GeometryUtils.triangleArea(d,e,g),i=THREE.GeometryUtils.triangleArea(e,f,g));var j=THREE.GeometryUtils.random()*(h+i);return j<h?THREE.GeometryUtils.randomPointInTriangle(d,e,g):THREE.GeometryUtils.randomPointInTriangle(e,f,g)}},randomPointsInGeometry:function(a,b){function n(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return i[e]>a?b(c,e-1):i[e]<a?b(e+1,d):e}var c=b(0,i.length-1);return c}var c,d,e=a.faces,f=a.vertices,g=e.length,h=0,i=[],j,k,l,m;for(d=0;d<g;d++)c=e[d],c instanceof THREE.Face3?(j=f[c.a],k=f[c.b],l=f[c.c],c._area=THREE.GeometryUtils.triangleArea(j,k,l)):c instanceof THREE.Face4&&(j=f[c.a],k=f[c.b],l=f[c.c],m=f[c.d],c._area1=THREE.GeometryUtils.triangleArea(j,k,m),c._area2=THREE.GeometryUtils.triangleArea(k,l,m),c._area=c._area1+c._area2),h+=c._area,i[d]=h;var o,p,q=[],r={};for(d=0;d<b;d++)o=THREE.GeometryUtils.random()*h,p=n(o),q[d]=THREE.GeometryUtils.randomPointInFace(e[p],a,!0),r[p]?r[p]+=1:r[p]=1;return q},triangleArea:function(a,b,c){var d,e,f,g,h=THREE.GeometryUtils.__v1;return h.sub(a,b),e=h.length(),h.sub(a,c),f=h.length(),h.sub(b,c),g=h.length(),d=.5*(e+f+g),Math.sqrt(d*(d-e)*(d-f)*(d-g))},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;return c.add(b.min,b.max),c.multiplyScalar(-0.5),a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z)),a.computeBoundingBox(),c},normalizeUVs:function(a){var b=a.faceVertexUvs[0];for(var c=0,d=b.length;c<d;c++){var e=b[c];for(var f=0,g=e.length;f<g;f++)e[f].u!==1&&(e[f].u=e[f].u-Math.floor(e[f].u)),e[f].v!==1&&(e[f].v=e[f].v-Math.floor(e[f].v))}},triangulateQuads:function(a){var b,c,d,e,f=[],g=[],h=[];for(b=0,c=a.faceUvs.length;b<c;b++)g[b]=[];for(b=0,c=a.faceVertexUvs.length;b<c;b++)h[b]=[];for(b=0,c=a.faces.length;b<c;b++){var i=a.faces[b];if(i instanceof THREE.Face4){var j=i.a,k=i.b,l=i.c,m=i.d,n=new THREE.Face3,o=new THREE.Face3;n.color.copy(i.color),o.color.copy(i.color),n.materialIndex=i.materialIndex,o.materialIndex=i.materialIndex,n.a=j,n.b=k,n.c=m,o.a=k,o.b=l,o.c=m,i.vertexColors.length===4&&(n.vertexColors[0]=i.vertexColors[0].clone(),n.vertexColors[1]=i.vertexColors[1].clone(),n.vertexColors[2]=i.vertexColors[3].clone(),o.vertexColors[0]=i.vertexColors[1].clone(),o.vertexColors[1]=i.vertexColors[2].clone(),o.vertexColors[2]=i.vertexColors[3].clone()),f.push(n,o);for(d=0,e=a.faceVertexUvs.length;d<e;d++)if(a.faceVertexUvs[d].length){var p=a.faceVertexUvs[d][b],q=p[0],r=p[1],s=p[2],t=p[3],u=[q.clone(),r.clone(),t.clone()],v=[r.clone(),s.clone(),t.clone()];h[d].push(u,v)}for(d=0,e=a.faceUvs.length;d<e;d++)if(a.faceUvs[d].length){var w=a.faceUvs[d][b];g[d].push(w,w)}}else{f.push(i);for(d=0,e=a.faceUvs.length;d<e;d++)g[d].push(a.faceUvs[d]);for(d=0,e=a.faceVertexUvs.length;d<e;d++)h[d].push(a.faceVertexUvs[d])}}a.faces=f,a.faceUvs=g,a.faceVertexUvs=h,a.computeCentroids(),a.computeFaceNormals(),a.computeVertexNormals(),a.hasTangents&&a.computeTangents()},explode:function(a){var b=[];for(var c=0,d=a.faces.length;c<d;c++){var e=b.length,f=a.faces[c];if(f instanceof THREE.Face4){var g=f.a,h=f.b,i=f.c,j=f.d,k=a.vertices[g],l=a.vertices[h],m=a.vertices[i],n=a.vertices[j];b.push(k.clone()),b.push(l.clone()),b.push(m.clone()),b.push(n.clone()),f.a=e,f.b=e+1,f.c=e+2,f.d=e+3}else{var g=f.a,h=f.b,i=f.c,k=a.vertices[g],l=a.vertices[h],m=a.vertices[i];b.push(k.clone()),b.push(l.clone()),b.push(m.clone()),f.a=e,f.b=e+1,f.c=e+2}}a.vertices=b,delete a.__tmpVertices},tessellate:function(a,b){var c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z,A,B,C,D,E,F,G,H,I,J=[],K=[];for(c=0,d=a.faceVertexUvs.length;c<d;c++)K[c]=[];for(c=0,d=a.faces.length;c<d;c++){e=a.faces[c];if(e instanceof THREE.Face3){f=e.a,g=e.b,h=e.c,j=a.vertices[f],k=a.vertices[g],l=a.vertices[h],n=j.distanceTo(k),o=k.distanceTo(l),p=j.distanceTo(l);if(n>b||o>b||p>b){s=a.vertices.length,E=e.clone(),F=e.clone(),n>=o&&n>=p?(v=j.clone(),v.lerpSelf(k,.5),E.a=f,E.b=s,E.c=h,F.a=s,F.b=g,F.c=h,e.vertexNormals.length===3&&(y=e.vertexNormals[0].clone(),y.lerpSelf(e.vertexNormals[1],.5),E.vertexNormals[1].copy(y),F.vertexNormals[0].copy(y)),e.vertexColors.length===3&&(B=e.vertexColors[0].clone(),B.lerpSelf(e.vertexColors[1],.5),E.vertexColors[1].copy(B),F.vertexColors[0].copy(B)),I=0):o>=n&&o>=p?(v=k.clone(),v.lerpSelf(l,.5),E.a=f,E.b=g,E.c=s,F.a=s,F.b=h,F.c=f,e.vertexNormals.length===3&&(y=e.vertexNormals[1].clone(),y.lerpSelf(e.vertexNormals[2],.5),E.vertexNormals[2].copy(y),F.vertexNormals[0].copy(y),F.vertexNormals[1].copy(e.vertexNormals[2]),F.vertexNormals[2].copy(e.vertexNormals[0])),e.vertexColors.length===3&&(B=e.vertexColors[1].clone(),B.lerpSelf(e.vertexColors[2],.5),E.vertexColors[2].copy(B),F.vertexColors[0].copy(B),F.vertexColors[1].copy(e.vertexColors[2]),F.vertexColors[2].copy(e.vertexColors[0])),I=1):(v=j.clone(),v.lerpSelf(l,.5),E.a=f,E.b=g,E.c=s,F.a=s,F.b=g,F.c=h,e.vertexNormals.length===3&&(y=e.vertexNormals[0].clone(),y.lerpSelf(e.vertexNormals[2],.5),E.vertexNormals[2].copy(y),F.vertexNormals[0].copy(y)),e.vertexColors.length===3&&(B=e.vertexColors[0].clone(),B.lerpSelf(e.vertexColors[2],.5),E.vertexColors[2].copy(B),F.vertexColors[0].copy(B)),I=2),J.push(E,F),a.vertices.push(v);var L,M,N,O,P,Q,R,S,T;for(L=0,M=a.faceVertexUvs.length;L<M;L++)a.faceVertexUvs[L].length&&(N=a.faceVertexUvs[L][c],O=N[0],P=N[1],Q=N[2],I===0?(R=O.clone(),R.lerpSelf(P,.5),S=[O.clone(),R.clone(),Q.clone()],T=[R.clone(),P.clone(),Q.clone()]):I===1?(R=P.clone(),R.lerpSelf(Q,.5),S=[O.clone(),P.clone(),R.clone()],T=[R.clone(),Q.clone(),O.clone()]):(R=O.clone(),R.lerpSelf(Q,.5),S=[O.clone(),P.clone(),R.clone()],T=[R.clone(),P.clone(),Q.clone()]),K[L].push(S,T))}else{J.push(e);for(L=0,M=a.faceVertexUvs.length;L<M;L++)K[L].push(a.faceVertexUvs[L][c])}}else{f=e.a,g=e.b,h=e.c,i=e.d,j=a.vertices[f],k=a.vertices[g],l=a.vertices[h],m=a.vertices[i],n=j.distanceTo(k),o=k.distanceTo(l),q=l.distanceTo(m),r=j.distanceTo(m);if(n>b||o>b||q>b||r>b){t=a.vertices.length,u=a.vertices.length+1,G=e.clone(),H=e.clone(),n>=o&&n>=q&&n>=r||q>=o&&q>=n&&q>=r?(w=j.clone(),w.lerpSelf(k,.5),x=l.clone(),x.lerpSelf(m,.5),G.a=f,G.b=t,G.c=u,G.d=i,H.a=t,H.b=g,H.c=h,H.d=u,e.vertexNormals.length===4&&(z=e.vertexNormals[0].clone(),z.lerpSelf(e.vertexNormals[1],.5),A=e.vertexNormals[2].clone(),A.lerpSelf(e.vertexNormals[3],.5),G.vertexNormals[1].copy(z),G.vertexNormals[2].copy(A),H.vertexNormals[0].copy(z),H.vertexNormals[3].copy(A)),e.vertexColors.length===4&&(C=e.vertexColors[0].clone(),C.lerpSelf(e.vertexColors[1],.5),D=e.vertexColors[2].clone(),D.lerpSelf(e.vertexColors[3],.5),G.vertexColors[1].copy(C),G.vertexColors[2].copy(D),H.vertexColors[0].copy(C),H.vertexColors[3].copy(D)),I=0):(w=k.clone(),w.lerpSelf(l,.5),x=m.clone(),x.lerpSelf(j,.5),G.a=f,G.b=g,G.c=t,G.d=u,H.a=u,H.b=t,H.c=h,H.d=i,e.vertexNormals.length===4&&(z=e.vertexNormals[1].clone(),z.lerpSelf(e.vertexNormals[2],.5),A=e.vertexNormals[3].clone(),A.lerpSelf(e.vertexNormals[0],.5),G.vertexNormals[2].copy(z),G.vertexNormals[3].copy(A),H.vertexNormals[0].copy(A),H.vertexNormals[1].copy(z)),e.vertexColors.length===4&&(C=e.vertexColors[1].clone(),C.lerpSelf(e.vertexColors[2],.5),D=e.vertexColors[3].clone(),D.lerpSelf(e.vertexColors[0],.5),G.vertexColors[2].copy(C),G.vertexColors[3].copy(D),H.vertexColors[0].copy(D),H.vertexColors[1].copy(C)),I=1),J.push(G,H),a.vertices.push(w,x);var L,M,N,O,P,Q,U,V,W,X,Y;for(L=0,M=a.faceVertexUvs.length;L<M;L++)a.faceVertexUvs[L].length&&(N=a.faceVertexUvs[L][c],O=N[0],P=N[1],Q=N[2],U=N[3],I===0?(V=O.clone(),V.lerpSelf(P,.5),W=Q.clone(),W.lerpSelf(U,.5),X=[O.clone(),V.clone(),W.clone(),U.clone()],Y=[V.clone(),P.clone(),Q.clone(),W.clone()]):(V=P.clone(),V.lerpSelf(Q,.5),W=U.clone(),W.lerpSelf(O,.5),X=[O.clone(),P.clone(),V.clone(),W.clone()],Y=[W.clone(),V.clone(),Q.clone(),U.clone()]),K[L].push(X,Y))}else{J.push(e);for(L=0,M=a.faceVertexUvs.length;L<M;L++)K[L].push(a.faceVertexUvs[L][c])}}}a.faces=J,a.faceVertexUvs=K}},THREE.GeometryUtils.random=THREE.Math.random16,THREE.GeometryUtils.__v1=new THREE.Vector3,THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c){var d=new Image,e=new THREE.Texture(d,b);return d.onload=function(){e.needsUpdate=!0,c&&c(this)},d.crossOrigin=this.crossOrigin,d.src=a,e},loadTextureCube:function(a,b,c){var d,e,f=[],g=new THREE.Texture(f,b);f.loadCount=0;for(d=0,e=a.length;d<e;++d)f[d]=new Image,f[d].onload=function(){f.loadCount+=1,f.loadCount===6&&(g.needsUpdate=!0),c&&c(this)},f[d].crossOrigin=this.crossOrigin,f[d].src=a[d];return g},getNormalMap:function(a,b){var c=function(a,b){return[a[1]*b[2]-a[2]*b[1],a[2]*b[0]-a[0]*b[2],a[0]*b[1]-a[1]*b[0]]},d=function(a,b){return[a[0]-b[0],a[1]-b[1],a[2]-b[2]]},e=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]};b|=1;var f=a.width,g=a.height,h=document.createElement("canvas");h.width=f,h.height=g;var i=h.getContext("2d");i.drawImage(a,0,0);var j=i.getImageData(0,0,f,g).data,k=i.createImageData(f,g),l=k.data;for(var m=0;m<f;m++)for(var n=0;n<g;n++){var o=n-1<0?0:n-1,p=n+1>g-1?g-1:n+1,q=m-1<0?0:m-1,r=m+1>f-1?f-1:m+1,s=[],t=[0,0,j[(n*f+m)*4]/255*b];s.push([-1,0,j[(n*f+q)*4]/255*b]),s.push([-1,-1,j[(o*f+q)*4]/255*b]),s.push([0,-1,j[(o*f+m)*4]/255*b]),s.push([1,-1,j[(o*f+r)*4]/255*b]),s.push([1,0,j[(n*f+r)*4]/255*b]),s.push([1,1,j[(p*f+r)*4]/255*b]),s.push([0,1,j[(p*f+m)*4]/255*b]),s.push([-1,1,j[(p*f+q)*4]/255*b]);var u=[],v=s.length;for(var w=0;w<v;w++){var x=s[w],y=s[(w+1)%v];x=d(x,t),y=d(y,t),u.push(e(c(x,y)))}var z=[0,0,0];for(var w=0;w<u.length;w++)z[0]+=u[w][0],z[1]+=u[w][1],z[2]+=u[w][2];z[0]/=u.length,z[1]/=u.length,z[2]/=u.length;var A=(n*f+m)*4;l[A]=(z[0]+1)/2*255|0,l[A+1]=(z[1]+.5)*255|0,l[A+2]=z[2]*255|0,l[A+3]=255}return i.putImageData(k,0,0),h},generateDataTexture:function(a,b,c){var d=a*b,e=new Uint8Array(3*d),f=Math.floor(c.r*255),g=Math.floor(c.g*255),h=Math.floor(c.b*255);for(var i=0;i<d;i++)e[i*3]=f,e[i*3+1]=g,e[i*3+2]=h;var j=new THREE.DataTexture(e,a,b,THREE.RGBFormat);return j.needsUpdate=!0,j}},THREE.SceneUtils={showHierarchy:function(a,b){THREE.SceneUtils.traverseHierarchy(a,function(a){a.visible=b})},traverseHierarchy:function(a,b){var c,d,e=a.children.length;for(d=0;d<e;d++)c=a.children[d],b(c),THREE.SceneUtils.traverseHierarchy(c,b)},createMultiMaterialObject:function(a,b){var c,d=b.length,e=new THREE.Object3D;for(c=0;c<d;c++){var f=new THREE.Mesh(a,b[c]);e.add(f)}return e},cloneObject:function(a){var b;a instanceof THREE.MorphAnimMesh?(b=new THREE.MorphAnimMesh(a.geometry,a.material),b.duration=a.duration,b.mirroredLoop=a.mirroredLoop,b.time=a.time,b.lastKeyframe=a.lastKeyframe,b.currentKeyframe=a.currentKeyframe,b.direction=a.direction,b.directionBackwards=a.directionBackwards):a instanceof THREE.SkinnedMesh?b=new THREE.SkinnedMesh(a.geometry,a.material):a instanceof THREE.Mesh?b=new THREE.Mesh(a.geometry,a.material):a instanceof THREE.Line?b=new THREE.Line(a.geometry,a.material,a.type):a instanceof THREE.Ribbon?b=new THREE.Ribbon(a.geometry,a.material):a instanceof THREE.ParticleSystem?(b=new THREE.ParticleSystem(a.geometry,a.material),b.sortParticles=a.sortParticles):a instanceof THREE.Particle?b=new THREE.Particle(a.material):a instanceof THREE.Sprite?(b=new THREE.Sprite({}),b.color.copy(a.color),b.map=a.map,b.blending=a.blending,b.useScreenCoordinates=a.useScreenCoordinates,b.mergeWith3D=a.mergeWith3D,b.affectedByDistance=a.affectedByDistance,b.scaleByViewport=a.scaleByViewport,b.alignment=a.alignment,b.rotation3d.copy(a.rotation3d),b.rotation=a.rotation,b.opacity=a.opacity,b.uvOffset.copy(a.uvOffset),b.uvScale.copy(a.uvScale)):a instanceof THREE.LOD?b=new THREE.LOD:a instanceof THREE.MarchingCubes?(b=new THREE.MarchingCubes(a.resolution,a.material),b.field.set(a.field),b.isolation=a.isolation):a instanceof THREE.Object3D&&(b=new THREE.Object3D),b.name=a.name,b.parent=a.parent,b.up.copy(a.up),b.position.copy(a.position),b.rotation instanceof THREE.Vector3&&b.rotation.copy(a.rotation),b.eulerOrder=a.eulerOrder,b.scale.copy(a.scale),b.dynamic=a.dynamic,b.doubleSided=a.doubleSided,b.flipSided=a.flipSided,b.renderDepth=a.renderDepth,b.rotationAutoUpdate=a.rotationAutoUpdate,b.matrix.copy(a.matrix),b.matrixWorld.copy(a.matrixWorld),b.matrixRotationWorld.copy(a.matrixRotationWorld),b.matrixAutoUpdate=a.matrixAutoUpdate,b.matrixWorldNeedsUpdate=a.matrixWorldNeedsUpdate,b.quaternion.copy(a.quaternion),b.useQuaternion=a.useQuaternion,b.boundRadius=a.boundRadius,b.boundRadiusScale=a.boundRadiusScale,b.visible=a.visible,b.castShadow=a.castShadow,b.receiveShadow=a.receiveShadow,b.frustumCulled=a.frustumCulled;for(var c=0;c<a.children.length;c++){var d=THREE.SceneUtils.cloneObject(a.children[c]);b.children[c]=d,d.parent=b}if(a instanceof THREE.LOD)for(var c=0;c<a.LODs.length;c++){var e=a.LODs[c];b.LODs[c]={visibleAtDistance:e.visibleAtDistance,object3D:b.children[c]}}return b},detach:function(a,b,c){a.applyMatrix(b.matrixWorld),b.remove(a),c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld),a.applyMatrix(d),b.remove(a),c.add(a)}},THREE.WebGLRenderer&&(THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tCube:{type:"t",value:1,texture:null},tNormal:{type:"t",value:2,texture:null},tSpecular:{type:"t",value:3,texture:null},tAO:{type:"t",value:4,texture:null},tDisplacement:{type:"t",value:5,texture:null},uNormalScale:{type:"f",value:1},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uReflectivity:{type:"f",value:.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;","uniform vec3 uDiffuseColor;","uniform vec3 uSpecularColor;","uniform float uShininess;","uniform float uOpacity;","uniform bool enableDiffuse;","uniform bool enableSpecular;","uniform bool enableAO;","uniform bool enableReflection;","uniform sampler2D tDiffuse;","uniform sampler2D tNormal;","uniform sampler2D tSpecular;","uniform sampler2D tAO;","uniform samplerCube tCube;","uniform float uNormalScale;","uniform float uReflectivity;","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","uniform vec3 ambientLightColor;","#if MAX_DIR_LIGHTS > 0","uniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];","uniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];","#endif","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","#ifdef WRAP_AROUND","uniform vec3 wrapRGB;","#endif","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {","gl_FragColor = vec4( vec3( 1.0 ), uOpacity );","vec3 specularTex = vec3( 1.0 );","vec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;","normalTex.xy *= uNormalScale;","normalTex = normalize( normalTex );","if( enableDiffuse ) {","#ifdef GAMMA_INPUT","vec4 texelColor = texture2D( tDiffuse, vUv );","texelColor.xyz *= texelColor.xyz;","gl_FragColor = gl_FragColor * texelColor;","#else","gl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );","#endif","}","if( enableAO ) {","#ifdef GAMMA_INPUT","vec4 aoColor = texture2D( tAO, vUv );","aoColor.xyz *= aoColor.xyz;","gl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;","#else","gl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;","#endif","}","if( enableSpecular )","specularTex = texture2D( tSpecular, vUv ).xyz;","mat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );","vec3 finalNormal = tsb * normalTex;","vec3 normal = normalize( finalNormal );","vec3 viewPosition = normalize( vViewPosition );","#if MAX_POINT_LIGHTS > 0","vec3 pointDiffuse = vec3( 0.0 );","vec3 pointSpecular = vec3( 0.0 );","for ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {","vec3 pointVector = normalize( vPointLight[ i ].xyz );","float pointDistance = vPointLight[ i ].w;","#ifdef WRAP_AROUND","float pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );","float pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );","vec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );","#else","float pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );","#endif","pointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;","vec3 pointHalfVector = normalize( pointVector + viewPosition );","float pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );","float pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );","pointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;","#else","pointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;","#endif","}","#endif","#if MAX_DIR_LIGHTS > 0","vec3 dirDiffuse = vec3( 0.0 );","vec3 dirSpecular = vec3( 0.0 );","for( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {","vec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );","vec3 dirVector = normalize( lDirection.xyz );","#ifdef WRAP_AROUND","float directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );","float directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );","vec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );","#else","float dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );","#endif","dirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;","vec3 dirHalfVector = normalize( dirVector + viewPosition );","float dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );","float dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );","#ifdef PHYSICALLY_BASED_SHADING","float specularNormalization = ( uShininess + 2.0001 ) / 8.0;","vec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );","dirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;","#else","dirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;","#endif","}","#endif","vec3 totalDiffuse = vec3( 0.0 );","vec3 totalSpecular = vec3( 0.0 );","#if MAX_DIR_LIGHTS > 0","totalDiffuse += dirDiffuse;","totalSpecular += dirSpecular;","#endif","#if MAX_POINT_LIGHTS > 0","totalDiffuse += pointDiffuse;","totalSpecular += pointSpecular;","#endif","gl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor) + totalSpecular;","if ( enableReflection ) {","vec3 wPos = cameraPosition - vViewPosition;","vec3 vReflect = reflect( normalize( wPos ), normal );","vec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );","#ifdef GAMMA_INPUT","cubeColor.xyz *= cubeColor.xyz;","#endif","gl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );","}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;","uniform vec2 uOffset;","uniform vec2 uRepeat;","#ifdef VERTEX_TEXTURES","uniform sampler2D tDisplacement;","uniform float uDisplacementScale;","uniform float uDisplacementBias;","#endif","varying vec3 vTangent;","varying vec3 vBinormal;","varying vec3 vNormal;","varying vec2 vUv;","#if MAX_POINT_LIGHTS > 0","uniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];","uniform float pointLightDistance[ MAX_POINT_LIGHTS ];","varying vec4 vPointLight[ MAX_POINT_LIGHTS ];","#endif","varying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {","vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );","vViewPosition = -mvPosition.xyz;","vNormal = normalMatrix * normal;","vTangent = normalMatrix * tangent.xyz;","vBinormal = cross( vNormal, vTangent ) * tangent.w;","vUv = uv * uRepeat + uOffset;","#if MAX_POINT_LIGHTS > 0","for( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {","vec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );","vec3 lVector = lPosition.xyz - mvPosition.xyz;","float lDistance = 1.0;","if ( pointLightDistance[ i ] > 0.0 )","lDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );","lVector = normalize( lVector );","vPointLight[ i ] = vec4( lVector, lDistance );","}","#endif","#ifdef VERTEX_TEXTURES","vec3 dv = texture2D( tDisplacement, uv ).xyz;","float df = uDisplacementScale * dv.x + uDisplacementBias;","vec4 displacedPosition = vec4( normalize( vNormal.xyz ) * df, 0.0 ) + mvPosition;","gl_Position = projectionMatrix * displacedPosition;","#else","gl_Position = projectionMatrix * mvPosition;","#endif",THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:1,texture:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( tFlip * wPos.x, wPos.yz ) );\n}"}}}),THREE.BufferGeometry=function(){var a=this;a.id=THREE.GeometryCount++,a.vertexIndexBuffer=null,a.vertexPositionBuffer=null,a.vertexNormalBuffer=null,a.vertexUvBuffer=null,a.vertexColorBuffer=null,a.vertexIndexArray=null,a.vertexPositionArray=null,a.vertexNormalArray=null,a.vertexUvArray=null,a.vertexColorArray=null,a.dynamic=!1,a.boundingBox=null,a.boundingSphere=null,a.morphTargets=[]},THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,computeBoundingBox:function(){},computeBoundingSphere:function(){}},THREE.Curve=function(){},THREE.Curve.prototype.getPoint=function(a){return console.log("Warning, getPoint() not implemented!"),null},THREE.Curve.prototype.getPointAt=function(a){var b=this.getUtoTmapping(a);return this.getPoint(b)},THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c},THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c},THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]},THREE.Curve.prototype.getLengths=function(a){var b=this;a||(a=b.__arcLengthDivisions?b.__arcLengthDivisions:200);if(b.cacheArcLengths&&b.cacheArcLengths.length==a+1&&!b.needsUpdate)return b.cacheArcLengths;b.needsUpdate=!1;var c=[],d,e=b.getPoint(0),f,g=0;c.push(0);for(f=1;f<=a;f++)d=b.getPoint(f/a),g+=d.distanceTo(e),c.push(g),e=d;return b.cacheArcLengths=c,c},THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0,this.getLengths()},THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,f;b?f=b:f=a*c[e-1];var g=0,h=e-1,i;while(g<=h){d=Math.floor(g+(h-g)/2),i=c[d]-f;if(i<0){g=d+1;continue}if(i>0){h=d-1;continue}h=d;break}d=h;if(c[d]==f){var j=d/(e-1);return j}var k=c[d],l=c[d+1],m=l-k,n=(f-k)/m,j=(d+n)/(e-1);return j},THREE.Curve.prototype.getNormalVector=function(a){var b=this.getTangent(a);return new THREE.Vector2(-b.y,b.x)},THREE.Curve.prototype.getTangent=function(a){var b=1e-4,c=a-b,d=a+b;c<0&&(c=0),d>1&&(d=1);var e=this.getPoint(c),f=this.getPoint(d),g=f.clone().subSelf(e);return g.normalize()},THREE.Curve.prototype.getTangentAt=function(a){var b=this.getUtoTmapping(a);return this.getTangent(b)},THREE.LineCurve=function(a,b){this.v1=a,this.v2=b},THREE.LineCurve.prototype=new THREE.Curve,THREE.LineCurve.prototype.constructor=THREE.LineCurve,THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().subSelf(this.v1);return b.multiplyScalar(a).addSelf(this.v1),b},THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)},THREE.LineCurve.prototype.getTangent=function(a){var b=this.v2.clone().subSelf(this.v1);return b.normalize()},THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a,this.v1=b,this.v2=c},THREE.QuadraticBezierCurve.prototype=new THREE.Curve,THREE.QuadraticBezierCurve.prototype.constructor=THREE.QuadraticBezierCurve,THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b=this,c,d;return c=THREE.Shape.Utils.b2(a,b.v0.x,b.v1.x,b.v2.x),d=THREE.Shape.Utils.b2(a,b.v0.y,b.v1.y,b.v2.y),new THREE.Vector2(c,d)},THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b=this,c,d;c=THREE.Curve.Utils.tangentQuadraticBezier(a,b.v0.x,b.v1.x,b.v2.x),d=THREE.Curve.Utils.tangentQuadraticBezier(a,b.v0.y,b.v1.y,b.v2.y);var e=new THREE.Vector2(c,d);return e.normalize(),e},THREE.CubicBezierCurve=function(a,b,c,d){var e=this;e.v0=a,e.v1=b,e.v2=c,e.v3=d},THREE.CubicBezierCurve.prototype=new THREE.Curve,THREE.CubicBezierCurve.prototype.constructor=THREE.CubicBezierCurve,THREE.CubicBezierCurve.prototype.getPoint=function(a){var b=this,c,d;return c=THREE.Shape.Utils.b3(a,b.v0.x,b.v1.x,b.v2.x,b.v3.x),d=THREE.Shape.Utils.b3(a,b.v0.y,b.v1.y,b.v2.y,b.v3.y),new THREE.Vector2(c,d)},THREE.CubicBezierCurve.prototype.getTangent=function(a){var b=this,c,d;c=THREE.Curve.Utils.tangentCubicBezier(a,b.v0.x,b.v1.x,b.v2.x,b.v3.x),d=THREE.Curve.Utils.tangentCubicBezier(a,b.v0.y,b.v1.y,b.v2.y,b.v3.y);var e=new THREE.Vector2(c,d);return e.normalize(),e},THREE.SplineCurve=function(a){this.points=a==undefined?[]:a},THREE.SplineCurve.prototype=new THREE.Curve,THREE.SplineCurve.prototype.constructor=THREE.SplineCurve,THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e,f,g;return e=(d.length-1)*a,f=Math.floor(e),g=e-f,c[0]=f==0?f:f-1,c[1]=f,c[2]=f>d.length-2?d.length-1:f+1,c[3]=f>d.length-3?d.length-1:f+2,b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,g),b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,g),b},THREE.ArcCurve=function(a,b,c,d,e,f){var g=this;g.aX=a,g.aY=b,g.aRadius=c,g.aStartAngle=d,g.aEndAngle=e,g.aClockwise=f},THREE.ArcCurve.prototype=new THREE.Curve,THREE.ArcCurve.prototype.constructor=THREE.ArcCurve,THREE.ArcCurve.prototype.getPoint=function(a){var b=this,c=b.aEndAngle-b.aStartAngle;b.aClockwise||(a=1-a);var d=b.aStartAngle+a*c,e=b.aX+b.aRadius*Math.cos(d),f=b.aY+b.aRadius*Math.sin(d);return new THREE.Vector2(e,f)},THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a,b,c,d,e){var f=6*a*a-6*a,g=3*a*a-4*a+1,h=-6*a*a+6*a,i=3*a*a-2*a;return f+g+h+i},interpolate:function(a,b,c,d,e){var f=(c-a)*.5,g=(d-b)*.5,h=e*e,i=e*h;return(2*b-2*c+f+g)*i+(-3*b+3*c-2*f-g)*h+f*e+b}},THREE.Curve.create=function(a,b){var c=a;return c.prototype=new THREE.Curve,c.prototype.constructor=a,c.prototype.getPoint=b,c},THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a,this.v2=b},function(a){var b=new THREE.Vector3;return b.sub(this.v2,this.v1),b.multiplyScalar(a),b.addSelf(this.v1),b}),THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a,this.v1=b,this.v2=c},function(a){var b=this,c,d,e;return c=THREE.Shape.Utils.b2(a,b.v0.x,b.v1.x,b.v2.x),d=THREE.Shape.Utils.b2(a,b.v0.y,b.v1.y,b.v2.y),e=THREE.Shape.Utils.b2(a,b.v0.z,b.v1.z,b.v2.z),new THREE.Vector3(c,d,e)}),THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){var e=this;e.v0=a,e.v1=b,e.v2=c,e.v3=d},function(a){var b=this,c,d,e;return c=THREE.Shape.Utils.b3(a,b.v0.x,b.v1.x,b.v2.x,b.v3.x),d=THREE.Shape.Utils.b3(a,b.v0.y,b.v1.y,b.v2.y,b.v3.y),e=THREE.Shape.Utils.b3(a,b.v0.z,b.v1.z,b.v2.z,b.v3.z),new THREE.Vector3(c,d,e)}),THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=a==undefined?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e,f,g;e=(d.length-1)*a,f=Math.floor(e),g=e-f,c[0]=f==0?f:f-1,c[1]=f,c[2]=f>d.length-2?d.length-1:f+1,c[3]=f>d.length-3?d.length-1:f+2;var h=d[c[0]],i=d[c[1]],j=d[c[2]],k=d[c[3]];return b.x=THREE.Curve.Utils.interpolate(h.x,i.x,j.x,k.x,g),b.y=THREE.Curve.Utils.interpolate(h.y,i.y,j.y,k.y,g),b.z=THREE.Curve.Utils.interpolate(h.z,i.z,j.z,k.z,g),b}),THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=a==undefined?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e,f,g;return e=(d.length-0)*a,f=Math.floor(e),g=e-f,f+=f>0?0:(Math.floor(Math.abs(f)/d.length)+1)*d.length,c[0]=(f-1)%d.length,c[1]=f%d.length,c[2]=(f+1)%d.length,c[3]=(f+2)%d.length,b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,g),b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,g),b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,d[c[1]].z,d[c[2]].z,d[c[3]].z,g),b}),THREE.CurvePath=function(){this.curves=[],this.bends=[],this.autoClose=!1},THREE.CurvePath.prototype=new THREE.Curve,THREE.CurvePath.prototype.constructor=THREE.CurvePath,THREE.CurvePath.prototype.add=function(a){this.curves.push(a)},THREE.CurvePath.prototype.checkConnection=function(){},THREE.CurvePath.prototype.closePath=function(){var a=this,b=a.curves[0].getPoint(0),c=a.curves[a.curves.length-1].getPoint(1);b.equals(c)||a.curves.push(new THREE.LineCurve(c,b))},THREE.CurvePath.prototype.getPoint=function(a){var b=a*this.getLength(),c=this.getCurveLengths(),d=0,e,f;while(d<c.length){if(c[d]>=b){e=c[d]-b,f=this.curves[d];var g=1-e/f.getLength();return f.getPointAt(g)}d++}return null},THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]},THREE.CurvePath.prototype.getCurveLengths=function(){var a=this;if(a.cacheLengths&&a.cacheLengths.length==a.curves.length)return a.cacheLengths;var b=[],c=0,d,e=a.curves.length;for(d=0;d<e;d++)c+=a.curves[d].getLength(),b.push(c);return a.cacheLengths=b,b},THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e;b=c=Number.NEGATIVE_INFINITY,d=e=Number.POSITIVE_INFINITY;var f,g,h,i;i=new THREE.Vector2;for(g=0,h=a.length;g<h;g++)f=a[g],f.x>b?b=f.x:f.x<d&&(d=f.x),f.y>c?c=f.y:f.y<c&&(e=f.y),i.addSelf(f.x,f.y);return{minX:d,minY:e,maxX:b,maxY:c,centroid:i.divideScalar(h)}},THREE.CurvePath.prototype.createPointsGeometry=function(a){var b=this.getPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){var b=this.getSpacedPoints(a,!0);return this.createGeometry(b)},THREE.CurvePath.prototype.createGeometry=function(a){var b=new THREE.Geometry;for(var c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,0));return b},THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)},THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);for(d=0,e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c},THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);for(d=0,e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c},THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,f,g,h,i;for(d=0,e=a.length;d<e;d++){f=a[d],g=f.x,h=f.y,i=g/c.maxX,i=b.getUtoTmapping(i,g);var j=b.getPoint(i),k=b.getNormalVector(i).multiplyScalar(h);f.x=j.x+k.x,f.y=j.y+k.y}return a},THREE.EventTarget=function(){var a={};this.addEventListener=function(b,c){a[b]==undefined&&(a[b]=[]),a[b].indexOf(c)===-1&&a[b].push(c)},this.dispatchEvent=function(b){for(var c in a[b.type])a[b.type][c](b)},this.removeEventListener=function(b,c){var d=a[b].indexOf(c);d!==-1&&a[b].splice(d,1)}},THREE.Gyroscope=function(){THREE.Object3D.call(this)},THREE.Gyroscope.prototype=new THREE.Object3D,THREE.Gyroscope.prototype.constructor=THREE.Gyroscope,THREE.Gyroscope.prototype.updateMatrixWorld=function(a){var b=this;b.matrixAutoUpdate&&b.updateMatrix();if(b.matrixWorldNeedsUpdate||a)b.parent?(b.matrixWorld.multiply(b.parent.matrixWorld,b.matrix),b.matrixWorld.decompose(b.translationWorld,b.rotationWorld,b.scaleWorld),b.matrix.decompose(b.translationObject,b.rotationObject,b.scaleObject),b.matrixWorld.compose(b.translationWorld,b.rotationObject,b.scaleWorld)):b.matrixWorld.copy(b.matrix),b.matrixWorldNeedsUpdate=!1,a=!0;for(var c=0,d=b.children.length;c<d;c++)b.children[c].updateMatrixWorld(a)},THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3,THREE.Gyroscope.prototype.translationObject=new THREE.Vector3,THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion,THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion,THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3,THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3,THREE.Path=function(a){THREE.CurvePath.call(this),this.actions=[],a&&this.fromPoints(a)},THREE.Path.prototype=new THREE.CurvePath,THREE.Path.prototype.constructor=THREE.Path,THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc"},THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)},THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})},THREE.Path.prototype.lineTo=function(a,b){var c=this,d=Array.prototype.slice.call(arguments),e=c.actions[c.actions.length-1].args,f=e[e.length-2],g=e[e.length-1],h=new THREE.LineCurve(new THREE.Vector2(f,g),new THREE.Vector2(a,b));c.curves.push(h),c.actions.push({action:THREE.PathActions.LINE_TO,args:d})},THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=this,f=Array.prototype.slice.call(arguments),g=e.actions[e.actions.length-1].args,h=g[g.length-2],i=g[g.length-1],j=new THREE.QuadraticBezierCurve(new THREE.Vector2(h,i),new THREE.Vector2(a,b),new THREE.Vector2(c,d));e.curves.push(j),e.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:f})},THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,f){var g=this,h=Array.prototype.slice.call(arguments),i=g.actions[g.actions.length-1].args,j=i[i.length-2],k=i[i.length-1],l=new THREE.CubicBezierCurve(new THREE.Vector2(j,k),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,f));g.curves.push(l),g.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:h})},THREE.Path.prototype.splineThru=function(a){var b=this,c=Array.prototype.slice.call(arguments),d=b.actions[b.actions.length-1].args,e=d[d.length-2],f=d[d.length-1],g=[new THREE.Vector2(e,f)];Array.prototype.push.apply(g,a);var h=new THREE.SplineCurve(g);b.curves.push(h),b.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:c})},THREE.Path.prototype.arc=function(a,b,c,d,e,f){var g=this,h=Array.prototype.slice.call(arguments),i=g.actions[g.actions.length-1],j=new THREE.ArcCurve(i.x+a,i.y+b,c,d,e,f);g.curves.push(j);var k=j.getPoint(f?1:0);h.push(k.x),h.push(k.y),g.actions.push({action:THREE.PathActions.ARC,args:h})},THREE.Path.prototype.absarc=function(a,b,c,d,e,f){var g=Array.prototype.slice.call(arguments),h=new THREE.ArcCurve(a,b,c,d,e,f);this.curves.push(h);var i=h.getPoint(f?1:0);g.push(i.x),g.push(i.y),this.actions.push({action:THREE.PathActions.ARC,args:g})},THREE.Path.prototype.getSpacedPoints=function(a,b){a||(a=40);var c=[];for(var d=0;d<a;d++)c.push(this.getPoint(d/a));return c},THREE.Path.prototype.getPoints=function(a,b){var c=this;if(c.useSpacedPoints)return console.log("tata"),c.getSpacedPoints(a,b);a=a||12;var d=[],e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v;for(e=0,f=c.actions.length;e<f;e++){g=c.actions[e],h=g.action,i=g.args;switch(h){case THREE.PathActions.MOVE_TO:d.push(new THREE.Vector2(i[0],i[1]));break;case THREE.PathActions.LINE_TO:d.push(new THREE.Vector2(i[0],i[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:j=i[2],k=i[3],n=i[0],o=i[1],d.length>0?(r=d[d.length-1],p=r.x,q=r.y):(r=c.actions[e-1].args,p=r[r.length-2],q=r[r.length-1]);for(s=1;s<=a;s++)t=s/a,u=THREE.Shape.Utils.b2(t,p,n,j),v=THREE.Shape.Utils.b2(t,q,o,k),d.push(new THREE.Vector2(u,v));break;case THREE.PathActions.BEZIER_CURVE_TO:j=i[4],k=i[5],n=i[0],o=i[1],l=i[2],m=i[3],d.length>0?(r=d[d.length-1],p=r.x,q=r.y):(r=c.actions[e-1].args,p=r[r.length-2],q=r[r.length-1]);for(s=1;s<=a;s++)t=s/a,u=THREE.Shape.Utils.b3(t,p,n,l,j),v=THREE.Shape.Utils.b3(t,q,o,m,k),d.push(new THREE.Vector2(u,v));break;case THREE.PathActions.CSPLINE_THRU:r=c.actions[e-1].args;var w=new THREE.Vector2(r[r.length-2],r[r.length-1]),x=[w],y=a*i[0].length;x=x.concat(i[0]);var z=new THREE.SplineCurve(x);for(s=1;s<=y;s++)d.push(z.getPointAt(s/y));break;case THREE.PathActions.ARC:r=c.actions[e-1].args;var A=i[0],B=i[1],C=i[2],D=i[3],E=i[4],F=!!i[5],G=E-D,H,I=a*2;for(s=1;s<=I;s++)t=s/I,F||(t=1-t),H=D+t*G,u=A+C*Math.cos(H),v=B+C*Math.sin(H),d.push(new THREE.Vector2(u,v))}}var J=d[d.length-1],K=1e-10;return Math.abs(J.x-d[0].x)<K&&Math.abs(J.y-d[0].y)<K&&d.splice(d.length-1,1),b&&d.push(d[0]),d},THREE.Path.prototype.transform=function(a,b){var c=this.getBoundingBox(),d=this.getPoints(b);return this.getWrapPoints(d,a)},THREE.Path.prototype.nltransform=function(a,b,c,d,e,f){var g=this.getPoints(),h,i,j,k,l;for(h=0,i=g.length;h<i;h++)j=g[h],k=j.x,l=j.y,j.x=a*k+b*l+c,j.y=d*l+e*k+f;return g},THREE.Path.prototype.debug=function(a){var b=this,c=b.getBoundingBox();a||(a=document.createElement("canvas"),a.setAttribute("width",c.maxX+100),a.setAttribute("height",c.maxY+100),document.body.appendChild(a));var d=a.getContext("2d");d.fillStyle="white",d.fillRect(0,0,a.width,a.height),d.strokeStyle="black",d.beginPath();var e,f,g,h,i;for(e=0,f=b.actions.length;e<f;e++)g=b.actions[e],i=g.args,h=g.action,h!=THREE.PathActions.CSPLINE_THRU&&d[h].apply(d,i);d.stroke(),d.closePath(),d.strokeStyle="red";var j,k=b.getPoints();for(e=0,f=k.length;e<f;e++)j=k[e],d.beginPath(),d.arc(j.x,j.y,1.5,0,Math.PI*2,!1),d.stroke(),d.closePath()},THREE.Path.prototype.toShapes=function(){var a,b,c,d,e,f=[],g=new THREE.Path;for(a=0,b=this.actions.length;a<b;a++)c=this.actions[a],e=c.args,d=c.action,d==THREE.PathActions.MOVE_TO&&g.actions.length!=0&&(f.push(g),g=new THREE.Path),g[d].apply(g,e);g.actions.length!=0&&f.push(g);if(f.length==0)return[];var h,i,j=[],k=!THREE.Shape.Utils.isClockWise(f[0].getPoints());if(f.length==1)return h=f[0],i=new THREE.Shape,i.actions=h.actions,i.curves=h.curves,j.push(i),j;if(k){i=new THREE.Shape;for(a=0,b=f.length;a<b;a++)h=f[a],THREE.Shape.Utils.isClockWise(h.getPoints())?(i.actions=h.actions,i.curves=h.curves,j.push(i),i=new THREE.Shape):i.holes.push(h)}else{for(a=0,b=f.length;a<b;a++)h=f[a],THREE.Shape.Utils.isClockWise(h.getPoints())?(i&&j.push(i),i=new THREE.Shape,i.actions=h.actions,i.curves=h.curves):i.holes.push(h);j.push(i)}return j},THREE.Shape=function(){THREE.Path.apply(this,arguments),this.holes=[]},THREE.Shape.prototype=new THREE.Path,THREE.Shape.prototype.constructor=THREE.Path,THREE.Shape.prototype.extrude=function(a){var b=new THREE.ExtrudeGeometry(this,a);return b},THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d},THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d},THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}},THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)},THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}},THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u=[];for(i=0;i<b.length;i++){k=b[i],Array.prototype.push.apply(d,k),l=Number.POSITIVE_INFINITY;for(j=0;j<k.length;j++){o=k[j];var v=[];for(n=0;n<c.length;n++)p=c[n],m=o.distanceToSquared(p),v.push(m),m<l&&(l=m,g=j,h=n)}e=h-1>=0?h-1:c.length-1,f=g-1>=0?g-1:k.length-1;var w=[k[g],c[h],c[e]],x=THREE.FontUtils.Triangulate.area(w),y=[k[g],k[f],c[h]],z=THREE.FontUtils.Triangulate.area(y),A=1,B=-1,C=h,D=g;h+=A,g+=B,h<0&&(h+=c.length),h%=c.length,g<0&&(g+=k.length),g%=k.length,e=h-1>=0?h-1:c.length-1,f=g-1>=0?g-1:k.length-1,w=[k[g],c[h],c[e]];var E=THREE.FontUtils.Triangulate.area(w);y=[k[g],k[f],c[h]];var F=THREE.FontUtils.Triangulate.area(y);x+z>E+F&&(h=C,g=D,h<0&&(h+=c.length),h%=c.length,g<0&&(g+=k.length),g%=k.length,e=h-1>=0?h-1:c.length-1,f=g-1>=0?g-1:k.length-1),q=c.slice(0,h),r=c.slice(h),s=k.slice(g),t=k.slice(0,g);var G=[k[g],c[h],c[e]],H=[k[g],k[f],c[h]];u.push(G),u.push(H),c=q.concat(s).concat(t).concat(r)}return{shape:c,isolatedPts:u,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.shape,e=c.allpoints,f=c.isolatedPts,g=THREE.FontUtils.Triangulate(d,!1),h,i,j,k,l,m,n={},o={};for(h=0,i=e.length;h<i;h++)l=e[h].x+":"+e[h].y,n[l]!==undefined&&console.log("Duplicate point",l),n[l]=h;for(h=0,i=g.length;h<i;h++){k=g[h];for(j=0;j<3;j++)l=k[j].x+":"+k[j].y,m=n[l],m!==undefined&&(k[j]=m)}for(h=0,i=f.length;h<i;h++){k=f[h];for(j=0;j<3;j++)l=k[j].x+":"+k[j].y,m=n[l],m!==undefined&&(k[j]=m)}return g.concat(f)},isClockWise:function(a){return THREE.FontUtils.Triangulate.area(a)<0},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){var c=1-a;return 3*c*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){var f=this;return f.b3p0(a,b)+f.b3p1(a,c)+f.b3p2(a,d)+f.b3p3(a,e)}},THREE.TextPath=function(a,b){THREE.Path.call(this),this.parameters=b||{},this.set(a)},THREE.TextPath.prototype.set=function(a,b){b=b||this.parameters,this.text=a;var c=b.size!==undefined?b.size:100,d=b.curveSegments!==undefined?b.curveSegments:4,e=b.font!==undefined?b.font:"helvetiker",f=b.weight!==undefined?b.weight:"normal",g=b.style!==undefined?b.style:"normal";THREE.FontUtils.size=c,THREE.FontUtils.divisions=d,THREE.FontUtils.face=e,THREE.FontUtils.weight=f,THREE.FontUtils.style=g},THREE.TextPath.prototype.toShapes=function(){var a=THREE.FontUtils.drawText(this.text),b=a.paths,c=[];for(var d=0,e=b.length;d<e;d++)Array.prototype.push.apply(c,b[d].toShapes());return c},THREE.AnimationHandler=function(){var a=[],b={},c={};c.update=function(b){for(var c=0;c<a.length;c++)a[c].update(b)},c.addToUpdate=function(b){a.indexOf(b)===-1&&a.push(b)},c.removeFromUpdate=function(b){var c=a.indexOf(b);c!==-1&&a.splice(c,1)},c.add=function(a){b[a.name]!==undefined&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting."),b[a.name]=a,e(a)},c.get=function(a){if(typeof a=="string")return b[a]?b[a]:(console.log("THREE.AnimationHandler.get: Couldn't find animation "+a),null)},c.parse=function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b};var d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],b)},e=function(a){if(a.initialized===!0)return;for(var b=0;b<a.hierarchy.length;b++){for(var c=0;c<a.hierarchy[b].keys.length;c++){a.hierarchy[b].keys[c].time<0&&(a.hierarchy[b].keys[c].time=0);if(a.hierarchy[b].keys[c].rot!==undefined&&!(a.hierarchy[b].keys[c].rot instanceof THREE.Quaternion)){var d=a.hierarchy[b].keys[c].rot;a.hierarchy[b].keys[c].rot=new THREE.Quaternion(d[0],d[1],d[2],d[3])}}if(a.hierarchy[b].keys.length&&a.hierarchy[b].keys[0].morphTargets!==undefined){var e={};for(var c=0;c<a.hierarchy[b].keys.length;c++)for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++){var g=a.hierarchy[b].keys[c].morphTargets[f];e[g]=-1}a.hierarchy[b].usedMorphTargets=e;for(var c=0;c<a.hierarchy[b].keys.length;c++){var h={};for(var g in e){for(var f=0;f<a.hierarchy[b].keys[c].morphTargets.length;f++)if(a.hierarchy[b].keys[c].morphTargets[f]===g){h[g]=a.hierarchy[b].keys[c].morphTargetsInfluences[f];break}f===a.hierarchy[b].keys[c].morphTargets.length&&(h[g]=0)}a.hierarchy[b].keys[c].morphTargetsInfluences=h}}for(var c=1;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].time===a.hierarchy[b].keys[c-1].time&&(a.hierarchy[b].keys.splice(c,1),c--);for(var c=0;c<a.hierarchy[b].keys.length;c++)a.hierarchy[b].keys[c].index=c}var i=parseInt(a.length*a.fps,10);a.JIT={},a.JIT.hierarchy=[];for(var b=0;b<a.hierarchy.length;b++)a.JIT.hierarchy.push(new Array(i));a.initialized=!0};return c.LINEAR=0,c.CATMULLROM=1,c.CATMULLROM_FORWARD=2,c}(),THREE.Animation=function(a,b,c,d){var e=this;e.root=a,e.data=THREE.AnimationHandler.get(b),e.hierarchy=THREE.AnimationHandler.parse(a),e.currentTime=0,e.timeScale=1,e.isPlaying=!1,e.isPaused=!0,e.loop=!0,e.interpolationType=c!==undefined?c:THREE.AnimationHandler.LINEAR,e.JITCompile=d!==undefined?d:!0,e.points=[],e.target=new THREE.Vector3},THREE.Animation.prototype.play=function(a,b){var c=this;if(!c.isPlaying){c.isPlaying=!0,c.loop=a!==undefined?a:!0,c.currentTime=b!==undefined?b:0;var d,e=c.hierarchy.length,f;for(d=0;d<e;d++){f=c.hierarchy[d],c.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(f.useQuaternion=!0),f.matrixAutoUpdate=!0,f.animationCache===undefined&&(f.animationCache={},f.animationCache.prevKey={pos:0,rot:0,scl:0},f.animationCache.nextKey={pos:0,rot:0,scl:0},f.animationCache.originalMatrix=f instanceof THREE.Bone?f.skinMatrix:f.matrix);var g=f.animationCache.prevKey,h=f.animationCache.nextKey;g.pos=c.data.hierarchy[d].keys[0],g.rot=c.data.hierarchy[d].keys[0],g.scl=c.data.hierarchy[d].keys[0],h.pos=c.getNextKeyWith("pos",d,1),h.rot=c.getNextKeyWith("rot",d,1),h.scl=c.getNextKeyWith("scl",d,1)}c.update(0)}c.isPaused=!1,THREE.AnimationHandler.addToUpdate(c)},THREE.Animation.prototype.pause=function(){var a=this;a.isPaused?THREE.AnimationHandler.addToUpdate(a):THREE.AnimationHandler.removeFromUpdate(a),a.isPaused=!a.isPaused},THREE.Animation.prototype.stop=function(){var a=this;a.isPlaying=!1,a.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(a);for(var b=0;b<a.hierarchy.length;b++)a.hierarchy[b].animationCache!==undefined&&(a.hierarchy[b]instanceof THREE.Bone?a.hierarchy[b].skinMatrix=a.hierarchy[b].animationCache.originalMatrix:a.hierarchy[b].matrix=a.hierarchy[b].animationCache.originalMatrix,delete a.hierarchy[b].animationCache)},THREE.Animation.prototype.update=function(a){var b=this;if(!b.isPlaying)return;var c=["pos","rot","scl"],d,e,f,g,h,i,j,k,l,m,n=b.data.JIT.hierarchy,o,p,q,r,s;b.currentTime+=a*b.timeScale,p=b.currentTime,o=b.currentTime=b.currentTime%b.data.length,m=parseInt(Math.min(o*b.data.fps,b.data.length*b.data.fps),10);for(var t=0,u=b.hierarchy.length;t<u;t++){k=b.hierarchy[t],l=k.animationCache;if(b.JITCompile&&n[t][m]!==undefined)k instanceof THREE.Bone?(k.skinMatrix=n[t][m],k.matrixAutoUpdate=!1,k.matrixWorldNeedsUpdate=!1):(k.matrix=n[t][m],k.matrixAutoUpdate=!1,k.matrixWorldNeedsUpdate=!0);else{b.JITCompile&&(k instanceof THREE.Bone?k.skinMatrix=k.animationCache.originalMatrix:k.matrix=k.animationCache.originalMatrix);for(var v=0;v<3;v++){d=c[v],i=l.prevKey[d],j=l.nextKey[d];if(j.time<=p){if(o<p){if(!b.loop){b.stop();return}i=b.data.hierarchy[t].keys[0],j=b.getNextKeyWith(d,t,1);while(j.time<o)i=j,j=b.getNextKeyWith(d,t,j.index+1)}else do i=j,j=b.getNextKeyWith(d,t,j.index+1);while(j.time<o);l.prevKey[d]=i,l.nextKey[d]=j}k.matrixAutoUpdate=!0,k.matrixWorldNeedsUpdate=!0,e=(o-i.time)/(j.time-i.time),g=i[d],h=j[d];if(e<0||e>1)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+e+" on bone "+t),e=e<0?0:1;if(d==="pos"){f=k.position;if(b.interpolationType===THREE.AnimationHandler.LINEAR)f.x=g[0]+(h[0]-g[0])*e,f.y=g[1]+(h[1]-g[1])*e,f.z=g[2]+(h[2]-g[2])*e;else if(b.interpolationType===THREE.AnimationHandler.CATMULLROM||b.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)b.points[0]=b.getPrevKeyWith("pos",t,i.index-1).pos,b.points[1]=g,b.points[2]=h,b.points[3]=b.getNextKeyWith("pos",t,j.index+1).pos,e=e*.33+.33,q=b.interpolateCatmullRom(b.points,e),f.x=q[0],f.y=q[1],f.z=q[2],b.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(r=b.interpolateCatmullRom(b.points,e*1.01),b.target.set(r[0],r[1],r[2]),b.target.subSelf(f),b.target.y=0,b.target.normalize(),s=Math.atan2(b.target.x,b.target.z),k.rotation.set(0,s,0))}else d==="rot"?THREE.Quaternion.slerp(g,h,k.quaternion,e):d==="scl"&&(f=k.scale,f.x=g[0]+(h[0]-g[0])*e,f.y=g[1]+(h[1]-g[1])*e,f.z=g[2]+(h[2]-g[2])*e)}}}if(b.JITCompile&&n[0][m]===undefined){b.hierarchy[0].updateMatrixWorld(!0);for(var t=0;t<b.hierarchy.length;t++)b.hierarchy[t]instanceof THREE.Bone?n[t][m]=b.hierarchy[t].skinMatrix.clone():n[t][m]=b.hierarchy[t].matrix.clone()}},THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,f,g,h,i,j,k,l,m;return e=(a.length-1)*b,f=Math.floor(e),g=e-f,c[0]=f===0?f:f-1,c[1]=f,c[2]=f>a.length-2?f:f+1,c[3]=f>a.length-3?f:f+2,j=a[c[0]],k=a[c[1]],l=a[c[2]],m=a[c[3]],h=g*g,i=g*h,d[0]=this.interpolate(j[0],k[0],l[0],m[0],g,h,i),d[1]=this.interpolate(j[1],k[1],l[1],m[1],g,h,i),d[2]=this.interpolate(j[2],k[2],l[2],m[2],g,h,i),d},THREE.Animation.prototype.interpolate=function(a,b,c,d,e,f,g){var h=(c-a)*.5,i=(d-b)*.5;return(2*(b-c)+h+i)*g+(-3*(b-c)-2*h-i)*f+h*e+b},THREE.Animation.prototype.getNextKeyWith=function(a,b,c){var d=this,e=d.data.hierarchy[b].keys;d.interpolationType===THREE.AnimationHandler.CATMULLROM||d.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c=c<e.length-1?c:e.length-1:c%=e.length;for(;c<e.length;c++)if(e[c][a]!==undefined)return e[c];return d.data.hierarchy[b].keys[0]},THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){var d=this,e=d.data.hierarchy[b].keys;d.interpolationType===THREE.AnimationHandler.CATMULLROM||d.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c=c>0?c:0:c=c>=0?c:c+e.length;for(;c>=0;c--)if(e[c][a]!==undefined)return e[c];return d.data.hierarchy[b].keys[e.length-1]},THREE.KeyFrameAnimation=function(a,b,c){var d=this;d.root=a,d.data=THREE.AnimationHandler.get(b),d.hierarchy=THREE.AnimationHandler.parse(a),d.currentTime=0,d.timeScale=.001,d.isPlaying=!1,d.isPaused=!0,d.loop=!0,d.JITCompile=c!==undefined?c:!0;for(var e=0,f=d.hierarchy.length;e<f;e++){var g=d.data.hierarchy[e].keys,h=d.data.hierarchy[e].sids,i=d.hierarchy[e];if(g.length&&h){for(var j=0;j<h.length;j++){var k=h[j],l=d.getNextKeyWith(k,e,0);l&&l.apply(k)}i.matrixAutoUpdate=!1,d.data.hierarchy[e].node.updateMatrix(),i.matrixWorldNeedsUpdate=!0}}},THREE.KeyFrameAnimation.prototype.play=function(a,b){var c=this;if(!c.isPlaying){c.isPlaying=!0,c.loop=a!==undefined?a:!0,c.currentTime=b!==undefined?b:0,c.startTimeMs=b,c.startTime=1e7,c.endTime=-c.startTime;var d,e=c.hierarchy.length,f,g;for(d=0;d<e;d++){f=c.hierarchy[d],g=c.data.hierarchy[d],f.useQuaternion=!0,g.animationCache===undefined&&(g.animationCache={},g.animationCache.prevKey=null,g.animationCache.nextKey=null,g.animationCache.originalMatrix=f instanceof THREE.Bone?f.skinMatrix:f.matrix);var h=c.data.hierarchy[d].keys;h.length&&(g.animationCache.prevKey=h[0],g.animationCache.nextKey=h[1],c.startTime=Math.min(h[0].time,c.startTime),c.endTime=Math.max(h[h.length-1].time,c.endTime))}c.update(0)}c.isPaused=!1,THREE.AnimationHandler.addToUpdate(c)},THREE.KeyFrameAnimation.prototype.pause=function(){var a=this;a.isPaused?THREE.AnimationHandler.addToUpdate(a):THREE.AnimationHandler.removeFromUpdate(a),a.isPaused=!a.isPaused},THREE.KeyFrameAnimation.prototype.stop=function(){var a=this;a.isPlaying=!1,a.isPaused=!1,THREE.AnimationHandler.removeFromUpdate(a);for(var b=0;b<a.data.hierarchy.length;b++){var c=a.hierarchy[b],d=a.data.hierarchy[b];if(d.animationCache!==undefined){var e=d.animationCache.originalMatrix;c instanceof THREE.Bone?(e.copy(c.skinMatrix),c.skinMatrix=e):(e.copy(c.matrix),c.matrix=e),delete d.animationCache}}},THREE.KeyFrameAnimation.prototype.update=function(a){var b=this;if(!b.isPlaying)return;var c,d,e,f,g,h=b.data.JIT.hierarchy,i,j,k;b.currentTime+=a*b.timeScale,j=b.currentTime,i=b.currentTime=b.currentTime%b.data.length,i<b.startTimeMs&&(i=b.currentTime=b.startTimeMs+i),g=parseInt(Math.min(i*b.data.fps,b.data.length*b.data.fps),10),k=i<j;if(k&&!b.loop){for(var l=0,m=b.hierarchy.length;l<m;l++){var n=b.data.hierarchy[l].keys,o=b.data.hierarchy[l].sids,p=n.length-1,q=b.hierarchy[l];if(n.length){for(var r=0;r<o.length;r++){var s=o[r],t=b.getPrevKeyWith(s,l,p);t&&t.apply(s)}b.data.hierarchy[l].node.updateMatrix(),q.matrixWorldNeedsUpdate=!0}}b.stop();return}if(i<b.startTime)return;for(var l=0,m=b.hierarchy.length;l<m;l++){e=b.hierarchy[l],f=b.data.hierarchy[l];var n=f.keys,u=f.animationCache;if(b.JITCompile&&h[l][g]!==undefined)e instanceof THREE.Bone?(e.skinMatrix=h[l][g],e.matrixWorldNeedsUpdate=!1):(e.matrix=h[l][g],e.matrixWorldNeedsUpdate=!0);else if(n.length){b.JITCompile&&u&&(e instanceof THREE.Bone?e.skinMatrix=u.originalMatrix:e.matrix=u.originalMatrix),c=u.prevKey,d=u.nextKey;if(c&&d){if(d.time<=j){if(k&&b.loop){c=n[0],d=n[1];while(d.time<i)c=d,d=n[c.index+1]}else if(!k){var v=n.length-1;while(d.time<i&&d.index!==v)c=d,d=n[c.index+1]}u.prevKey=c,u.nextKey=d}d.time>=i?c.interpolate(d,i):c.interpolate(d,d.time)}b.data.hierarchy[l].node.updateMatrix(),e.matrixWorldNeedsUpdate=!0}}if(b.JITCompile&&h[0][g]===undefined){b.hierarchy[0].updateMatrixWorld(!0);for(var l=0;l<b.hierarchy.length;l++)b.hierarchy[l]instanceof THREE.Bone?h[l][g]=b.hierarchy[l].skinMatrix.clone():h[l][g]=b.hierarchy[l].matrix.clone()}},THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;c%=d.length;for(;c<d.length;c++)if(d[c].hasTarget(a))return d[c];return d[0]},THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){var d=this.data.hierarchy[b].keys;c=c>=0?c:c+d.length;for(;c>=0;c--)if(d[c].hasTarget(a))return d[c];return d[d.length-1]},THREE.CubeCamera=function(a,b,c){var d=this;THREE.Object3D.call(d);var e=90,f=1,g=new THREE.PerspectiveCamera(e,f,a,b);g.up.set(0,-1,0),g.lookAt(new THREE.Vector3(1,0,0)),d.add(g);var h=new THREE.PerspectiveCamera(e,f,a,b);h.up.set(0,-1,0),h.lookAt(new THREE.Vector3(-1,0,0)),d.add(h);var i=new THREE.PerspectiveCamera(e,f,a,b);i.up.set(0,0,1),i.lookAt(new THREE.Vector3(0,1,0)),d.add(i);var j=new THREE.PerspectiveCamera(e,f,a,b);j.up.set(0,0,-1),j.lookAt(new THREE.Vector3(0,-1,0)),d.add(j);var k=new THREE.PerspectiveCamera(e,f,a,b);k.up.set(0,-1,0),k.lookAt(new THREE.Vector3(0,0,1)),d.add(k);var l=new THREE.PerspectiveCamera(e,f,a,b);l.up.set(0,-1,0),l.lookAt(new THREE.Vector3(0,0,-1)),d.add(l),d.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter}),d.updateCubeMap=function(a,b){var c=this.renderTarget,d=c.generateMipmaps;c.generateMipmaps=!1,c.activeCubeFace=0,a.render(b,g,c),c.activeCubeFace=1,a.render(b,h,c),c.activeCubeFace=2,a.render(b,i,c),c.activeCubeFace=3,a.render(b,j,c),c.activeCubeFace=4,a.render(b,k,c),c.generateMipmaps=d,c.activeCubeFace=5,a.render(b,l,c)}},THREE.CubeCamera.prototype=new THREE.Object3D,THREE.CubeCamera.prototype.constructor=THREE.CubeCamera,THREE.CombinedCamera=function(a,b,c,d,e,f,g){var h=this;THREE.Camera.call(h),h.fov=c,h.left=-a/2,h.right=a/2,h.top=b/2,h.bottom=-b/2,h.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,f,g),h.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e),h.zoom=1,h.toPerspective();var i=a/b},THREE.CombinedCamera.prototype=new THREE.Camera,THREE.CombinedCamera.prototype.constructor=THREE.CombinedCamera,THREE.CombinedCamera.prototype.toPerspective=function(){var a=this;a.near=a.cameraP.near,a.far=a.cameraP.far,a.cameraP.fov=a.fov/a.zoom,a.cameraP.updateProjectionMatrix(),a.projectionMatrix=a.cameraP.projectionMatrix,a.inPersepectiveMode=!0,a.inOrthographicMode=!1},THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this,b=a.fov,c=a.cameraP.aspect,d=a.cameraP.near,e=a.cameraP.far,f=(d+e)/2,g=Math.tan(b/2)*f,h=2*g,i=h*c,j=i/2;g/=a.zoom,j/=a.zoom,a.cameraO.left=-j,a.cameraO.right=j,a.cameraO.top=g,a.cameraO.bottom=-g,a.cameraO.updateProjectionMatrix(),a.near=a.cameraO.near,a.far=a.cameraO.far,a.projectionMatrix=a.cameraO.projectionMatrix,a.inPersepectiveMode=!1,a.inOrthographicMode=!0},THREE.CombinedCamera.prototype.setSize=function(a,b){var c=this;c.cameraP.aspect=a/b,c.left=-a/2,c.right=a/2,c.top=b/2,c.bottom=-b/2},THREE.CombinedCamera.prototype.setFov=function(a){var b=this;b.fov=a,b.inPersepectiveMode?b.toPerspective():b.toOrthographic()},THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){var a=this;a.inPersepectiveMode?a.toPerspective():(a.toPerspective(),a.toOrthographic())},THREE.CombinedCamera.prototype.setLens=function(a,b){b=b!==undefined?b:24;var c=2*Math.atan(b/(a*2))*(180/Math.PI);return this.setFov(c),c},THREE.CombinedCamera.prototype.setZoom=function(a){var b=this;b.zoom=a,b.inPersepectiveMode?b.toPerspective():b.toOrthographic()},THREE.CombinedCamera.prototype.toFrontView=function(){var a=this;a.rotation.x=0,a.rotation.y=0,a.rotation.z=0,a.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBackView=function(){var a=this;a.rotation.x=0,a.rotation.y=Math.PI,a.rotation.z=0,a.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toLeftView=function(){var a=this;a.rotation.x=0,a.rotation.y=-Math.PI/2,a.rotation.z=0,a.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toRightView=function(){var a=this;a.rotation.x=0,a.rotation.y=Math.PI/2,a.rotation.z=0,a.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toTopView=function(){var a=this;a.rotation.x=-Math.PI/2,a.rotation.y=0,a.rotation.z=0,a.rotationAutoUpdate=!1},THREE.CombinedCamera.prototype.toBottomView=function(){var a=this;a.rotation.x=Math.PI/2,a.rotation.y=0,a.rotation.z=0,a.rotationAutoUpdate=!1},THREE.FirstPersonControls=function(a,b){function d(a,b){return function(){b.apply(a,arguments)}}var c=this;c.object=a,c.target=new THREE.Vector3(0,0,0),c.domElement=b!==undefined?b:document,c.movementSpeed=1,c.lookSpeed=.005,c.noFly=!1,c.lookVertical=!0,c.autoForward=!1,c.activeLook=!0,c.heightSpeed=!1,c.heightCoef=1,c.heightMin=0,c.constrainVertical=!1,c.verticalMin=0,c.verticalMax=Math.PI,c.autoSpeedFactor=0,c.mouseX=0,c.mouseY=0,c.lat=0,c.lon=0,c.phi=0,c.theta=0,c.moveForward=!1,c.moveBackward=!1,c.moveLeft=!1,c.moveRight=!1,c.freeze=!1,c.mouseDragOn=!1,c.domElement===document?(c.viewHalfX=window.innerWidth/2,c.viewHalfY=window.innerHeight/2):(c.viewHalfX=c.domElement.offsetWidth/2,c.viewHalfY=c.domElement.offsetHeight/2,c.domElement.setAttribute("tabindex",-1)),c.onMouseDown=function(a){var b=this;b.domElement!==document&&b.domElement.focus(),a.preventDefault(),a.stopPropagation();if(b.activeLook)switch(a.button){case 0:b.moveForward=!0;break;case 2:b.moveBackward=!0}b.mouseDragOn=!0},c.onMouseUp=function(a){var b=this;a.preventDefault(),a.stopPropagation();if(b.activeLook)switch(a.button){case 0:b.moveForward=!1;break;case 2:b.moveBackward=!1}b.mouseDragOn=!1},c.onMouseMove=function(a){var b=this;b.domElement===document?(b.mouseX=a.pageX-b.viewHalfX,b.mouseY=a.pageY-b.viewHalfY):(b.mouseX=a.pageX-b.domElement.offsetLeft-b.viewHalfX,b.mouseY=a.pageY-b.domElement.offsetTop-b.viewHalfY)},c.onKeyDown=function(a){var b=this;switch(a.keyCode){case 38:case 87:b.moveForward=!0;break;case 37:case 65:b.moveLeft=!0;break;case 40:case 83:b.moveBackward=!0;break;case 39:case 68:b.moveRight=!0;break;case 82:b.moveUp=!0;break;case 70:b.moveDown=!0;break;case 81:b.freeze=!b.freeze}},c.onKeyUp=function(a){var b=this;switch(a.keyCode){case 38:case 87:b.moveForward=!1;break;case 37:case 65:b.moveLeft=!1;break;case 40:case 83:b.moveBackward=!1;break;case 39:case 68:b.moveRight=!1;break;case 82:b.moveUp=!1;break;case 70:b.moveDown=!1}},c.update=function(a){var b=this,c=0;if(b.freeze)return;if(b.heightSpeed){var d=THREE.Math.clamp(b.object.position.y,b.heightMin,b.heightMax),e=d-b.heightMin;b.autoSpeedFactor=a*e*b.heightCoef}else b.autoSpeedFactor=0;c=a*b.movementSpeed,(b.moveForward||b.autoForward&&!b.moveBackward)&&b.object.translateZ(-(c+b.autoSpeedFactor)),b.moveBackward&&b.object.translateZ(c),b.moveLeft&&b.object.translateX(-c),b.moveRight&&b.object.translateX(c),b.moveUp&&b.object.translateY(c),b.moveDown&&b.object.translateY(-c);var f=a*b.lookSpeed;b.activeLook||(f=0),b.lon+=b.mouseX*f,b.lookVertical&&(b.lat-=b.mouseY*f),b.lat=Math.max(-85,Math.min(85,b.lat)),b.phi=(90-b.lat)*Math.PI/180,b.theta=b.lon*Math.PI/180;var g=b.target,h=b.object.position;g.x=h.x+100*Math.sin(b.phi)*Math.cos(b.theta),g.y=h.y+100*Math.cos(b.phi),g.z=h.z+100*Math.sin(b.phi)*Math.sin(b.theta);var i=1;b.constrainVertical&&(i=Math.PI/(b.verticalMax-b.verticalMin)),b.lon+=b.mouseX*f,b.lookVertical&&(b.lat-=b.mouseY*f*i),b.lat=Math.max(-85,Math.min(85,b.lat)),b.phi=(90-b.lat)*Math.PI/180,b.theta=b.lon*Math.PI/180,b.constrainVertical&&(b.phi=THREE.Math.mapLinear(b.phi,0,Math.PI,b.verticalMin,b.verticalMax));var g=b.target,h=b.object.position;g.x=h.x+100*Math.sin(b.phi)*Math.cos(b.theta),g.y=h.y+100*Math.cos(b.phi),g.z=h.z+100*Math.sin(b.phi)*Math.sin(b.theta),b.object.lookAt(g)},c.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1),c.domElement.addEventListener("mousemove",d(c,c.onMouseMove),!1),c.domElement.addEventListener("mousedown",d(c,c.onMouseDown),!1),c.domElement.addEventListener("mouseup",d(c,c.onMouseUp),!1),c.domElement.addEventListener("keydown",d(c,c.onKeyDown),!1),c.domElement.addEventListener("keyup",d(c,c.onKeyUp),!1)},THREE.PathControls=function(a,b){function f(a){var b=a%d;return b>=0?b:b+d}function g(a,b){var c=a[0]-b[0],d=a[1]-b[1],e=a[2]-b[2];return Math.sqrt(c*c+d*d+e*e)}function h(a){return(a*=2)<1?.5*a*a:-0.5*(--a*(a-2)-1)}function i(a,b){return function(){b.apply(a,arguments)}}function j(a,b,c,d){var e={name:c,fps:.6,length:d,hierarchy:[]},f,g,h=b.getControlPointsArray(),i=b.getLength(),j=h.length,k=0,l=0,m=j-1;g={parent:-1,keys:[]},g.keys[l]={time:0,pos:h[l],rot:[0,0,0,1],scl:[1,1,1]},g.keys[m]={time:d,pos:h[m],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<j-1;f++)k=d*i.chunks[f]/i.total,g.keys[f]={time:k,pos:h[f]};return e.hierarchy[0]=g,THREE.AnimationHandler.add(e),new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function k(a,b){var c,d,e,f=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),e=a.getPoint(d),f.vertices[c]=new THREE.Vector3(e.x,e.y,e.z);return f}function l(a,b){var c=k(b,10),d=k(b,10),e=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),f=new THREE.Line(c,e),g=new THREE.ParticleSystem(d,new THREE.ParticleBasicMaterial({color:16755200,size:3}));f.scale.set(1,1,1),a.add(f),g.scale.set(1,1,1),a.add(g);var h,i=new THREE.SphereGeometry(1,16,8),j=new THREE.MeshBasicMaterial({color:65280});for(var l=0;l<b.points.length;l++)h=new THREE.Mesh(i,j),h.position.copy(b.points[l]),a.add(h)}var c=this;c.object=a,c.domElement=b!==undefined?b:document,c.id="PathControls"+THREE.PathControlsIdCounter++,c.duration=1e4,c.waypoints=[],c.useConstantSpeed=!0,c.resamplingCoef=50,c.debugPath=new THREE.Object3D,c.debugDummy=new THREE.Object3D,c.animationParent=new THREE.Object3D,c.lookSpeed=.005,c.lookVertical=!0,c.lookHorizontal=!0,c.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]},c.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]},c.target=new THREE.Object3D,c.mouseX=0,c.mouseY=0,c.lat=0,c.lon=0,c.phi=0,c.theta=0,c.domElement===document?(c.viewHalfX=window.innerWidth/2,c.viewHalfY=window.innerHeight/2):(c.viewHalfX=c.domElement.offsetWidth/2,c.viewHalfY=c.domElement.offsetHeight/2,c.domElement.setAttribute("tabindex",-1));var d=Math.PI*2,e=Math.PI/180;c.update=function(a){var b=this,c,d;b.lookHorizontal&&(b.lon+=b.mouseX*b.lookSpeed*a),b.lookVertical&&(b.lat-=b.mouseY*b.lookSpeed*a),b.lon=Math.max(0,Math.min(360,b.lon)),b.lat=Math.max(-85,Math.min(85,b.lat)),b.phi=(90-b.lat)*e,b.theta=b.lon*e,b.phi=f(b.phi),c=b.verticalAngleMap.srcRange,d=b.verticalAngleMap.dstRange;var g=THREE.Math.mapLinear(b.phi,c[0],c[1],d[0],d[1]),i=d[1]-d[0],j=(g-d[0])/i;b.phi=h(j)*i+d[0],c=b.horizontalAngleMap.srcRange,d=b.horizontalAngleMap.dstRange;var k=THREE.Math.mapLinear(b.theta,c[0],c[1],d[0],d[1]),l=d[1]-d[0],m=(k-d[0])/l;b.theta=h(m)*l+d[0];var n=b.target.position,o=b.object.position;n.x=100*Math.sin(b.phi)*Math.cos(b.theta),n.y=100*Math.cos(b.phi),n.z=100*Math.sin(b.phi)*Math.sin(b.theta),b.object.lookAt(b.target.position)},c.onMouseMove=function(a){var b=this;b.domElement===document?(b.mouseX=a.pageX-b.viewHalfX,b.mouseY=a.pageY-b.viewHalfY):(b.mouseX=a.pageX-b.domElement.offsetLeft-b.viewHalfX,b.mouseY=a.pageY-b.domElement.offsetTop-b.viewHalfY)};c.init=function(){var a=this;a.spline=new THREE.Spline,a.spline.initFromArray(a.waypoints),a.useConstantSpeed&&a.spline.reparametrizeByArcLength(a.resamplingCoef);if(a.createDebugDummy){var b=new THREE.MeshLambertMaterial({color:30719}),c=new THREE.MeshLambertMaterial({color:65280}),d=new THREE.CubeGeometry(10,10,20),e=new THREE.CubeGeometry(2,2,10);a.animationParent=new THREE.Mesh(d,b);var f=new THREE.Mesh(e,c);f.position.set(0,10,0),a.animation=j(a.animationParent,a.spline,a.id,a.duration),a.animationParent.add(a.object),a.animationParent.add(a.target),a.animationParent.add(f)}else a.animation=j(a.animationParent,a.spline,a.id,a.duration),a.animationParent.add(a.target),a.animationParent.add(a.object);a.createDebugPath&&l(a.debugPath,a.spline),a.domElement.addEventListener("mousemove",i(a,a.onMouseMove),!1)}},THREE.PathControlsIdCounter=0,THREE.FlyControls=function(a,b){function d(a,b){return function(){b.apply(a,arguments)}}var c=this;c.object=a,c.domElement=b!==undefined?b:document,b&&c.domElement.setAttribute("tabindex",-1),c.movementSpeed=1,c.rollSpeed=.005,c.dragToLook=!1,c.autoForward=!1,c.object.useQuaternion=!0,c.tmpQuaternion=new THREE.Quaternion,c.mouseStatus=0,c.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0},c.moveVector=new THREE.Vector3(0,0,0),c.rotationVector=new THREE.Vector3(0,0,0),c.handleEvent=function(a){typeof this[a.type]=="function"&&this[a.type](a)},c.keydown=function(a){var b=this;if(a.altKey)return;switch(a.keyCode){case 16:b.movementSpeedMultiplier=.1;break;case 87:b.moveState.forward=1;break;case 83:b.moveState.back=1;break;case 65:b.moveState.left=1;break;case 68:b.moveState.right=1;break;case 82:b.moveState.up=1;break;case 70:b.moveState.down=1;break;case 38:b.moveState.pitchUp=1;break;case 40:b.moveState.pitchDown=1;break;case 37:b.moveState.yawLeft=1;break;case 39:b.moveState.yawRight=1;break;case 81:b.moveState.rollLeft=1;break;case 69:b.moveState.rollRight=1}b.updateMovementVector(),b.updateRotationVector()},c.keyup=function(a){var b=this;switch(a.keyCode){case 16:b.movementSpeedMultiplier=1;break;case 87:b.moveState.forward=0;break;case 83:b.moveState.back=0;break;case 65:b.moveState.left=0;break;case 68:b.moveState.right=0;break;case 82:b.moveState.up=0;break;case 70:b.moveState.down=0;break;case 38:b.moveState.pitchUp=0;break;case 40:b.moveState.pitchDown=0;break;case 37:b.moveState.yawLeft=0;break;case 39:b.moveState.yawRight=0;break;case 81:b.moveState.rollLeft=0;break;case 69:b.moveState.rollRight=0}b.updateMovementVector(),b.updateRotationVector()},c.mousedown=function(a){var b=this;b.domElement!==document&&b.domElement.focus(),a.preventDefault(),a.stopPropagation();if(b.dragToLook)b.mouseStatus++;else switch(a.button){case 0:b.object.moveForward=!0;break;case 2:b.object.moveBackward=!0}},c.mousemove=function(a){var b=this;if(!b.dragToLook||b.mouseStatus>0){var c=b.getContainerDimensions(),d=c.size[0]/2,e=c.size[1]/2;b.moveState.yawLeft=-(a.pageX-c.offset[0]-d)/d,b.moveState.pitchDown=(a.pageY-c.offset[1]-e)/e,b.updateRotationVector()}},c.mouseup=function(a){var b=this;a.preventDefault(),a.stopPropagation();if(b.dragToLook)b.mouseStatus--,b.moveState.yawLeft=b.moveState.pitchDown=0;else switch(a.button){case 0:b.moveForward=!1;break;case 2:b.moveBackward=!1}b.updateRotationVector()},c.update=function(a){var b=this,c=a*b.movementSpeed,d=a*b.rollSpeed;b.object.translateX(b.moveVector.x*c),b.object.translateY(b.moveVector.y*c),b.object.translateZ(b.moveVector.z*c),b.tmpQuaternion.set(b.rotationVector.x*d,b.rotationVector.y*d,b.rotationVector.z*d,1).normalize(),b.object.quaternion.multiplySelf(b.tmpQuaternion),b.object.matrix.setPosition(b.object.position),b.object.matrix.setRotationFromQuaternion(b.object.quaternion),b.object.matrixWorldNeedsUpdate=!0},c.updateMovementVector=function(){var a=this,b=a.moveState.forward||a.autoForward&&!a.moveState.back?1:0;a.moveVector.x=-a.moveState.left+a.moveState.right,a.moveVector.y=-a.moveState.down+a.moveState.up,a.moveVector.z=-b+a.moveState.back},c.updateRotationVector=function(){var a=this;a.rotationVector.x=-a.moveState.pitchDown+a.moveState.pitchUp,a.rotationVector.y=-a.moveState.yawRight+a.moveState.yawLeft,a.rotationVector.z=-a.moveState.rollRight+a.moveState.rollLeft},c.getContainerDimensions=function(){var a=this;return a.domElement!=document?{size:[a.domElement.offsetWidth,a.domElement.offsetHeight],offset:[a.domElement.offsetLeft,a.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};c.domElement.addEventListener("mousemove",d(c,c.mousemove),!1),c.domElement.addEventListener("mousedown",d(c,c.mousedown),!1),c.domElement.addEventListener("mouseup",d(c,c.mouseup),!1),c.domElement.addEventListener("keydown",d(c,c.keydown),!1),c.domElement.addEventListener("keyup",d(c,c.keyup),!1),c.updateMovementVector(),c.updateRotationVector()},THREE.RollControls=function(a,b){function q(a){switch(a.keyCode){case 38:case 87:j=1;break;case 37:case 65:k=-1;break;case 40:case 83:j=-1;break;case 39:case 68:k=1;break;case 81:h=!0,i=1;break;case 69:h=!0,i=-1;break;case 82:l=1;break;case 70:l=-1}}function r(a){switch(a.keyCode){case 38:case 87:j=0;break;case 37:case 65:k=0;break;case 40:case 83:j=0;break;case 39:case 68:k=0;break;case 81:h=!1;break;case 69:h=!1;break;case 82:l=0;break;case 70:l=0}}function s(a){m=(a.clientX-o)/window.innerWidth,n=(a.clientY-p)/window.innerHeight}function t(a){a.preventDefault(),a.stopPropagation();switch(a.button){case 0:j=1;break;case 2:j=-1}}function u(a){a.preventDefault(),a.stopPropagation();switch(a.button){case 0:j=0;break;case 2:j=0}}var c=this;c.object=a,c.domElement=b!==undefined?b:document,c.mouseLook=!0,c.autoForward=!1,c.lookSpeed=1,c.movementSpeed=1,c.rollSpeed=1,c.constrainVertical=[-0.9,.9],c.object.matrixAutoUpdate=!1,c.forward=new THREE.Vector3(0,0,1),c.roll=0;var d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3,g=new THREE.Matrix4,h=!1,i=1,j=0,k=0,l=0,m=0,n=0,o=window.innerWidth/2,p=window.innerHeight/2;c.update=function(a){var b=this;if(b.mouseLook){var c=a*b.lookSpeed;b.rotateHorizontally(c*m),b.rotateVertically(c*n)}var o=a*b.movementSpeed,p=j>0||b.autoForward&&!(j<0)?1:j;b.object.translateZ(-o*p),b.object.translateX(o*k),b.object.translateY(o*l),h&&(b.roll+=b.rollSpeed*a*i),b.forward.y>b.constrainVertical[1]?(b.forward.y=b.constrainVertical[1],b.forward.normalize()):b.forward.y<b.constrainVertical[0]&&(b.forward.y=b.constrainVertical[0],b.forward.normalize()),f.copy(b.forward),e.set(0,1,0),d.cross(e,f).normalize(),e.cross(f,d).normalize(),b.object.matrix.elements[0]=d.x,b.object.matrix.elements[4]=e.x,b.object.matrix.elements[8]=f.x,b.object.matrix.elements[1]=d.y,b.object.matrix.elements[5]=e.y,b.object.matrix.elements[9]=f.y,b.object.matrix.elements[2]=d.z,b.object.matrix.elements[6]=e.z,b.object.matrix.elements[10]=f.z,g.identity(),g.elements[0]=Math.cos(b.roll),g.elements[4]=-Math.sin(b.roll),g.elements[1]=Math.sin(b.roll),g.elements[5]=Math.cos(b.roll),b.object.matrix.multiplySelf(g),b.object.matrixWorldNeedsUpdate=!0,b.object.matrix.elements[12]=b.object.position.x,b.object.matrix.elements[13]=b.object.position.y,b.object.matrix.elements[14]=b.object.position.z},c.translateX=function(a){var b=this;b.object.position.x+=b.object.matrix.elements[0]*a,b.object.position.y+=b.object.matrix.elements[1]*a,b.object.position.z+=b.object.matrix.elements[2]*a},c.translateY=function(a){var b=this;b.object.position.x+=b.object.matrix.elements[4]*a,b.object.position.y+=b.object.matrix.elements[5]*a,b.object.position.z+=b.object.matrix.elements[6]*a},c.translateZ=function(a){var b=this;b.object.position.x-=b.object.matrix.elements[8]*a,b.object.position.y-=b.object.matrix.elements[9]*a,b.object.position.z-=b.object.matrix.elements[10]*a},c.rotateHorizontally=function(a){var b=this;d.set(b.object.matrix.elements[0],b.object.matrix.elements[1],b.object.matrix.elements[2]),d.multiplyScalar(a),b.forward.subSelf(d),b.forward.normalize()},c.rotateVertically=function(a){var b=this;e.set(b.object.matrix.elements[4],b.object.matrix.elements[5],b.object.matrix.elements[6]),e.multiplyScalar(a),b.forward.addSelf(e),b.forward.normalize()};c.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1),c.domElement.addEventListener("mousemove",s,!1),c.domElement.addEventListener("mousedown",t,!1),c.domElement.addEventListener("mouseup",u,!1),c.domElement.addEventListener("keydown",q,!1),c.domElement.addEventListener("keyup",r,!1)},THREE.TrackballControls=function(a,b){function q(a){if(!d.enabled)return;if(h!==e.NONE)return;a.keyCode===d.keys[e.ROTATE]&&!d.noRotate?h=e.ROTATE:a.keyCode===d.keys[e.ZOOM]&&!d.noZoom?h=e.ZOOM:a.keyCode===d.keys[e.PAN]&&!d.noPan&&(h=e.PAN),h!==e.NONE&&(g=!0)}function r(a){if(!d.enabled)return;h!==e.NONE&&(h=e.NONE)}function s(a){if(!d.enabled)return;a.preventDefault(),a.stopPropagation(),h===e.NONE&&(h=a.button,h===e.ROTATE&&!d.noRotate?j=k=d.getMouseProjectionOnBall(a.clientX,a.clientY):h===e.ZOOM&&!d.noZoom?l=m=d.getMouseOnScreen(a.clientX,a.clientY):this.noPan||(n=o=d.getMouseOnScreen(a.clientX,a.clientY)))}function t(a){if(!d.enabled)return;g&&(j=k=d.getMouseProjectionOnBall(a.clientX,a.clientY),l=m=d.getMouseOnScreen(a.clientX,a.clientY),n=o=d.getMouseOnScreen(a.clientX,a.clientY),g=!1);if(h===e.NONE)return;h===e.ROTATE&&!d.noRotate?k=d.getMouseProjectionOnBall(a.clientX,a.clientY):h===e.ZOOM&&!d.noZoom?m=d.getMouseOnScreen(a.clientX,a.clientY):h===e.PAN&&!d.noPan&&(o=d.getMouseOnScreen(a.clientX,a.clientY))}function u(a){if(!d.enabled)return;a.preventDefault(),a.stopPropagation(),h=e.NONE}var c=this;THREE.EventTarget.call(c);var d=c,e={NONE:-1,ROTATE:0,ZOOM:1,PAN:2};c.object=a,c.domElement=b!==undefined?b:document,c.enabled=!0,c.screen={width:window.innerWidth,height:window.innerHeight,offsetLeft:0,offsetTop:0},c.radius=(c.screen.width+c.screen.height)/4,c.rotateSpeed=1,c.zoomSpeed=1.2,c.panSpeed=.3,c.noRotate=!1,c.noZoom=!1,c.noPan=!1,c.staticMoving=!1,c.dynamicDampingFactor=.2,c.minDistance=0,c.maxDistance=Infinity,c.keys=[65,83,68],c.target=new THREE.Vector3;var f=new THREE.Vector3,g=!1,h=e.NONE,i=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector2,m=new THREE.Vector2,n=new THREE.Vector2,o=new THREE.Vector2,p={type:"change"};c.handleEvent=function(a){typeof this[a.type]=="function"&&this[a.type](a)},c.getMouseOnScreen=function(a,b){return new THREE.Vector2((a-d.screen.offsetLeft)/d.radius*.5,(b-d.screen.offsetTop)/d.radius*.5)},c.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-d.screen.width*.5-d.screen.offsetLeft)/d.radius,(d.screen.height*.5+d.screen.offsetTop-b)/d.radius,0),e=c.length();e>1?c.normalize():c.z=Math.sqrt(1-e*e),i.copy(d.object.position).subSelf(d.target);var f=d.object.up.clone().setLength(c.y);return f.addSelf(d.object.up.clone().crossSelf(i).setLength(c.x)),f.addSelf(i.setLength(c.z)),f},c.rotateCamera=function(){var a=Math.acos(j.dot(k)/j.length()/k.length());if(a){var b=(new THREE.Vector3).cross(j,k).normalize(),c=new THREE.Quaternion;a*=d.rotateSpeed,c.setFromAxisAngle(b,-a),c.multiplyVector3(i),c.multiplyVector3(d.object.up),c.multiplyVector3(k),d.staticMoving?j=k:(c.setFromAxisAngle(b,a*(d.dynamicDampingFactor-1)),c.multiplyVector3(j))}},c.zoomCamera=function(){var a=1+(m.y-l.y)*d.zoomSpeed;a!==1&&a>0&&(i.multiplyScalar(a),d.staticMoving?l=m:l.y+=(m.y-l.y)*this.dynamicDampingFactor)},c.panCamera=function(){var a=o.clone().subSelf(n);if(a.lengthSq()){a.multiplyScalar(i.length()*d.panSpeed);var b=i.clone().crossSelf(d.object.up).setLength(a.x);b.addSelf(d.object.up.clone().setLength(a.y)),d.object.position.addSelf(b),d.target.addSelf(b),d.staticMoving?n=o:n.addSelf(a.sub(o,n).multiplyScalar(d.dynamicDampingFactor))}},c.checkDistances=function(){if(!d.noZoom||!d.noPan)d.object.position.lengthSq()>d.maxDistance*d.maxDistance&&d.object.position.setLength(d.maxDistance),i.lengthSq()<d.minDistance*d.minDistance&&d.object.position.add(d.target,i.setLength(d.minDistance))},c.update=function(){i.copy(d.object.position).subSelf(d.target),d.noRotate||d.rotateCamera(),d.noZoom||d.zoomCamera(),d.noPan||d.panCamera(),d.object.position.add(d.target,i),d.checkDistances(),d.object.lookAt(d.target),f.distanceTo(d.object.position)>0&&(d.dispatchEvent(p),f.copy(d.object.position))};c.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1),c.domElement.addEventListener("mousemove",t,!1),c.domElement.addEventListener("mousedown",s,!1),c.domElement.addEventListener("mouseup",u,!1),window.addEventListener("keydown",q,!1),window.addEventListener("keyup",r,!1)},THREE.CubeGeometry=function(a,b,c,d,e,f,g,h){function v(a,b,c,g,h,i,k,l){var m,n,o,p=d||1,q=e||1,r=h/2,s=i/2,t=j.vertices.length;if(a==="x"&&b==="y"||a==="y"&&b==="x")m="z";else if(a==="x"&&b==="z"||a==="z"&&b==="x")m="y",q=f||1;else if(a==="z"&&b==="y"||a==="y"&&b==="z")m="x",p=f||1;var u=p+1,v=q+1,w=h/p,x=i/q,y=new THREE.Vector3;y[m]=k>0?1:-1;for(o=0;o<v;o++)for(n=0;n<u;n++){var z=new THREE.Vector3;z[a]=(n*w-r)*c,z[b]=(o*x-s)*g,z[m]=k,j.vertices.push(z)}for(o=0;o<q;o++)for(n=0;n<p;n++){var A=n+u*o,B=n+u*(o+1),C=n+1+u*(o+1),D=n+1+u*o,E=new THREE.Face4(A+t,B+t,C+t,D+t);E.normal.copy(y),E.vertexNormals.push(y.clone(),y.clone(),y.clone(),y.clone()),E.materialIndex=l,j.faces.push(E),j.faceVertexUvs[0].push([new THREE.UV(n/p,o/q),new THREE.UV(n/p,(o+1)/q),new THREE.UV((n+1)/p,(o+1)/q),new THREE.UV((n+1)/p,o/q)])}}var i=this;THREE.Geometry.call(i);var j=i,k=a/2,l=b/2,m=c/2,n,o,p,q,r,s;if(g!==undefined){if(g instanceof Array)i.materials=g;else{i.materials=[];for(var t=0;t<6;t++)i.materials.push(g)}n=0,q=1,o=2,r=3,p=4,s=5}else i.materials=[];i.sides={px:!0,nx:!0,py:!0,ny:!0,pz:!0,nz:!0};if(h!=undefined)for(var u in h)i.sides[u]!==undefined&&(i.sides[u]=h[u]);i.sides.px&&v("z","y",-1,-1,c,b,k,n),i.sides.nx&&v("z","y",1,-1,c,b,-k,q),i.sides.py&&v("x","z",1,1,a,c,l,o),i.sides.ny&&v("x","z",1,-1,a,c,-l,r),i.sides.pz&&v("x","y",1,-1,a,b,m,p),i.sides.nz&&v("x","y",-1,-1,a,b,-m,s);i.computeCentroids(),i.mergeVertices()},THREE.CubeGeometry.prototype=new THREE.Geometry,THREE.CubeGeometry.prototype.constructor=THREE.CubeGeometry,THREE.CylinderGeometry=function(a,b,c,d,e,f){var g=this;THREE.Geometry.call(g),a=a!==undefined?a:20,b=b!==undefined?b:20,c=c!==undefined?c:100;var h=c/2,i=d||8,j=e||1,k,l,m=[],n=[];for(l=0;l<=j;l++){var o=[],p=[],q=l/j,r=q*(b-a)+a;for(k=0;k<=i;k++){var s=k/i,t=new THREE.Vector3;t.x=r*Math.sin(s*Math.PI*2),t.y=-q*c+h,t.z=r*Math.cos(s*Math.PI*2),g.vertices.push(t),o.push(g.vertices.length-1),p.push(new THREE.UV(s,q))}m.push(o),n.push(p)}var u=(b-a)/c,v,w;for(k=0;k<i;k++){a!==0?(v=g.vertices[m[0][k]].clone(),w=g.vertices[m[0][k+1]].clone()):(v=g.vertices[m[1][k]].clone(),w=g.vertices[m[1][k+1]].clone()),v.setY(Math.sqrt(v.x*v.x+v.z*v.z)*u).normalize(),w.setY(Math.sqrt(w.x*w.x+w.z*w.z)*u).normalize();for(l=0;l<j;l++){var x=m[l][k],y=m[l+1][k],z=m[l+1][k+1],A=m[l][k+1],B=v.clone(),C=v.clone(),D=w.clone(),E=w.clone(),F=n[l][k].clone(),G=n[l+1][k].clone(),H=n[l+1][k+1].clone(),I=n[l][k+1].clone();g.faces.push(new THREE.Face4(x,y,z,A,[B,C,D,E])),g.faceVertexUvs[0].push([F,G,H,I])}}if(!f&&a>0){g.vertices.push(new THREE.Vector3(0,h,0));for(k=0;k<i;k++){var x=m[0][k],y=m[0][k+1],z=g.vertices.length-1,B=new THREE.Vector3(0,1,0),C=new THREE.Vector3(0,1,0),D=new THREE.Vector3(0,1,0),F=n[0][k].clone(),G=n[0][k+1].clone(),H=new THREE.UV(G.u,0);g.faces.push(new THREE.Face3(x,y,z,[B,C,D])),g.faceVertexUvs[0].push([F,G,H])}}if(!f&&b>0){g.vertices.push(new THREE.Vector3(0,-h,0));for(k=0;k<i;k++){var x=m[l][k+1],y=m[l][k],z=g.vertices.length-1,B=new THREE.Vector3(0,-1,0),C=new THREE.Vector3(0,-1,0),D=new THREE.Vector3(0,-1,0),F=n[l][k+1].clone(),G=n[l][k].clone(),H=new THREE.UV(G.u,1);g.faces.push(new THREE.Face3(x,y,z,[B,C,D])),g.faceVertexUvs[0].push([F,G,H])}}g.computeCentroids(),g.computeFaceNormals()},THREE.CylinderGeometry.prototype=new THREE.Geometry,THREE.CylinderGeometry.prototype.constructor=THREE.CylinderGeometry,THREE.ExtrudeGeometry=function(a,b){var c=this;if(typeof a=="undefined"){a=[];return}THREE.Geometry.call(c),a=a instanceof Array?a:[a],c.shapebb=a[a.length-1].getBoundingBox(),c.addShapeList(a,b),c.computeCentroids(),c.computeFaceNormals()},THREE.ExtrudeGeometry.prototype=new THREE.Geometry,THREE.ExtrudeGeometry.prototype.constructor=THREE.ExtrudeGeometry,THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){var c=a.length;for(var d=0;d<c;d++){var e=a[d];this.addShape(e,b)}},THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function G(a,b,c){return b||console.log("die"),b.clone().multiplyScalar(c).addSelf(a)}function R(a,b,c){return T(a,b,c)}function S(a,b,c){var d=Math.atan2(b.y-a.y,b.x-a.x),e=Math.atan2(c.y-a.y,c.x-a.x);d>e&&(e+=Math.PI*2);var f=(d+e)/2,g=-Math.cos(f),h=-Math.sin(f),i=new THREE.Vector2(g,h);return i}function T(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,h=THREE.ExtrudeGeometry.__v5,i=THREE.ExtrudeGeometry.__v6,j,k,l,m,n,o;return d.set(a.x-b.x,a.y-b.y),e.set(a.x-c.x,a.y-c.y),j=d.normalize(),k=e.normalize(),f.set(-j.y,j.x),g.set(k.y,-k.x),h.copy(a).addSelf(f),i.copy(a).addSelf(g),h.equals(i)?g.clone():(h.copy(b).addSelf(f),i.copy(c).addSelf(g),l=j.dot(g),m=i.subSelf(h).dot(g),l===0&&(console.log("Either infinite or no solutions!"),m===0?console.log("Its finite solutions."):console.log("Too bad, no solutions.")),n=m/l,n<0?S(a,b,c):(o=j.multiplyScalar(n).addSelf(h),o.subSelf(a).clone()))}function fb(){if(g){var a=0,b=M*a;for(V=0;V<O;V++)N=E[V],jb(N[2]+b,N[1]+b,N[0]+b,!0);a=i+f*2,b=M*a;for(V=0;V<O;V++)N=E[V],jb(N[0]+b,N[1]+b,N[2]+b,!1)}else{for(V=0;V<O;V++)N=E[V],jb(N[2],N[1],N[0],!0);for(V=0;V<O;V++)N=E[V],jb(N[0]+M*i,N[1]+M*i,N[2]+M*i,!1)}}function gb(){var a=0;hb(F,a),a+=F.length;for(v=0,w=C.length;v<w;v++)u=C[v],hb(u,a),a+=u.length}function hb(a,b){var c,d;V=a.length;while(--V>=0){c=V,d=V-1,d<0&&(d=a.length-1);var e=0,g=i+f*2;for(e=0;e<g;e++){var h=M*e,j=M*(e+1),k=b+c+h,l=b+d+h,m=b+d+j,n=b+c+j;kb(k,l,m,n,a,e,g)}}}function ib(a,b,c){x.vertices.push(new THREE.Vector3(a,b,c))}function jb(c,d,e,f){c+=z,d+=z,e+=z,x.faces.push(new THREE.Face3(c,d,e,null,null,n));var g=f?eb.generateBottomUV(x,a,b,c,d,e):eb.generateTopUV(x,a,b,c,d,e);x.faceVertexUvs[0].push(g)}function kb(c,d,e,f,g,h,i){c+=z,d+=z,e+=z,f+=z,x.faces.push(new THREE.Face4(c,d,e,f,null,null,o));var j=eb.generateSideWallUV(x,a,g,b,c,d,e,f,h,i);x.faceVertexUvs[0].push(j)}var c=b.amount!==undefined?b.amount:100,d=b.bevelThickness!==undefined?b.bevelThickness:6,e=b.bevelSize!==undefined?b.bevelSize:d-2,f=b.bevelSegments!==undefined?b.bevelSegments:3,g=b.bevelEnabled!==undefined?b.bevelEnabled:!0,h=b.curveSegments!==undefined?b.curveSegments:12,i=b.steps!==undefined?b.steps:1,j=b.bendPath,k=b.extrudePath,l,m=!1,n=b.material,o=b.extrudeMaterial,p=this.shapebb,q,r,s,t;k&&(l=k.getSpacedPoints(i),m=!0,g=!1,q=new THREE.TubeGeometry.FrenetFrames(k,i,!1),r=new THREE.Vector3,s=new THREE.Vector3,t=new THREE.Vector3),g||(f=0,d=0,e=0);var u,v,w,x=this,y=[],z=this.vertices.length;j&&a.addWrapPath(j);var A=a.extractPoints(),B=A.shape,C=A.holes,D=!THREE.Shape.Utils.isClockWise(B);if(D){B=B.reverse();for(v=0,w=C.length;v<w;v++)u=C[v],THREE.Shape.Utils.isClockWise(u)&&(C[v]=u.reverse());D=!1}var E=THREE.Shape.Utils.triangulateShape(B,C),F=B;for(v=0,w=C.length;v<w;v++)u=C[v],B=B.concat(u);var H,I,J,K,L,M=B.length,N,O=E.length,P=F.length,Q=180/Math.PI;var U=[];for(var V=0,W=F.length,X=W-1,Y=V+1;V<W;V++,X++,Y++){X===W&&(X=0),Y===W&&(Y=0);var Z=F[V],$=F[X],_=F[Y];U[V]=R(F[V],F[X],F[Y])}var ab=[],bb,cb=U.concat();for(v=0,w=C.length;v<w;v++){u=C[v],bb=[];for(V=0,W=u.length,X=W-1,Y=V+1;V<W;V++,X++,Y++)X===W&&(X=0),Y===W&&(Y=0),bb[V]=R(u[V],u[X],u[Y]);ab.push(bb),cb=cb.concat(bb)}for(H=0;H<f;H++){J=H/f,K=d*(1-J),I=e*Math.sin(J*Math.PI/2);for(V=0,W=F.length;V<W;V++)L=G(F[V],U[V],I),ib(L.x,L.y,-K);for(v=0,w=C.length;v<w;v++){u=C[v],bb=ab[v];for(V=0,W=u.length;V<W;V++)L=G(u[V],bb[V],I),ib(L.x,L.y,-K)}}I=e;for(V=0;V<M;V++)L=g?G(B[V],cb[V],I):B[V],m?(s.copy(q.normals[0]).multiplyScalar(L.x),r.copy(q.binormals[0]).multiplyScalar(L.y),t.copy(l[0]).addSelf(s).addSelf(r),ib(t.x,t.y,t.z)):ib(L.x,L.y,0);var db;for(db=1;db<=i;db++)for(V=0;V<M;V++)L=g?G(B[V],cb[V],I):B[V],m?(s.copy(q.normals[db]).multiplyScalar(L.x),r.copy(q.binormals[db]).multiplyScalar(L.y),t.copy(l[db]).addSelf(s).addSelf(r),ib(t.x,t.y,t.z)):ib(L.x,L.y,c/i*db);for(H=f-1;H>=0;H--){J=H/f,K=d*(1-J),I=e*Math.sin(J*Math.PI/2);for(V=0,W=F.length;V<W;V++)L=G(F[V],U[V],I),ib(L.x,L.y,c+K);for(v=0,w=C.length;v<w;v++){u=C[v],bb=ab[v];for(V=0,W=u.length;V<W;V++)L=G(u[V],bb[V],I),m?ib(L.x,L.y+l[i-1].y,l[i-1].x+K):ib(L.x,L.y,c+K)}}var eb=THREE.ExtrudeGeometry.WorldUVGenerator;fb(),gb()},THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,f){var g=a.vertices[d].x,h=a.vertices[d].y,i=a.vertices[e].x,j=a.vertices[e].y,k=a.vertices[f].x,l=a.vertices[f].y;return[new THREE.UV(g,1-h),new THREE.UV(i,1-j),new THREE.UV(k,1-l)]},generateBottomUV:function(a,b,c,d,e,f){return this.generateTopUV(a,b,c,d,e,f)},generateSideWallUV:function(a,b,c,d,e,f,g,h,i,j){var k=a.vertices[e].x,l=a.vertices[e].y,m=a.vertices[e].z,n=a.vertices[f].x,o=a.vertices[f].y,p=a.vertices[f].z,q=a.vertices[g].x,r=a.vertices[g].y,s=a.vertices[g].z,t=a.vertices[h].x,u=a.vertices[h].y,v=a.vertices[h].z;return Math.abs(l-o)<.01?[new THREE.UV(k,m),new THREE.UV(n,p),new THREE.UV(q,s),new THREE.UV(t,v)]:[new THREE.UV(l,m),new THREE.UV(o,p),new THREE.UV(r,s),new THREE.UV(u,v)]}},THREE.ExtrudeGeometry.__v1=new THREE.Vector2,THREE.ExtrudeGeometry.__v2=new THREE.Vector2,THREE.ExtrudeGeometry.__v3=new THREE.Vector2,THREE.ExtrudeGeometry.__v4=new THREE.Vector2,THREE.ExtrudeGeometry.__v5=new THREE.Vector2,THREE.ExtrudeGeometry.__v6=new THREE.Vector2,THREE.LatheGeometry=function(a,b,c){var d=this;THREE.Geometry.call(d);var e=b||12,f=c||2*Math.PI,g=[],h=(new THREE.Matrix4).makeRotationZ(f/e);for(var i=0;i<a.length;i++)g[i]=a[i].clone(),d.vertices.push(g[i]);var j,k=e+1;for(j=0;j<k;j++)for(var i=0;i<g.length;i++)g[i]=h.multiplyVector3(g[i].clone()),d.vertices.push(g[i]);for(j=0;j<e;j++)for(var l=0,m=a.length;l<m-1;l++){var n=j*m+l,o=(j+1)%k*m+l,p=(j+1)%k*m+(l+1)%m,q=j*m+(l+1)%m;d.faces.push(new THREE.Face4(n,o,p,q)),d.faceVertexUvs[0].push([new THREE.UV(1-j/e,l/m),new THREE.UV(1-(j+1)/e,l/m),new THREE.UV(1-(j+1)/e,(l+1)/m),new THREE.UV(1-j/e,(l+1)/m)])}d.computeCentroids(),d.computeFaceNormals(),d.computeVertexNormals()},THREE.LatheGeometry.prototype=new THREE.Geometry,THREE.LatheGeometry.prototype.constructor=THREE.LatheGeometry,THREE.PlaneGeometry=function(a,b,c,d){var e=this;THREE.Geometry.call(e);var f,g,h=a/2,i=b/2,j=c||1,k=d||1,l=j+1,m=k+1,n=a/j,o=b/k,p=new THREE.Vector3(0,1,0);for(g=0;g<m;g++)for(f=0;f<l;f++){var q=f*n-h,r=g*o-i;e.vertices.push(new THREE.Vector3(q,0,r))}for(g=0;g<k;g++)for(f=0;f<j;f++){var s=f+l*g,t=f+l*(g+1),u=f+1+l*(g+1),v=f+1+l*g,w=new THREE.Face4(s,t,u,v);w.normal.copy(p),w.vertexNormals.push(p.clone(),p.clone(),p.clone(),p.clone()),e.faces.push(w),e.faceVertexUvs[0].push([new THREE.UV(f/j,g/k),new THREE.UV(f/j,(g+1)/k),new THREE.UV((f+1)/j,(g+1)/k),new THREE.UV((f+1)/j,g/k)])}e.computeCentroids()},THREE.PlaneGeometry.prototype=new THREE.Geometry,THREE.PlaneGeometry.prototype.constructor=THREE.PlaneGeometry,THREE.SphereGeometry=function(a,b,c,d,e,f,g){var h=this;THREE.Geometry.call(h),a=a||50,d=d!==undefined?d:0,e=e!==undefined?e:Math.PI*2,f=f!==undefined?f:0,g=g!==undefined?g:Math.PI;var i=Math.max(3,Math.floor(b)||8),j=Math.max(2,Math.floor(c)||6),k,l,m=[],n=[];for(l=0;l<=j;l++){var o=[],p=[];for(k=0;k<=i;k++){var q=k/i,r=l/j,s=new THREE.Vector3;s.x=-a*Math.cos(d+q*e)*Math.sin(f+r*g),s.y=a*Math.cos(f+r*g),s.z=a*Math.sin(d+q*e)*Math.sin(f+r*g),h.vertices.push(s),o.push(h.vertices.length-1),p.push(new THREE.UV(q,r))}m.push(o),n.push(p)}for(l=0;l<j;l++)for(k=0;k<i;k++){var t=m[l][k+1],u=m[l][k],v=m[l+1][k],w=m[l+1][k+1],x=h.vertices[t].clone().normalize(),y=h.vertices[u].clone().normalize(),z=h.vertices[v].clone().normalize(),A=h.vertices[w].clone().normalize(),B=n[l][k+1].clone(),C=n[l][k].clone(),D=n[l+1][k].clone(),E=n[l+1][k+1].clone();Math.abs(h.vertices[t].y)==a?(h.faces.push(new THREE.Face3(t,v,w,[x,z,A])),h.faceVertexUvs[0].push([B,D,E])):Math.abs(h.vertices[v].y)==a?(h.faces.push(new THREE.Face3(t,u,v,[x,y,z])),h.faceVertexUvs[0].push([B,C,D])):(h.faces.push(new THREE.Face4(t,u,v,w,[x,y,z,A])),h.faceVertexUvs[0].push([B,C,D,E]))}h.computeCentroids(),h.computeFaceNormals(),h.boundingSphere={radius:a}},THREE.SphereGeometry.prototype=new THREE.Geometry,THREE.SphereGeometry.prototype.constructor=THREE.SphereGeometry,THREE.TextGeometry=function(a,b){var c=new THREE.TextPath(a,b),d=c.toShapes();b.amount=b.height!==undefined?b.height:50,b.bevelThickness===undefined&&(b.bevelThickness=10),b.bevelSize===undefined&&(b.bevelSize=8),b.bevelEnabled===undefined&&(b.bevelEnabled=!1);if(b.bend){var e=d[d.length-1].getBoundingBox(),f=e.maxX;b.bendPath=new THREE.QuadraticBezierCurve(new THREE.Vector2(0,0),new THREE.Vector2(f/2,120),new THREE.Vector2(f,0))}THREE.ExtrudeGeometry.call(this,d,b)},THREE.TextGeometry.prototype=new THREE.ExtrudeGeometry,THREE.TextGeometry.prototype.constructor=THREE.TextGeometry,THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){var a=this;return a.faces[a.face][a.weight][a.style]},loadFace:function(a){var b=a.familyName.toLowerCase(),c=this;c.faces[b]=c.faces[b]||{},c.faces[b][a.cssFontWeight]=c.faces[b][a.cssFontWeight]||{},c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;var d=c.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return a},drawText:function(a){var b=[],c=[],d,e=this.getFace(),f=this.size/e.resolution,g=0,h=String(a).split(""),i=h.length,j=[];for(d=0;d<i;d++){var k=new THREE.Path,l=this.extractGlyphPoints(h[d],e,f,g,k);g+=l.offset,j.push(l.path)}var m=g/2;return{paths:j,offset:m}},extractGlyphPoints:function(a,b,c,d,e){var f=[],g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,z=b.glyphs[a]||b.glyphs["?"];if(!z)return;if(z.o){j=z._cachedOutline||(z._cachedOutline=z.o.split(" ")),l=j.length,m=c,n=c;for(g=0;g<l;){k=j[g++];switch(k){case"m":o=j[g++]*m+d,p=j[g++]*n,f.push(new THREE.Vector2(o,p)),e.moveTo(o,p);break;case"l":o=j[g++]*m+d,p=j[g++]*n,f.push(new THREE.Vector2(o,p)),e.lineTo(o,p);break;case"q":q=j[g++]*m+d,r=j[g++]*n,u=j[g++]*m+d,v=j[g++]*n,e.quadraticCurveTo(u,v,q,r),y=f[f.length-1];if(y){s=y.x,t=y.y;for(h=1,i=this.divisions;h<=i;h++){var A=h/i,B=THREE.Shape.Utils.b2(A,s,u,q),C=THREE.Shape.Utils.b2(A,t,v,r);f.push(new THREE.Vector2(B,C))}}break;case"b":q=j[g++]*m+d,r=j[g++]*n,u=j[g++]*m+d,v=j[g++]*-n,w=j[g++]*m+d,x=j[g++]*-n,e.bezierCurveTo(q,r,u,v,w,x),y=f[f.length-1];if(y){s=y.x,t=y.y;for(h=1,i=this.divisions;h<=i;h++){var A=h/i,B=THREE.Shape.Utils.b3(A,s,u,w,q),C=THREE.Shape.Utils.b3(A,t,v,x,r);f.push(new THREE.Vector2(B,C))}}}}}return{offset:z.ha*c,points:f,path:e}}},function(a){var b=1e-10,c=function(a,b){var c=a.length;if(c<3)return null;var e=[],g=[],h=[],i,j,k;if(d(a)>0)for(j=0;j<c;j++)g[j]=j;else for(j=0;j<c;j++)g[j]=c-1-j;var l=c,m=2*l;for(j=l-1;l>2;){if(m--<=0)return console.log("Warning, unable to triangulate polygon!"),b?h:e;i=j,l<=i&&(i=0),j=i+1,l<=j&&(j=0),k=j+1,l<=k&&(k=0);if(f(a,i,j,k,l,g)){var n,o,p,q,r;n=g[i],o=g[j],p=g[k],e.push([a[n],a[o],a[p]]),h.push([g[i],g[j],g[k]]);for(q=j,r=j+1;r<l;q++,r++)g[q]=g[r];l--,m=2*l}}return b?h:e},d=function(a){var b=a.length,c=0;for(var d=b-1,e=0;e<b;d=e++)c+=a[d].x*a[e].y-a[e].x*a[d].y;return c*.5},e=function(a,b,c,d,e,f,g,h){var i,j,k,l,m,n,o,p,q,r,s,t,u,v,w;return i=e-c,j=f-d,k=a-e,l=b-f,m=c-a,n=d-b,o=g-a,p=h-b,q=g-c,r=h-d,s=g-e,t=h-f,w=i*r-j*q,u=m*p-n*o,v=k*t-l*s,w>=0&&v>=0&&u>=0},f=function(a,c,d,f,g,h){var i,j,k,l,m,n,o,p,q;j=a[h[c]].x,k=a[h[c]].y,l=a[h[d]].x,m=a[h[d]].y,n=a[h[f]].x,o=a[h[f]].y;if(b>(l-j)*(o-k)-(m-k)*(n-j))return!1;for(i=0;i<g;i++){if(i==c||i==d||i==f)continue;p=a[h[i]].x,q=a[h[i]].y;if(e(j,k,l,m,n,o,p,q))return!1}return!0};return a.Triangulate=c,a.Triangulate.area=d,a}(THREE.FontUtils),self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace},THREE.TorusGeometry=function(a,b,c,d,e){var f=this;THREE.Geometry.call(f);var g=f;f.radius=a||100,f.tube=b||40,f.segmentsR=c||8,f.segmentsT=d||6,f.arc=e||Math.PI*2;var h=new THREE.Vector3,i=[],j=[];for(var k=0;k<=f.segmentsR;k++)for(var l=0;l<=f.segmentsT;l++){var m=l/f.segmentsT*f.arc,n=k/f.segmentsR*Math.PI*2;h.x=f.radius*Math.cos(m),h.y=f.radius*Math.sin(m);var o=new THREE.Vector3;o.x=(f.radius+f.tube*Math.cos(n))*Math.cos(m),o.y=(f.radius+f.tube*Math.cos(n))*Math.sin(m),o.z=f.tube*Math.sin(n),f.vertices.push(o),i.push(new THREE.UV(l/f.segmentsT,1-k/f.segmentsR)),j.push(o.clone().subSelf(h).normalize())}for(var k=1;k<=f.segmentsR;k++)for(var l=1;l<=f.segmentsT;l++){var p=(f.segmentsT+1)*k+l-1,q=(f.segmentsT+1)*(k-1)+l-1,r=(f.segmentsT+1)*(k-1)+l,s=(f.segmentsT+1)*k+l,t=new THREE.Face4(p,q,r,s,[j[p],j[q],j[r],j[s]]);t.normal.addSelf(j[p]),t.normal.addSelf(j[q]),t.normal.addSelf(j[r]),t.normal.addSelf(j[s]),t.normal.normalize(),f.faces.push(t),f.faceVertexUvs[0].push([i[p].clone(),i[q].clone(),i[r].clone(),i[s].clone()])}f.computeCentroids()},THREE.TorusGeometry.prototype=new THREE.Geometry,THREE.TorusGeometry.prototype.constructor=THREE.TorusGeometry,THREE.TorusKnotGeometry=function(a,b,c,d,e,f,g){function E(a,b,c){return i.vertices.push(new THREE.Vector3(a,b,c))-1}function F(a,b,c,d,e,f){var g=Math.cos(a),h=Math.cos(b),i=Math.sin(a),j=c/d*a,k=Math.cos(j),l=e*(2+k)*.5*g,m=e*(2+k)*i*.5,n=f*e*Math.sin(j)*.5;return new THREE.Vector3(l,m,n)}var h=this;THREE.Geometry.call(h);var i=h;h.radius=a||200,h.tube=b||40,h.segmentsR=c||64,h.segmentsT=d||8,h.p=e||2,h.q=f||3,h.heightScale=g||1,h.grid=new Array(h.segmentsR);var j=new THREE.Vector3,k=new THREE.Vector3,l=new THREE.Vector3;for(var m=0;m<h.segmentsR;++m){h.grid[m]=new Array(h.segmentsT);for(var n=0;n<h.segmentsT;++n){var o=m/h.segmentsR*2*h.p*Math.PI,p=n/h.segmentsT*2*Math.PI,q=F(o,p,h.q,h.p,h.radius,h.heightScale),r=F(o+.01,p,h.q,h.p,h.radius,h.heightScale),s,t;j.sub(r,q),k.add(r,q),l.cross(j,k),k.cross(l,j),l.normalize(),k.normalize(),s=-h.tube*Math.cos(p),t=h.tube*Math.sin(p),q.x+=s*k.x+t*l.x,q.y+=s*k.y+t*l.y,q.z+=s*k.z+t*l.z,h.grid[m][n]=E(q.x,q.y,q.z)}}for(var m=0;m<h.segmentsR;++m)for(var n=0;n<h.segmentsT;++n){var u=(m+1)%h.segmentsR,v=(n+1)%h.segmentsT,w=h.grid[m][n],x=h.grid[u][n],y=h.grid[u][v],z=h.grid[m][v],A=new THREE.UV(m/h.segmentsR,n/h.segmentsT),B=new THREE.UV((m+1)/h.segmentsR,n/h.segmentsT),C=new THREE.UV((m+1)/h.segmentsR,(n+1)/h.segmentsT),D=new THREE.UV(m/h.segmentsR,(n+1)/h.segmentsT);h.faces.push(new THREE.Face4(w,x,y,z)),h.faceVertexUvs[0].push([A,B,C,D])}h.computeCentroids(),h.computeFaceNormals(),h.computeVertexNormals()},THREE.TorusKnotGeometry.prototype=new THREE.Geometry,THREE.TorusKnotGeometry.prototype.constructor=THREE.TorusKnotGeometry,THREE.TubeGeometry=function(a,b,c,d,e,f){function I(a,b,c){return h.vertices.push(new THREE.Vector3(a,b,c))-1}var g=this;THREE.Geometry.call(g),g.path=a,g.segments=b||64,g.radius=c||1,g.segmentsRadius=d||8,g.closed=e||!1,f&&(g.debug=new THREE.Object3D),g.grid=[];var h=g,i,j,k,l=g.segments+1,m,n,o,p,q,r=new THREE.Vector3,s,t,u,v,w,x,y,z,A,B,C,D,E=new THREE.TubeGeometry.FrenetFrames(a,b,e),F=E.tangents,G=E.normals,H=E.binormals;g.tangents=F,g.normals=G,g.binormals=H;for(s=0;s<l;s++){g.grid[s]=[],m=s/(l-1),q=a.getPointAt(m),i=F[s],j=G[s],k=H[s],g.debug&&(g.debug.add(new THREE.ArrowHelper(i,q,c,255)),g.debug.add(new THREE.ArrowHelper(j,q,c,16711680)),g.debug.add(new THREE.ArrowHelper(k,q,c,65280)));for(t=0;t<g.segmentsRadius;t++)n=t/g.segmentsRadius*2*Math.PI,o=-g.radius*Math.cos(n),p=g.radius*Math.sin(n),r.copy(q),r.x+=o*j.x+p*k.x,r.y+=o*j.y+p*k.y,r.z+=o*j.z+p*k.z,g.grid[s][t]=I(r.x,r.y,r.z)}for(s=0;s<g.segments;s++)for(t=0;t<g.segmentsRadius;t++)u=e?(s+1)%g.segments:s+1,v=(t+1)%g.segmentsRadius,w=g.grid[s][t],x=g.grid[u][t],y=g.grid[u][v],z=g.grid[s][v],A=new THREE.UV(s/g.segments,t/g.segmentsRadius),B=new THREE.UV((s+1)/g.segments,t/g.segmentsRadius),C=new THREE.UV((s+1)/g.segments,(t+1)/g.segmentsRadius),D=new THREE.UV(s/g.segments,(t+1)/g.segmentsRadius),g.faces.push(new THREE.Face4(w,x,y,z)),g.faceVertexUvs[0].push([A,B,C,D]);g.computeCentroids(),g.computeFaceNormals(),g.computeVertexNormals()},THREE.TubeGeometry.prototype=new THREE.Geometry,THREE.TubeGeometry.prototype.constructor=THREE.TubeGeometry,THREE.TubeGeometry.FrenetFrames=function(a,b,c){function u(a){h[0]=new THREE.Vector3,i[0]=new THREE.Vector3,a===undefined&&(a=new THREE.Vector3(0,0,1)),h[0].cross(a,g[0]).normalize(),i[0].cross(g[0],h[0]).normalize()}function v(){var b=a.getTangentAt(n);h[0]=(new THREE.Vector3).sub(b,g[0]).normalize(),i[0]=(new THREE.Vector3).cross(g[0],h[0]),h[0].cross(i[0],g[0]).normalize(),i[0].cross(g[0],h[0]).normalize()}function w(){h[0]=new THREE.Vector3,i[0]=new THREE.Vector3,o=Number.MAX_VALUE,p=Math.abs(g[0].x),q=Math.abs(g[0].y),r=Math.abs(g[0].z),p<=o&&(o=p,e.set(1,0,0)),q<=o&&(o=q,e.set(0,1,0)),r<=o&&e.set(0,0,1),j.cross(g[0],e).normalize(),h[0].cross(g[0],j),i[0].cross(g[0],h[0])}var d=new THREE.Vector3,e=new THREE.Vector3,f=new THREE.Vector3,g=[],h=[],i=[],j=new THREE.Vector3,k=new THREE.Matrix4,l=b+1,m,n=1e-4,o,p,q,r,s,t;this.tangents=g,this.normals=h,this.binormals=i;for(s=0;s<l;s++)t=s/(l-1),g[s]=a.getTangentAt(t),g[s].normalize();w();for(s=1;s<l;s++)h[s]=h[s-1].clone(),i[s]=i[s-1].clone(),j.cross(g[s-1],g[s]),j.length()>n&&(j.normalize(),m=Math.acos(g[s-1].dot(g[s])),k.makeRotationAxis(j,m).multiplyVector3(h[s])),i[s].cross(g[s],h[s]);if(c){m=Math.acos(h[0].dot(h[l-1])),m/=l-1,g[0].dot(j.cross(h[0],h[l-1]))>0&&(m=-m);for(s=1;s<l;s++)k.makeRotationAxis(g[s],m*s).multiplyVector3(h[s]),i[s].cross(g[s],h[s])}},THREE.PolyhedronGeometry=function(a,b,c,d){function k(a){var b=a.normalize().clone();b.index=f.vertices.push(b)-1;var c=n(a)/2/Math.PI+.5,d=o(a)/Math.PI+.5;return b.uv=new THREE.UV(c,d),b}function l(a,b,c,d){if(d<1){var e=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]);e.centroid.addSelf(a).addSelf(b).addSelf(c).divideScalar(3),e.normal=e.centroid.clone().normalize(),f.faces.push(e);var g=n(e.centroid);f.faceVertexUvs[0].push([p(a.uv,a,g),p(b.uv,b,g),p(c.uv,c,g)])}else d-=1,l(a,m(a,b),m(a,c),d),l(m(a,b),b,m(b,c),d),l(m(a,c),m(b,c),c,d),l(m(a,b),m(b,c),m(a,c),d)}function m(a,b){i[a.index]||(i[a.index]=[]),i[b.index]||(i[b.index]=[]);var c=i[a.index][b.index];return c===undefined&&(i[a.index][b.index]=i[b.index][a.index]=c=k((new THREE.Vector3).add(a,b).divideScalar(2))),c}function n(a){return Math.atan2(a.z,-a.x)}function o(a){return Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))}function p(a,b,c){return c<0&&a.u===1&&(a=new THREE.UV(a.u-1,a.v)),b.x===0&&b.z===0&&(a=new THREE.UV(c/2/Math.PI+.5,a.v)),a}var e=this;THREE.Geometry.call(e),c=c||1,d=d||0;var f=e;for(var g=0,h=a.length;g<h;g++)k(new THREE.Vector3(a[g][0],a[g][1],a[g][2]));var i=[],j=e.vertices;for(var g=0,h=b.length;g<h;g++)l(j[b[g][0]],j[b[g][1]],j[b[g][2]],d);e.mergeVertices();for(var g=0,h=e.vertices.length;g<h;g++)e.vertices[g].multiplyScalar(c);e.computeCentroids(),e.boundingSphere={radius:c}},THREE.PolyhedronGeometry.prototype=new THREE.Geometry,THREE.PolyhedronGeometry.prototype.constructor=THREE.PolyhedronGeometry,THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2,d=[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],e=[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]];THREE.PolyhedronGeometry.call(this,d,e,a,b)},THREE.IcosahedronGeometry.prototype=new THREE.Geometry,THREE.IcosahedronGeometry.prototype.constructor=THREE.IcosahedronGeometry,THREE.OctahedronGeometry=function(a,b){var c=[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],d=[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]];THREE.PolyhedronGeometry.call(this,c,d,a,b)},THREE.OctahedronGeometry.prototype=new THREE.Geometry,THREE.OctahedronGeometry.prototype.constructor=THREE.OctahedronGeometry,THREE.TetrahedronGeometry=function(a,b){var c=[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],d=[[2,1,0],[0,3,2],[1,3,0],[2,3,1]];THREE.PolyhedronGeometry.call(this,c,d,a,b)},THREE.TetrahedronGeometry.prototype=new THREE.Geometry,THREE.TetrahedronGeometry.prototype.constructor=THREE.TetrahedronGeometry,THREE.ParametricGeometry=function(a,b,c,d){var e=this;THREE.Geometry.call(e);var f=e.vertices,g=e.faces,h=e.faceVertexUvs[0];d=d===undefined?!1:d;var i,j,k,l,m,n=c+1,o=b+1;for(i=0;i<=c;i++){m=i/c;for(j=0;j<=b;j++)l=j/b,k=a(l,m),f.push(k)}var p,q,r,s,t,u,v,w;for(i=0;i<c;i++)for(j=0;j<b;j++)p=i*o+j,q=i*o+j+1,r=(i+1)*o+j,s=(i+1)*o+j+1,t=new THREE.UV(i/b,j/c),u=new THREE.UV(i/b,(j+1)/c),v=new THREE.UV((i+1)/b,j/c),w=new THREE.UV((i+1)/b,(j+1)/c),d?(g.push(new THREE.Face3(p,q,r)),g.push(new THREE.Face3(q,s,r)),h.push([t,u,v]),h.push([u,w,v])):(g.push(new THREE.Face4(p,q,s,r)),h.push([t,u,v,w]));e.computeCentroids(),e.computeFaceNormals(),e.computeVertexNormals()},THREE.ParametricGeometry.prototype=new THREE.Geometry,THREE.ParametricGeometry.prototype.constructor=THREE.ParametricGeometry,THREE.AxisHelper=function(){var a=this;THREE.Object3D.call(a);var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3),b.vertices.push(new THREE.Vector3(0,100,0));var c=new THREE.CylinderGeometry(0,5,25,5,1),d,e;d=new THREE.Line(b,new THREE.LineBasicMaterial({color:16711680})),d.rotation.z=-Math.PI/2,a.add(d),e=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:16711680})),e.position.x=100,e.rotation.z=-Math.PI/2,a.add(e),d=new THREE.Line(b,new THREE.LineBasicMaterial({color:65280})),a.add(d),e=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:65280})),e.position.y=100,a.add(e),d=new THREE.Line(b,new THREE.LineBasicMaterial({color:255})),d.rotation.x=Math.PI/2,a.add(d),e=new THREE.Mesh(c,new THREE.MeshBasicMaterial({color:255})),e.position.z=100,e.rotation.x=Math.PI/2,a.add(e)},THREE.AxisHelper.prototype=new THREE.Object3D,THREE.AxisHelper.prototype.constructor=THREE.AxisHelper,THREE.ArrowHelper=function(a,b,c,d){var e=this;THREE.Object3D.call(e),d===undefined&&(d=16776960),c===undefined&&(c=20);var f=new THREE.Geometry;f.vertices.push(new THREE.Vector3(0,0,0)),f.vertices.push(new THREE.Vector3(0,1,0)),e.line=new THREE.Line(f,new THREE.LineBasicMaterial({color:d})),e.add(e.line);var g=new THREE.CylinderGeometry(0,.05,.25,5,1);e.cone=new THREE.Mesh(g,new THREE.MeshBasicMaterial({color:d})),e.cone.position.set(0,1,0),e.add(e.cone),b instanceof THREE.Vector3&&(e.position=b),e.setDirection(a),e.setLength(c)},THREE.ArrowHelper.prototype=new THREE.Object3D,THREE.ArrowHelper.prototype.constructor=THREE.ArrowHelper,THREE.ArrowHelper.prototype.setDirection=function(a){var b=this,c=(new THREE.Vector3(0,1,0)).crossSelf(a),d=Math.acos((new THREE.Vector3(0,1,0)).dot(a.clone().normalize()));b.matrix=(new THREE.Matrix4).makeRotationAxis(c.normalize(),d),b.rotation.getRotationFromMatrix(b.matrix,b.scale)},THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)},THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a),this.cone.material.color.setHex(a)},THREE.CameraHelper=function(a){function i(a,b,c){j(a,c),j(b,c)}function j(a,b){c.lineGeometry.vertices.push(new THREE.Vector3),c.lineGeometry.colors.push(new THREE.Color(b)),c.pointMap[a]===undefined&&(c.pointMap[a]=[]),c.pointMap[a].push(c.lineGeometry.vertices.length-1)}var b=this;THREE.Object3D.call(b);var c=b;b.lineGeometry=new THREE.Geometry,b.lineMaterial=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors}),b.pointMap={};var d=16755200,e=16711680,f=43775,g=16777215,h=3355443;i("n1","n2",d),i("n2","n4",d),i("n4","n3",d),i("n3","n1",d),i("f1","f2",d),i("f2","f4",d),i("f4","f3",d),i("f3","f1",d),i("n1","f1",d),i("n2","f2",d),i("n3","f3",d),i("n4","f4",d),i("p","n1",e),i("p","n2",e),i("p","n3",e),i("p","n4",e),i("u1","u2",f),i("u2","u3",f),i("u3","u1",f),i("c","t",g),i("p","c",h),i("cn1","cn2",h),i("cn3","cn4",h),i("cf1","cf2",h),i("cf3","cf4",h),b.camera=a;b.update(a),b.lines=new THREE.Line(b.lineGeometry,b.lineMaterial,THREE.LinePieces),b.add(b.lines)},THREE.CameraHelper.prototype=new THREE.Object3D,THREE.CameraHelper.prototype.constructor=THREE.CameraHelper,THREE.CameraHelper.prototype.update=function(){function e(a,b,c,e){THREE.CameraHelper.__v.set(b,c,e),THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);var f=d.pointMap[a];if(f!==undefined)for(var g=0,h=f.length;g<h;g++){var i=f[g];d.lineGeometry.vertices[i].copy(THREE.CameraHelper.__v)}}var a=this.camera,b=1,c=1,d=this;THREE.CameraHelper.__c.projectionMatrix.copy(a.projectionMatrix),e("c",0,0,-1),e("t",0,0,1),e("n1",-b,-c,-1),e("n2",b,-c,-1),e("n3",-b,c,-1),e("n4",b,c,-1),e("f1",-b,-c,1),e("f2",b,-c,1),e("f3",-b,c,1),e("f4",b,c,1),e("u1",b*.7,c*1.1,-1),e("u2",-b*.7,c*1.1,-1),e("u3",0,c*2,-1),e("cf1",-b,0,1),e("cf2",b,0,1),e("cf3",0,-c,1),e("cf4",0,c,1),e("cn1",-b,0,-1),e("cn2",b,0,-1),e("cn3",0,-c,-1),e("cn4",0,c,-1);this.lineGeometry.verticesNeedUpdate=!0},THREE.CameraHelper.__projector=new THREE.Projector,THREE.CameraHelper.__v=new THREE.Vector3,THREE.CameraHelper.__c=new THREE.Camera,THREE.SubdivisionModifier=function(a){var b=this;b.subdivisions=a===undefined?1:a,b.useOldVertexColors=!1,b.supportUVs=!0,b.debug=!1},THREE.SubdivisionModifier.prototype.constructor=THREE.SubdivisionModifier,THREE.SubdivisionModifier.prototype.modify=function(a){var b=this.subdivisions;while(b-->0)this.smooth(a)},THREE.SubdivisionModifier.prototype.smooth=function(a){function e(a,c,d){b.push(new THREE.Vector3(a,c,d))}function g(){f.debug&&console.log.apply(console,arguments)}function h(){console&&console.log.apply(console,arguments)}function i(a,b,e,h,i,j,k){var l=new THREE.Face4(a,b,e,h,null,i.color,i.material);if(f.useOldVertexColors){l.vertexColors=[];var m,n,o;for(var p=0;p<4;p++){o=j[p],m=new THREE.Color,m.setRGB(0,0,0);for(var q=0,r=0;q<o.length;q++)n=i.vertexColors[o[q]-1],m.r+=n.r,m.g+=n.g,m.b+=n.b;m.r/=o.length,m.g/=o.length,m.b/=o.length,l.vertexColors[p]=m}}c.push(l);if(f.supportUVs){var s=[v(a,""),v(b,k),v(e,k),v(h,k)];s[0]?s[1]?s[2]?s[3]?d.push(s):g("d :( ",h+":"+k):g("c :( ",e+":"+k):g("b :( ",b+":"+k):g("a :( ",a+":"+k)}}function j(a,b){return Math.min(a,b)+"_"+Math.max(a,b)}function k(a){function g(a,b){f[a]===undefined&&(f[a]=[]),f[a].push(b)}var b,c,d,e,f={};for(b=0,c=a.faces.length;b<c;b++)d=a.faces[b],d instanceof THREE.Face3?(e=j(d.a,d.b),g(e,b),e=j(d.b,d.c),g(e,b),e=j(d.c,d.a),g(e,b)):d instanceof THREE.Face4&&(e=j(d.a,d.b),g(e,b),e=j(d.b,d.c),g(e,b),e=j(d.c,d.d),g(e,b),e=j(d.d,d.a),g(e,b));return f}function v(a,b){var c=a+":"+b,d=t[c];return d?d:(a>=u&&a<u+m.length?g("face pt"):g("edge pt"),h("warning, UV not found for",c),null)}function w(a,b,c){var d=a+":"+b;d in t?h("dup vertexNo",a,"oldFaceNo",b,"value",c,"key",d,t[d]):t[d]=c}function T(a,b){R[a]===undefined&&(R[a]=[]),R[a].push(b)}function U(a,b,c){S[a]===undefined&&(S[a]={}),S[a][b]=c}var b=[],c=[],d=[];var f=this;var l=a.vertices,m=a.faces,n=l.concat(),o=[],p={},q={},r=[],s=[],t={},u=l.length;var x,y,z,A,B,C=a.faceVertexUvs[0],D="abcd",E;g("originalFaces, uvs, originalVerticesLength",m.length,C.length,u);if(f.supportUVs)for(x=0,y=C.length;x<y;x++)for(z=0,A=C[x].length;z<A;z++)E=m[x][D.charAt(z)],w(E,x,C[x][z]);C.length==0&&(f.supportUVs=!1);var F=0;for(var G in t)F++;F||(f.supportUVs=!1,g("no uvs")),g("-- Original Faces + Vertices UVs completed",t,"vs",C.length);var H;for(x=0,y=m.length;x<y;x++){B=m[x],o.push(B.centroid),n.push(B.centroid);if(!f.supportUVs)continue;H=new THREE.UV,B instanceof THREE.Face3?(H.u=v(B.a,x).u+v(B.b,x).u+v(B.c,x).u,H.v=v(B.a,x).v+v(B.b,x).v+v(B.c,x).v,H.u/=3,H.v/=3):B instanceof THREE.Face4&&(H.u=v(B.a,x).u+v(B.b,x).u+v(B.c,x).u+v(B.d,x).u,H.v=v(B.a,x).v+v(B.b,x).v+v(B.c,x).v+v(B.d,x).v,H.u/=4,H.v/=4),w(u+x,"",H)}g("-- added UVs for new Faces",t);var I=k(a),J,K,L,M,N=0,O,P,Q,R={},S={};for(x in I){J=I[x],O=x.split("_"),P=O[0],Q=O[1],T(P,[P,Q]),T(Q,[P,Q]);for(z=0,A=J.length;z<A;z++)B=J[z],U(P,B,x),U(Q,B,x);J.length<2&&(q[x]=!0,r[P]=!0,r[Q]=!0)}g("vertexEdgeMap",R,"vertexFaceMap",S);for(x in I){J=I[x],K=J[0],L=J[1],O=x.split("_"),P=O[0],Q=O[1],M=new THREE.Vector3,q[x]?(M.addSelf(l[P]),M.addSelf(l[Q]),M.multiplyScalar(.5),r[n.length]=!0):(M.addSelf(o[K]),M.addSelf(o[L]),M.addSelf(l[P]),M.addSelf(l[Q]),M.multiplyScalar(.25)),p[x]=u+m.length+N,n.push(M),N++;if(!f.supportUVs)continue;H=new THREE.UV,H.u=v(P,K).u+v(Q,K).u,H.v=v(P,K).v+v(Q,K).v,H.u/=2,H.v/=2,w(p[x],K,H),q[x]||(H=new THREE.UV,H.u=v(P,L).u+v(Q,L).u,H.v=v(P,L).v+v(Q,L).v,H.u/=2,H.v/=2,w(p[x],L,H))}g("-- Step 2 done");var V,W,X,Y,Z,$,_,ab=["123","12","2","23"],bb=["123","23","3","31"],cb=["123","31","1","12"],db=["1234","12","2","23"],eb=["1234","23","3","34"],fb=["1234","34","4","41"],gb=["1234","41","1","12"];for(x=0,y=o.length;x<y;x++)V=o[x],B=m[x],W=u+x,B instanceof THREE.Face3?(X=j(B.a,B.b),Y=j(B.b,B.c),_=j(B.c,B.a),i(W,p[X],B.b,p[Y],B,ab,x),i(W,p[Y],B.c,p[_],B,bb,x),i(W,p[_],B.a,p[X],B,cb,x)):B instanceof THREE.Face4?(X=j(B.a,B.b),Y=j(B.b,B.c),Z=j(B.c,B.d),$=j(B.d,B.a),i(W,p[X],B.b,p[Y],B,db,x),i(W,p[Y],B.c,p[Z],B,eb,x),i(W,p[Z],B.d,p[$],B,fb,x),i(W,p[$],B.a,p[X],B,gb,x)):g("face should be a face!",B);b=n;var hb=new THREE.Vector3,ib=new THREE.Vector3,jb;for(x=0,y=l.length;x<y;x++){if(R[x]===undefined)continue;hb.set(0,0,0),ib.set(0,0,0);var kb=new THREE.Vector3(0,0,0),lb=0;for(z in S[x])hb.addSelf(o[z]),lb++;var mb=0;jb=R[x].length;for(z=0;z<jb;z++)q[j(R[x][z][0],R[x][z][1])]&&mb++;if(mb==2)continue;hb.divideScalar(lb);for(z=0;z<jb;z++){J=R[x][z];var nb=l[J[0]].clone().addSelf(l[J[1]]).divideScalar(2);ib.addSelf(nb)}ib.divideScalar(jb),kb.addSelf(l[x]),kb.multiplyScalar(jb-3),kb.addSelf(hb),kb.addSelf(ib.multiplyScalar(2)),kb.divideScalar(jb),b[x]=kb}var ob=a;ob.vertices=b,ob.faces=c,ob.faceVertexUvs[0]=d,delete ob.__tmpVertices,ob.computeCentroids(),ob.computeFaceNormals(),ob.computeVertexNormals()},THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this),this.render=function(a){}},THREE.ImmediateRenderObject.prototype=new THREE.Object3D,THREE.ImmediateRenderObject.prototype.constructor=THREE.ImmediateRenderObject,THREE.LensFlare=function(a,b,c,d,e){var f=this;THREE.Object3D.call(f),f.lensFlares=[],f.positionScreen=new THREE.Vector3,f.customUpdateCallback=undefined,a!==undefined&&f.add(a,b,c,d,e)},THREE.LensFlare.prototype=new THREE.Object3D,THREE.LensFlare.prototype.constructor=THREE.LensFlare,THREE.LensFlare.prototype.supr=THREE.Object3D.prototype,THREE.LensFlare.prototype.add=function(a,b,c,d,e,f){b===undefined&&(b=-1),c===undefined&&(c=0),f===undefined&&(f=1),e===undefined&&(e=new THREE.Color(16777215)),d===undefined&&(d=THREE.NormalBlending),c=Math.min(c,Math.max(0,c)),this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:f,color:e,blending:d})},THREE.LensFlare.prototype.updateLensFlares=function(){var a=this,b,c=a.lensFlares.length,d,e=-a.positionScreen.x*2,f=-a.positionScreen.y*2;for(b=0;b<c;b++)d=a.lensFlares[b],d.x=a.positionScreen.x+e*d.distance,d.y=a.positionScreen.y+f*d.distance,d.wantedRotation=d.x*Math.PI*.25,d.rotation+=(d.wantedRotation-d.rotation)*.25},THREE.MorphBlendMesh=function(a,b){var c=this;THREE.Mesh.call(c,a,b),c.animationsMap={},c.animationsList=[];var d=c.geometry.morphTargets.length,e="__default",f=0,g=d-1,h=d/1;c.createAnimation(e,f,g,h),c.setAnimationWeight(e,1)},THREE.MorphBlendMesh.prototype=new THREE.Mesh,THREE.MorphBlendMesh.prototype.constructor=THREE.MorphBlendMesh,THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){var e={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=e,this.animationsList.push(e)},THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry;for(var f=0,g=e.morphTargets.length;f<g;f++){var h=e.morphTargets[f],i=h.name.match(b);if(i&&i.length>1){var j=i[1],k=i[2];d[j]||(d[j]={start:Infinity,end:-Infinity});var l=d[j];f<l.start&&(l.start=f),f>l.end&&(l.end=f),c||(c=j)}}for(var j in d){var l=d[j];this.createAnimation(j,l.start,l.end,a)}this.firstAnimation=c},THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){var b=this.animationsMap[a];b&&(b.direction=1,b.directionBackwards=!1)},THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){var b=this.animationsMap[a];b&&(b.direction=-1,b.directionBackwards=!0)},THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)},THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)},THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)},THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)},THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0,c=this.animationsMap[a];return c&&(b=c.time),b},THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1,c=this.animationsMap[a];return c&&(b=c.duration),b},THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")},THREE.MorphBlendMesh.prototype.stopAnimation=function(a){var b=this.animationsMap[a];b&&(b.active=!1)},THREE.MorphBlendMesh.prototype.update=function(a){var b=this;for(var c=0,d=b.animationsList.length;c<d;c++){var e=b.animationsList[c];if(!e.active)continue;var f=e.duration/e.length;e.time+=e.direction*a;if(e.mirroredLoop){if(e.time>e.duration||e.time<0)e.direction*=-1,e.time>e.duration&&(e.time=e.duration,e.directionBackwards=!0),e.time<0&&(e.time=0,e.directionBackwards=!1)}else e.time=e.time%e.duration,e.time<0&&(e.time+=e.duration);var g=e.startFrame+THREE.Math.clamp(Math.floor(e.time/f),0,e.length-1),h=e.weight;g!==e.currentFrame&&(b.morphTargetInfluences[e.lastFrame]=0,b.morphTargetInfluences[e.currentFrame]=1*h,b.morphTargetInfluences[g]=0,e.lastFrame=e.currentFrame,e.currentFrame=g);var i=e.time%f/f;e.directionBackwards&&(i=1-i),b.morphTargetInfluences[e.currentFrame]=i*h,b.morphTargetInfluences[e.lastFrame]=(1-i)*h}},THREE.LensFlarePlugin=function(){function d(b){var c=a.createProgram(),d=a.createShader(a.FRAGMENT_SHADER),e=a.createShader(a.VERTEX_SHADER);return a.shaderSource(d,b.fragmentShader),a.shaderSource(e,b.vertexShader),a.compileShader(d),a.compileShader(e),a.attachShader(c,d),a.attachShader(c,e),a.linkProgram(c),c}var a,b,c={};this.init=function(e){a=e.context,b=e,c.vertices=new Float32Array(16),c.faces=new Uint16Array(6);var f=0;c.vertices[f++]=-1,c.vertices[f++]=-1,c.vertices[f++]=0,c.vertices[f++]=0,c.vertices[f++]=1,c.vertices[f++]=-1,c.vertices[f++]=1,c.vertices[f++]=0,c.vertices[f++]=1,c.vertices[f++]=1,c.vertices[f++]=1,c.vertices[f++]=1,c.vertices[f++]=-1,c.vertices[f++]=1,c.vertices[f++]=0,c.vertices[f++]=1,f=0,c.faces[f++]=0,c.faces[f++]=1,c.faces[f++]=2,c.faces[f++]=0,c.faces[f++]=2,c.faces[f++]=3,c.vertexBuffer=a.createBuffer(),c.elementBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,c.vertexBuffer),a.bufferData(a.ARRAY_BUFFER,c.vertices,a.STATIC_DRAW),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,c.elementBuffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,c.faces,a.STATIC_DRAW),c.tempTexture=a.createTexture(),c.occlusionTexture=a.createTexture(),a.bindTexture(a.TEXTURE_2D,c.tempTexture),a.texImage2D(a.TEXTURE_2D,0,a.RGB,16,16,0,a.RGB,a.UNSIGNED_BYTE,null),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.bindTexture(a.TEXTURE_2D,c.occlusionTexture),a.texImage2D(a.TEXTURE_2D,0,a.RGBA,16,16,0,a.RGBA,a.UNSIGNED_BYTE,null),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_S,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_WRAP_T,a.CLAMP_TO_EDGE),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MAG_FILTER,a.NEAREST),a.texParameteri(a.TEXTURE_2D,a.TEXTURE_MIN_FILTER,a.NEAREST),a.getParameter(a.MAX_VERTEX_TEXTURE_IMAGE_UNITS)<=0?(c.hasVertexTexture=!1,c.program=d(THREE.ShaderFlares.lensFlare)):(c.hasVertexTexture=!0,c.program=d(THREE.ShaderFlares.lensFlareVertexTexture)),c.attributes={},c.uniforms={},c.attributes.vertex=a.getAttribLocation(c.program,"position"),c.attributes.uv=a.getAttribLocation(c.program,"uv"),c.uniforms.renderType=a.getUniformLocation(c.program,"renderType"),c.uniforms.map=a.getUniformLocation(c.program,"map"),c.uniforms.occlusionMap=a.getUniformLocation(c.program,"occlusionMap"),c.uniforms.opacity=a.getUniformLocation(c.program,"opacity"),c.uniforms.color=a.getUniformLocation(c.program,"color"),c.uniforms.scale=a.getUniformLocation(c.program,"scale"),c.uniforms.rotation=a.getUniformLocation(c.program,"rotation"),c.uniforms.screenPosition=a.getUniformLocation(c.program,"screenPosition"),c.attributesEnabled=!1},this.render=function(d,e,f,g){var h=d.__webglFlares,i=h.length;if(!i)return;var j=new THREE.Vector3,k=g/f,l=f*.5,m=g*.5,n=16/g,o=new THREE.Vector2(n*k,n),p=new THREE.Vector3(1,1,0),q=new THREE.Vector2(1,1),r=c.uniforms,s=c.attributes;a.useProgram(c.program),c.attributesEnabled||(a.enableVertexAttribArray(c.attributes.vertex),a.enableVertexAttribArray(c.attributes.uv),c.attributesEnabled=!0),a.uniform1i(r.occlusionMap,0),a.uniform1i(r.map,1),a.bindBuffer(a.ARRAY_BUFFER,c.vertexBuffer),a.vertexAttribPointer(s.vertex,2,a.FLOAT,!1,16,0),a.vertexAttribPointer(s.uv,2,a.FLOAT,!1,16,8),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,c.elementBuffer),a.disable(a.CULL_FACE),a.depthMask(!1);var t,u,v,w,x;for(t=0;t<i;t++){n=16/g,o.set(n*k,n),w=h[t],j.set(w.matrixWorld.elements[12],w.matrixWorld.elements[13],w.matrixWorld.elements[14]),e.matrixWorldInverse.multiplyVector3(j),e.projectionMatrix.multiplyVector3(j),p.copy(j),q.x=p.x*l+l,q.y=p.y*m+m;if(c.hasVertexTexture||q.x>0&&q.x<f&&q.y>0&&q.y<g){a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,c.tempTexture),a.copyTexImage2D(a.TEXTURE_2D,0,a.RGB,q.x-8,q.y-8,16,16,0),a.uniform1i(r.renderType,0),a.uniform2f(r.scale,o.x,o.y),a.uniform3f(r.screenPosition,p.x,p.y,p.z),a.disable(a.BLEND),a.enable(a.DEPTH_TEST),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0),a.activeTexture(a.TEXTURE0),a.bindTexture(a.TEXTURE_2D,c.occlusionTexture),a.copyTexImage2D(a.TEXTURE_2D,0,a.RGBA,q.x-8,q.y-8,16,16,0),a.uniform1i(r.renderType,1),a.disable(a.DEPTH_TEST),a.activeTexture(a.TEXTURE1),a.bindTexture(a.TEXTURE_2D,c.tempTexture),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0),w.positionScreen.copy(p),w.customUpdateCallback?w.customUpdateCallback(w):w.updateLensFlares(),a.uniform1i(r.renderType,2),a.enable(a.BLEND);for(u=0,v=w.lensFlares.length;u<v;u++)x=w.lensFlares[u],x.opacity>.001&&x.scale>.001&&(p.x=x.x,p.y=x.y,p.z=x.z,n=x.size*x.scale/g,o.x=n*k,o.y=n,a.uniform3f(r.screenPosition,p.x,p.y,p.z),a.uniform2f(r.scale,o.x,o.y),a.uniform1f(r.rotation,x.rotation),a.uniform1f(r.opacity,x.opacity),a.uniform3f(r.color,x.color.r,x.color.g,x.color.b),b.setBlending(x.blending,x.blendEquation,x.blendSrc,x.blendDst),b.setTexture(x.texture,1),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0))}}a.enable(a.CULL_FACE),a.enable(a.DEPTH_TEST),a.depthMask(!0)}},THREE.ShadowMapPlugin=function(){function i(a,b){var c=new THREE.DirectionalLight;c.isVirtual=!0,c.onlyShadow=!0,c.castShadow=!0,c.shadowCameraNear=a.shadowCameraNear,c.shadowCameraFar=a.shadowCameraFar,c.shadowCameraLeft=a.shadowCameraLeft,c.shadowCameraRight=a.shadowCameraRight,c.shadowCameraBottom=a.shadowCameraBottom,c.shadowCameraTop=a.shadowCameraTop,c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b],c.shadowMapWidth=a.shadowCascadeWidth[b],c.shadowMapHeight=a.shadowCascadeHeight[b],c.pointsWorld=[],c.pointsFrustum=[];var d=c.pointsWorld,e=c.pointsFrustum;for(var f=0;f<8;f++)d[f]=new THREE.Vector3,e[f]=new THREE.Vector3;var g=a.shadowCascadeNearZ[b],h=a.shadowCascadeFarZ[b];return e[0].set(-1,-1,g),e[1].set(1,-1,g),e[2].set(-1,1,g),e[3].set(1,1,g),e[4].set(-1,-1,h),e[5].set(1,-1,h),e[6].set(-1,1,h),e[7].set(1,1,h),c}function j(a,b){var c=a.shadowCascadeArray[b];c.position.copy(a.position),c.target.position.copy(a.target.position),c.lookAt(c.target),c.shadowCameraVisible=a.shadowCameraVisible,c.shadowDarkness=a.shadowDarkness,c.shadowBias=a.shadowCascadeBias[b];var d=a.shadowCascadeNearZ[b],e=a.shadowCascadeFarZ[b],f=c.pointsFrustum;f[0].z=d,f[1].z=d,f[2].z=d,f[3].z=d,f[4].z=e,f[5].z=e,f[6].z=e,f[7].z=e}function k(a,b){var c=b.shadowCamera,d=b.pointsFrustum,e=b.pointsWorld;g.set(Infinity,Infinity,Infinity),h.set(-Infinity,-Infinity,-Infinity);for(var f=0;f<8;f++){var i=e[f];i.copy(d[f]),THREE.ShadowMapPlugin.__projector.unprojectVector(i,a),c.matrixWorldInverse.multiplyVector3(i),i.x<g.x&&(g.x=i.x),i.x>h.x&&(h.x=i.x),i.y<g.y&&(g.y=i.y),i.y>h.y&&(h.y=i.y),i.z<g.z&&(g.z=i.z),i.z>h.z&&(h.z=i.z)}c.left=g.x,c.right=h.x,c.top=h.y,c.bottom=g.y,c.updateProjectionMatrix()}var a,b,c,d,e=new THREE.Frustum,f=new THREE.Matrix4,g=new THREE.Vector3,h=new THREE.Vector3;this.init=function(e){a=e.context,b=e;var f=THREE.ShaderLib.depthRGBA,g=THREE.UniformsUtils.clone(f.uniforms);c=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:g}),d=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:g,morphTargets:!0}),c._shadowPass=!0,d._shadowPass=!0},this.render=function(a,c){if(!b.shadowMapEnabled||!b.shadowMapAutoUpdate)return;this.update(a,c)},this.update=function(g,h){var l,m,n,o,p,q,r,s,t,u,v,w,x,y,z=[],A=0,B=null;a.clearColor(1,1,1,1),a.disable(a.BLEND),a.enable(a.CULL_FACE),b.shadowMapCullFrontFaces?a.cullFace(a.FRONT):a.cullFace(a.BACK),b.setDepthTest(!0);for(l=0,m=g.__lights.length;l<m;l++){x=g.__lights[l];if(!x.castShadow)continue;if(x instanceof THREE.DirectionalLight&&x.shadowCascade)for(p=0;p<x.shadowCascadeCount;p++){var C;if(!x.shadowCascadeArray[p]){C=i(x,p),C.originalCamera=h;var D=new THREE.Gyroscope;D.position=x.shadowCascadeOffset,D.add(C),D.add(C.target),h.add(D),x.shadowCascadeArray[p]=C,console.log("Created virtualLight",C)}else C=x.shadowCascadeArray[p];j(x,p),z[A]=C,A++}else z[A]=x,A++}for(l=0,m=z.length;l<m;l++){x=z[l];if(!x.shadowMap){var E={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBAFormat};x.shadowMap=new THREE.WebGLRenderTarget(x.shadowMapWidth,x.shadowMapHeight,E),x.shadowMapSize=new THREE.Vector2(x.shadowMapWidth,x.shadowMapHeight),x.shadowMatrix=new THREE.Matrix4}if(!x.shadowCamera){if(x instanceof THREE.SpotLight)x.shadowCamera=new THREE.PerspectiveCamera(x.shadowCameraFov,x.shadowMapWidth/x.shadowMapHeight,x.shadowCameraNear,x.shadowCameraFar);else{if(!(x instanceof THREE.DirectionalLight)){console.error("Unsupported light type for shadow");continue}x.shadowCamera=new THREE.OrthographicCamera(x.shadowCameraLeft,x.shadowCameraRight,x.shadowCameraTop,x.shadowCameraBottom,x.shadowCameraNear,x.shadowCameraFar)}g.add(x.shadowCamera),b.autoUpdateScene&&g.updateMatrixWorld()}x.shadowCameraVisible&&!x.cameraHelper&&(x.cameraHelper=new THREE.CameraHelper(x.shadowCamera),x.shadowCamera.add(x.cameraHelper)),x.isVirtual&&C.originalCamera==h&&k(h,x),q=x.shadowMap,r=x.shadowMatrix,s=x.shadowCamera,s.position.copy(x.matrixWorld.getPosition()),s.lookAt(x.target.matrixWorld.getPosition()),s.updateMatrixWorld(),s.matrixWorldInverse.getInverse(s.matrixWorld),x.cameraHelper&&(x.cameraHelper.lines.visible=x.shadowCameraVisible),x.shadowCameraVisible&&x.cameraHelper.update(),r.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),r.multiplySelf(s.projectionMatrix),r.multiplySelf(s.matrixWorldInverse),s._viewMatrixArray||(s._viewMatrixArray=new Float32Array(16)),s._projectionMatrixArray||(s._projectionMatrixArray=new Float32Array(16)),s.matrixWorldInverse.flattenToArray(s._viewMatrixArray),s.projectionMatrix.flattenToArray(s._projectionMatrixArray),f.multiply(s.projectionMatrix,s.matrixWorldInverse),e.setFromMatrix(f),b.setRenderTarget(q),b.clear(),y=g.__webglObjects;for(n=0,o=y.length;n<o;n++)v=y[n],w=v.object,v.render=!1,w.visible&&w.castShadow&&(!(w instanceof THREE.Mesh)||!w.frustumCulled||e.contains(w))&&(w._modelViewMatrix.multiply(s.matrixWorldInverse,w.matrixWorld),v.render=!0);for(n=0,o=y.length;n<o;n++)v=y[n],v.render&&(w=v.object,t=v.buffer,w.customDepthMaterial?u=w.customDepthMaterial:w.geometry.morphTargets.length?u=d:u=c,t instanceof THREE.BufferGeometry?b.renderBufferDirect(s,g.__lights,B,u,t,w):b.renderBuffer(s,g.__lights,B,u,t,w));y=g.__webglObjectsImmediate;for(n=0,o=y.length;n<o;n++)v=y[n],w=v.object,w.visible&&w.castShadow&&(w._modelViewMatrix.multiply(s.matrixWorldInverse,w.matrixWorld),b.renderImmediateObject(s,g.__lights,B,c,w))}var F=b.getClearColor(),G=b.getClearAlpha();a.clearColor(F.r,F.g,F.b,G),a.enable(a.BLEND),b.shadowMapCullFrontFaces&&a.cullFace(a.BACK)}},THREE.ShadowMapPlugin.__projector=new THREE.Projector,THREE.SpritePlugin=function(){function d(b){var c=a.createProgram(),d=a.createShader(a.FRAGMENT_SHADER),e=a.createShader(a.VERTEX_SHADER);return a.shaderSource(d,b.fragmentShader),a.shaderSource(e,b.vertexShader),a.compileShader(d),a.compileShader(e),a.attachShader(c,d),a.attachShader(c,e),a.linkProgram(c),c}function e(a,b){return b.z-a.z}var a,b,c={};this.init=function(e){a=e.context,b=e,c.vertices=new Float32Array(16),c.faces=new Uint16Array(6);var f=0;c.vertices[f++]=-1,c.vertices[f++]=-1,c.vertices[f++]=0,c.vertices[f++]=1,c.vertices[f++]=1,c.vertices[f++]=-1,c.vertices[f++]=1,c.vertices[f++]=1,c.vertices[f++]=1,c.vertices[f++]=1,c.vertices[f++]=1,c.vertices[f++]=0,c.vertices[f++]=-1,c.vertices[f++]=1,c.vertices[f++]=0,c.vertices[f++]=0,f=0,c.faces[f++]=0,c.faces[f++]=1,c.faces[f++]=2,c.faces[f++]=0,c.faces[f++]=2,c.faces[f++]=3,c.vertexBuffer=a.createBuffer(),c.elementBuffer=a.createBuffer(),a.bindBuffer(a.ARRAY_BUFFER,c.vertexBuffer),a.bufferData(a.ARRAY_BUFFER,c.vertices,a.STATIC_DRAW),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,c.elementBuffer),a.bufferData(a.ELEMENT_ARRAY_BUFFER,c.faces,a.STATIC_DRAW),c.program=d(THREE.ShaderSprite.sprite),c.attributes={},c.uniforms={},c.attributes.position=a.getAttribLocation(c.program,"position"),c.attributes.uv=a.getAttribLocation(c.program,"uv"),c.uniforms.uvOffset=a.getUniformLocation(c.program,"uvOffset"),c.uniforms.uvScale=a.getUniformLocation(c.program,"uvScale"),c.uniforms.rotation=a.getUniformLocation(c.program,"rotation"),c.uniforms.scale=a.getUniformLocation(c.program,"scale"),c.uniforms.alignment=a.getUniformLocation(c.program,"alignment"),c.uniforms.color=a.getUniformLocation(c.program,"color"),c.uniforms.map=a.getUniformLocation(c.program,"map"),c.uniforms.opacity=a.getUniformLocation(c.program,"opacity"),c.uniforms.useScreenCoordinates=a.getUniformLocation(c.program,"useScreenCoordinates"),c.uniforms.affectedByDistance=a.getUniformLocation(c.program,"affectedByDistance"),c.uniforms.screenPosition=a.getUniformLocation(c.program,"screenPosition"),c.uniforms.modelViewMatrix=a.getUniformLocation(c.program,"modelViewMatrix"),c.uniforms.projectionMatrix=a.getUniformLocation(c.program,"projectionMatrix"),c.attributesEnabled=!1},this.render=function(d,f,g,h){var i=d.__webglSprites,j=i.length;if(!j)return;var k=c.attributes,l=c.uniforms,m=h/g,n=g*.5,o=h*.5,p=!0;a.useProgram(c.program),c.attributesEnabled||(a.enableVertexAttribArray(k.position),a.enableVertexAttribArray(k.uv),c.attributesEnabled=!0),a.disable(a.CULL_FACE),a.enable(a.BLEND),a.depthMask(!0),a.bindBuffer(a.ARRAY_BUFFER,c.vertexBuffer),a.vertexAttribPointer(k.position,2,a.FLOAT,!1,16,0),a.vertexAttribPointer(k.uv,2,a.FLOAT,!1,16,8),a.bindBuffer(a.ELEMENT_ARRAY_BUFFER,c.elementBuffer),a.uniformMatrix4fv(l.projectionMatrix,!1,f._projectionMatrixArray),a.activeTexture(a.TEXTURE0),a.uniform1i(l.map,0);var q,r,s,t=[];for(q=0;q<j;q++){r=i[q];if(!r.visible||r.opacity===0)continue;r.useScreenCoordinates?r.z=-r.position.z:(r._modelViewMatrix.multiply(f.matrixWorldInverse,r.matrixWorld),r.z=-r._modelViewMatrix.elements[14])}i.sort(e);for(q=0;q<j;q++){r=i[q];if(!r.visible||r.opacity===0)continue;r.map&&r.map.image&&r.map.image.width&&(r.useScreenCoordinates?(a.uniform1i(l.useScreenCoordinates,1),a.uniform3f(l.screenPosition,(r.position.x-n)/n,(o-r.position.y)/o,Math.max(0,Math.min(1,r.position.z)))):(a.uniform1i(l.useScreenCoordinates,0),a.uniform1i(l.affectedByDistance,r.affectedByDistance?1:0),a.uniformMatrix4fv(l.modelViewMatrix,!1,r._modelViewMatrix.elements)),s=r.map.image.width/(r.scaleByViewport?h:1),t[0]=s*m*r.scale.x,t[1]=s*r.scale.y,a.uniform2f(l.uvScale,r.uvScale.x,r.uvScale.y),a.uniform2f(l.uvOffset,r.uvOffset.x,r.uvOffset.y),a.uniform2f(l.alignment,r.alignment.x,r.alignment.y),a.uniform1f(l.opacity,r.opacity),a.uniform3f(l.color,r.color.r,r.color.g,r.color.b),a.uniform1f(l.rotation,r.rotation),a.uniform2fv(l.scale,t),r.mergeWith3D&&!p?(a.enable(a.DEPTH_TEST),p=!0):!r.mergeWith3D&&p&&(a.disable(a.DEPTH_TEST),p=!1),b.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst),b.setTexture(r.map,0),a.drawElements(a.TRIANGLES,6,a.UNSIGNED_SHORT,0))}a.enable(a.CULL_FACE),a.enable(a.DEPTH_TEST),a.depthMask(!0)}},THREE.DepthPassPlugin=function(){var a=this;a.enabled=!1,a.renderTarget=null;var b,c,d,e,f=new THREE.Frustum,g=new THREE.Matrix4;a.init=function(a){b=a.context,c=a;var f=THREE.ShaderLib.depthRGBA,g=THREE.UniformsUtils.clone(f.uniforms);d=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:g}),e=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:g,morphTargets:!0}),d._shadowPass=!0,e._shadowPass=!0},a.render=function(a,b){if(!this.enabled)return;this.update(a,b)},a.update=function(a,h){var i,j,k,l,m,n,o,p=null;b.clearColor(1,1,1,1),b.disable(b.BLEND),c.setDepthTest(!0),c.autoUpdateScene&&a.updateMatrixWorld(),h._viewMatrixArray||(h._viewMatrixArray=new Float32Array(16)),h._projectionMatrixArray||(h._projectionMatrixArray=new Float32Array(16)),h.matrixWorldInverse.getInverse(h.matrixWorld),h.matrixWorldInverse.flattenToArray(h._viewMatrixArray),h.projectionMatrix.flattenToArray(h._projectionMatrixArray),g.multiply(h.projectionMatrix,h.matrixWorldInverse),f.setFromMatrix(g),c.setRenderTarget(this.renderTarget),c.clear(),o=a.__webglObjects;for(i=0,j=o.length;i<j;i++)m=o[i],n=m.object,m.render=!1,n.visible&&(!(n instanceof THREE.Mesh)||!n.frustumCulled||f.contains(n))&&(n._modelViewMatrix.multiply(h.matrixWorldInverse,n.matrixWorld),m.render=!0);for(i=0,j=o.length;i<j;i++)m=o[i],m.render&&(n=m.object,k=m.buffer,c.setObjectFaces(n),n.customDepthMaterial?l=n.customDepthMaterial:n.geometry.morphTargets.length?l=e:l=d,k instanceof THREE.BufferGeometry?c.renderBufferDirect(h,a.__lights,p,l,k,n):c.renderBuffer(h,a.__lights,p,l,k,n));o=a.__webglObjectsImmediate;for(i=0,j=o.length;i<j;i++)m=o[i],n=m.object,n.visible&&n.castShadow&&(n._modelViewMatrix.multiply(h.matrixWorldInverse,n.matrixWorld),c.renderImmediateObject(h,a.__lights,p,d,n));var q=c.getClearColor(),r=c.getClearAlpha();b.clearColor(q.r,q.g,q.b,r),b.enable(b.BLEND)}},THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}},THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int affectedByDistance;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( affectedByDistance == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\n}"}}